<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>广外编程社官网</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-06-14T06:48:54.521Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>广外编程社</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo优化</title>
    <link href="http://yoursite.com/2020/06/13/Hexo%E4%BC%98%E5%8C%96/"/>
    <id>http://yoursite.com/2020/06/13/Hexo%E4%BC%98%E5%8C%96/</id>
    <published>2020-06-13T12:00:54.000Z</published>
    <updated>2020-06-14T06:48:54.521Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>本文将讲述一些博客主题的美化、实用功能的添加，本文以作者 <a href="https://luuman.github.io/Home/H1/index.html" target="_blank" rel="noopener">luuman</a> 的 <a href="https://github.com/luuman/hexo-theme-spfk" target="_blank" rel="noopener">spfk</a> 主题和作者 <a href="https://xaoxuu.com/" target="_blank" rel="noopener">xaoxuu</a> 的 <a href="https://xaoxuu.com/wiki/material-x/" target="_blank" rel="noopener">Material X</a> 主题为例，文章会不定时进行更新。文章涉及有关参考资料、教程、链接如有侵权请联系我删除！</p><p>本文在CSDN的链接：<a href="https://itrhx.blog.csdn.net/article/details/85420403" target="_blank" rel="noopener">《Hexo 博客优化之博客美化》</a>、<a href="https://itrhx.blog.csdn.net/article/details/85010191" target="_blank" rel="noopener">《Hexo 博客优化之实用功能添加》</a>，Hexo 博客专栏，从前期搭建到后期美化，帮您解决常见问题：<a href="https://itrhx.blog.csdn.net/category_9285510.html" target="_blank" rel="noopener">《Github/Coding Pages + Hexo》</a>，对您有帮助就点个赞吧❤️</p><p><strong>请注意：</strong>不同主题可能方法有些不同，相同主题不同版本，配置方法也有所差异！</p><p><strong>博客美化前提条件：</strong>有一定的前端基础，了解 HTML、CSS、JS，了解 CSS 预处理语言 Sass、Less、Stylus，搞懂 hexo 的目录结构。</p><p><strong>博客美化通用步骤：</strong>选定主题，认真阅读主题文档，分析主题目录结构，了解每个文件是对应网页哪个部分的，认真阅读美化教程，美化教程本质上只为你提供核心代码和思路，具体代码要添加到哪个地方，需要你自己搞懂主题结构，添加到需要的、合适的位置！</p><p><strong>博客美化终极奥秘：</strong>创作第一，体验第二，避免繁杂，简洁为上！</p><hr><h1 id="【01】添加评论系统"><a href="#【01】添加评论系统" class="headerlink" title="【01】添加评论系统"></a>【01】添加评论系统</h1><p>主流的评论系统有很多，比如：网易云跟帖、多说、友言、畅言、来必力（LiveRe）、Disqus、Valine、Gitment等等，目前网易云跟帖、多说、友言都已经关闭了，还有些可能需要翻墙，比较麻烦，百度了一下，最后还是选择了来必力评论系统</p><p>进入<a href="https://livere.com/" target="_blank" rel="noopener">来必力官网</a>，注册一个账号（注册时可能需要翻墙）</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/001.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/001.jpg" alt="001"></a></p><p>注册完毕之后，登录，进入安装页面，选择 City 免费版安装，安装之后你会得到一段代码</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/002.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/002.jpg" alt="002"></a></p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/003.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/003.jpg" alt="003"></a></p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/004.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/004.jpg" alt="004"></a></p><p>我们打开主题文件下的 _config.yml 文件，添加如下代码：</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/005.png" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/005.png" alt="005"></a></p><p>在 \themes\hexo-theme-spfk\layout_partial\comments 文件夹下新建一个 livere.ejs 的文件，在里面填写来必力提供的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">复制&lt;!-- 来必力City版安装代码 --&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;lv-container&quot; data-id&#x3D;&quot;city&quot; data-uid&#x3D;&quot;这里是你的uid&quot;&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">(function(d, s) &#123;</span><br><span class="line">        var j, e &#x3D; d.getElementsByTagName(s)[0];</span><br><span class="line">    </span><br><span class="line">        if (typeof LivereTower &#x3D;&#x3D;&#x3D; &#39;function&#39;) &#123; return; &#125;</span><br><span class="line">    </span><br><span class="line">        j &#x3D; d.createElement(s);</span><br><span class="line">        j.src &#x3D; &#39;https:&#x2F;&#x2F;cdn-city.livere.com&#x2F;js&#x2F;embed.dist.js&#39;;</span><br><span class="line">        j.async &#x3D; true;</span><br><span class="line">    </span><br><span class="line">        e.parentNode.insertBefore(j, e);</span><br><span class="line">        &#125;)(document, &#39;script&#39;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;noscript&gt;为正常使用来必力评论功能请激活JavaScript&lt;&#x2F;noscript&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;!-- City版安装代码已完成 --&gt;</span><br></pre></td></tr></table></figure><p>打开 \themes\hexo-theme-spfk\layout_partial\article.ejs 文件，在适当位置添加如下红框中的代码：</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/006.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/006.jpg" alt="006"></a></p><p>完成以上操作之后，我们就可以使用来必力评论系统了</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/007.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/007.jpg" alt="007"></a></p><hr><h1 id="【02】添加卡通人物"><a href="#【02】添加卡通人物" class="headerlink" title="【02】添加卡通人物"></a>【02】添加卡通人物</h1><p>我在逛别人博客的时候偶然发现右下角居然有一个萌萌的卡通人物，还能根据你鼠标位置摇头，瞬间被吸引到了，赶紧也给自己博客添加一个吧！<a href="https://github.com/EYHN/hexo-helper-live2d" target="_blank" rel="noopener">点击此处</a>进入该项目地址</p><p>输入如下命令获取 live2d ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">复制$ npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><p>输入以下命令，下载相应的模型，将 packagename 更换成模型名称即可，更多模型选择请<a href="https://github.com/xiazeyu/live2d-widget-models" target="_blank" rel="noopener">点击此处</a>，各个模型的预览请<a href="https://huaji8.top/post/live2d-plugin-2.0/" target="_blank" rel="noopener">访问原作者的博客</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">复制$ npm install packagename</span><br></pre></td></tr></table></figure><p>打开站点目录下的 _config.yml 文件，添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">复制live2d:</span><br><span class="line">  enable: true</span><br><span class="line">  scriptFrom: local</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-haruto #模型选择</span><br><span class="line">  display:</span><br><span class="line">    position: right  #模型位置</span><br><span class="line">    width: 150       #模型宽度</span><br><span class="line">    height: 300      #模型高度</span><br><span class="line">  mobile:</span><br><span class="line">    show: false      #是否在手机端显示</span><br></pre></td></tr></table></figure><p>设置好过后我们就拥有了一个卡通人物</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/008.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/008.jpg" alt="008"></a></p><hr><h1 id="【03】自定义鼠标指针样式"><a href="#【03】自定义鼠标指针样式" class="headerlink" title="【03】自定义鼠标指针样式"></a>【03】自定义鼠标指针样式</h1><p>在 \themes\material-x\source\less_base.less 文件 body 样式里写入如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">复制body &#123;</span><br><span class="line">    cursor: url(https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;TRHX&#x2F;CDN-for-itrhx.com@2.1.6&#x2F;images&#x2F;mouse.cur),auto;</span><br><span class="line">    background-color: @theme_background;</span><br><span class="line">    ......</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>鼠标指针可以用 Axialis CursorWorkshop 这个软件自己制作，不同主题具体放的文件有所不同，确保在博客主体 body 的 CSS 文件中即可，其中的鼠标指针链接可替换成自己的，首先尝试加载 <a href="https://cdn.jsdelivr.net/gh/TRHX/CDN-for-itrhx.com@2.1.6/images/mouse.cur" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/TRHX/CDN-for-itrhx.com@2.1.6/images/mouse.cur</a> ，如果该文件不存在或由于其他原因无效，那么 auto 会被使用，也就是自动默认效果，图片格式为.ico、.ani、.cur，建议使用.cur，如果使用.ani或者其他格式无效，原因是浏览器兼容问题，请阅读<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Basic_User_Interface/Using_URL_values_for_the_cursor_property" target="_blank" rel="noopener">参考文档</a>或者参考以下兼容表：</p><table><thead><tr><th align="center">浏览器</th><th align="center">最低版本</th><th align="center">格式</th></tr></thead><tbody><tr><td align="center">Internet Explorer</td><td align="center">6.0</td><td align="center">.cur / .ani</td></tr><tr><td align="center">Firefox (Gecko), Windows and Linux</td><td align="center">1.5 (1.8)</td><td align="center">.cur / .png / .gif / .jpg</td></tr><tr><td align="center">Firefox (Gecko)</td><td align="center">4.0 (2.0)</td><td align="center">.cur / .png / .gif / .jpg / .svg</td></tr><tr><td align="center">Opera</td><td align="center">—</td><td align="center">—</td></tr><tr><td align="center">Safari (Webkit)</td><td align="center">3.0 (522-523)</td><td align="center">.cur / .png / .gif / .jpg</td></tr></tbody></table><p>拓展阅读：<a href="https://blog.csdn.net/ixygj197875/article/details/79338360" target="_blank" rel="noopener">《CSS 鼠标样式 cursor属性》</a> （By：歪脖先生的博客）</p><hr><h1 id="【04】添加鼠标点击爱心效果"><a href="#【04】添加鼠标点击爱心效果" class="headerlink" title="【04】添加鼠标点击爱心效果"></a>【04】添加鼠标点击爱心效果</h1><p>在 \themes\hexo-theme-spfk\source\js 下新建文件 love.js，在 love.js 文件中添加以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">复制!function(e,t,a)&#123;function n()&#123;c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#39;&#39;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 500%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;),o(),r()&#125;function r()&#123;for(var e&#x3D;0;e&lt;d.length;e++)d[e].alpha&lt;&#x3D;0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+&#x3D;.004,d[e].alpha-&#x3D;.013,d[e].el.style.cssText&#x3D;&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function o()&#123;var t&#x3D;&quot;function&quot;&#x3D;&#x3D;typeof e.onclick&amp;&amp;e.onclick;e.onclick&#x3D;function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a&#x3D;t.createElement(&quot;div&quot;);a.className&#x3D;&quot;heart&quot;,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a&#x3D;t.createElement(&quot;style&quot;);a.type&#x3D;&quot;text&#x2F;css&quot;;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText&#x3D;e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function s()&#123;return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&#125;var d&#x3D;[];e.requestAnimationFrame&#x3D;function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3&#x2F;60)&#125;&#125;(),n()&#125;(window,document);</span><br></pre></td></tr></table></figure><p>在 \themes\hexo-theme-spfk\layout\layout.ejs 文件末尾添加以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">复制&lt;!-- 页面点击小红心 --&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;js&#x2F;love.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>完成以上操作后，当我们点击鼠标的时候就可以看见爱心的特效了</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/009.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/009.jpg" alt="009"></a></p><hr><h1 id="【05】添加鼠标点击显示字体效果"><a href="#【05】添加鼠标点击显示字体效果" class="headerlink" title="【05】添加鼠标点击显示字体效果"></a>【05】添加鼠标点击显示字体效果</h1><p>在 \themes\hexo-theme-spfk\source\js 下新建文件 click_show_text.js，在 click_show_text.js 文件中添加以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">复制var a_idx &#x3D; 0;</span><br><span class="line">jQuery(document).ready(function($) &#123;</span><br><span class="line">    $(&quot;body&quot;).click(function(e) &#123;</span><br><span class="line">        var a &#x3D; new Array</span><br><span class="line">        (&quot;富强&quot;, &quot;民主&quot;, &quot;文明&quot;, &quot;和谐&quot;, &quot;自由&quot;, &quot;平等&quot;, &quot;公正&quot;, &quot;法治&quot;, &quot;爱国&quot;, &quot;敬业&quot;, &quot;诚信&quot;, &quot;友善&quot;);</span><br><span class="line">        var $i &#x3D; $(&quot;&lt;span&#x2F;&gt;&quot;).text(a[a_idx]);</span><br><span class="line">        a_idx &#x3D; (a_idx + 1) % a.length;</span><br><span class="line">        var x &#x3D; e.pageX,</span><br><span class="line">        y &#x3D; e.pageY;</span><br><span class="line">        $i.css(&#123;</span><br><span class="line">            &quot;z-index&quot;: 5,</span><br><span class="line">            &quot;top&quot;: y - 20,</span><br><span class="line">            &quot;left&quot;: x,</span><br><span class="line">            &quot;position&quot;: &quot;absolute&quot;,</span><br><span class="line">            &quot;font-weight&quot;: &quot;bold&quot;,</span><br><span class="line">            &quot;color&quot;: &quot;#FF0000&quot;</span><br><span class="line">        &#125;);</span><br><span class="line">        $(&quot;body&quot;).append($i);</span><br><span class="line">        $i.animate(&#123;</span><br><span class="line">            &quot;top&quot;: y - 180,</span><br><span class="line">            &quot;opacity&quot;: 0</span><br><span class="line">        &#125;,</span><br><span class="line">      3000,</span><br><span class="line">      function() &#123;</span><br><span class="line">          $i.remove();</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    setTimeout(&#39;delay()&#39;, 2000);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">function delay() &#123;</span><br><span class="line">    $(&quot;.buryit&quot;).removeAttr(&quot;onclick&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中的社会主义核心价值观可以根据你自己的创意替换为其他文字</p><p>如果想要每次点击显示的文字为不同颜色，可以将其中 <code>color</code> 值进行如下更改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">复制&quot;color&quot;: &quot;rgb(&quot; + ~~(255 * Math.random()) + &quot;,&quot; + ~~(255 * Math.random()) + &quot;,&quot; + ~~(255 * Math.random()) + &quot;)&quot;</span><br></pre></td></tr></table></figure><p>然后在 \themes\hexo-theme-spfk\layout\layout.ejs 文件末尾添加以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">复制&lt;!--单击显示文字--&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;js&#x2F;click_show_text.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>最终实现效果如下：</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/010.png" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/010.png" alt="010"></a></p><hr><h1 id="【06】添加鼠标点击烟花爆炸效果"><a href="#【06】添加鼠标点击烟花爆炸效果" class="headerlink" title="【06】添加鼠标点击烟花爆炸效果"></a>【06】添加鼠标点击烟花爆炸效果</h1><p>在 \themes\material-x\source\js 目录下新建一个 fireworks.js 的文件，里面写入以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">复制&quot;use strict&quot;;function updateCoords(e)&#123;pointerX&#x3D;(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY&#x3D;e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top&#125;function setParticuleDirection(e)&#123;var t&#x3D;anime.random(0,360)*Math.PI&#x2F;180,a&#x3D;anime.random(50,180),n&#x3D;[-1,1][anime.random(0,1)]*a;return&#123;x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)&#125;&#125;function createParticule(e,t)&#123;var a&#x3D;&#123;&#125;;return a.x&#x3D;e,a.y&#x3D;t,a.color&#x3D;colors[anime.random(0,colors.length-1)],a.radius&#x3D;anime.random(16,32),a.endPos&#x3D;setParticuleDirection(a),a.draw&#x3D;function()&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle&#x3D;a.color,ctx.fill()&#125;,a&#125;function createCircle(e,t)&#123;var a&#x3D;&#123;&#125;;return a.x&#x3D;e,a.y&#x3D;t,a.color&#x3D;&quot;#F00&quot;,a.radius&#x3D;0.1,a.alpha&#x3D;0.5,a.lineWidth&#x3D;6,a.draw&#x3D;function()&#123;ctx.globalAlpha&#x3D;a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth&#x3D;a.lineWidth,ctx.strokeStyle&#x3D;a.color,ctx.stroke(),ctx.globalAlpha&#x3D;1&#125;,a&#125;function renderParticule(e)&#123;for(var t&#x3D;0;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;function animateParticules(e,t)&#123;for(var a&#x3D;createCircle(e,t),n&#x3D;[],i&#x3D;0;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;targets:n,x:function(e)&#123;return e.endPos.x&#125;,y:function(e)&#123;return e.endPos.y&#125;,radius:0.1,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule&#125;).add(&#123;targets:a,radius:anime.random(80,160),lineWidth:0,alpha:&#123;value:0,easing:&quot;linear&quot;,duration:anime.random(600,800)&#125;,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule,offset:0&#125;)&#125;function debounce(e,t)&#123;var a;return function()&#123;var n&#x3D;this,i&#x3D;arguments;clearTimeout(a),a&#x3D;setTimeout(function()&#123;e.apply(n,i)&#125;,t)&#125;&#125;var canvasEl&#x3D;document.querySelector(&quot;.fireworks&quot;);if(canvasEl)&#123;var ctx&#x3D;canvasEl.getContext(&quot;2d&quot;),numberOfParticules&#x3D;30,pointerX&#x3D;0,pointerY&#x3D;0,tap&#x3D;&quot;mousedown&quot;,colors&#x3D;[&quot;#FF1461&quot;,&quot;#18FF92&quot;,&quot;#5A87FF&quot;,&quot;#FBF38C&quot;],setCanvasSize&#x3D;debounce(function()&#123;canvasEl.width&#x3D;2*window.innerWidth,canvasEl.height&#x3D;2*window.innerHeight,canvasEl.style.width&#x3D;window.innerWidth+&quot;px&quot;,canvasEl.style.height&#x3D;window.innerHeight+&quot;px&quot;,canvasEl.getContext(&quot;2d&quot;).scale(2,2)&#125;,500),render&#x3D;anime(&#123;duration:1&#x2F;0,update:function()&#123;ctx.clearRect(0,0,canvasEl.width,canvasEl.height)&#125;&#125;);document.addEventListener(tap,function(e)&#123;&quot;sidebar&quot;!&#x3D;&#x3D;e.target.id&amp;&amp;&quot;toggle-sidebar&quot;!&#x3D;&#x3D;e.target.id&amp;&amp;&quot;A&quot;!&#x3D;&#x3D;e.target.nodeName&amp;&amp;&quot;IMG&quot;!&#x3D;&#x3D;e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!1),setCanvasSize(),window.addEventListener(&quot;resize&quot;,setCanvasSize,!1)&#125;&quot;use strict&quot;;function updateCoords(e)&#123;pointerX&#x3D;(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY&#x3D;e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top&#125;function setParticuleDirection(e)&#123;var t&#x3D;anime.random(0,360)*Math.PI&#x2F;180,a&#x3D;anime.random(50,180),n&#x3D;[-1,1][anime.random(0,1)]*a;return&#123;x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)&#125;&#125;function createParticule(e,t)&#123;var a&#x3D;&#123;&#125;;return a.x&#x3D;e,a.y&#x3D;t,a.color&#x3D;colors[anime.random(0,colors.length-1)],a.radius&#x3D;anime.random(16,32),a.endPos&#x3D;setParticuleDirection(a),a.draw&#x3D;function()&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle&#x3D;a.color,ctx.fill()&#125;,a&#125;function createCircle(e,t)&#123;var a&#x3D;&#123;&#125;;return a.x&#x3D;e,a.y&#x3D;t,a.color&#x3D;&quot;#F00&quot;,a.radius&#x3D;0.1,a.alpha&#x3D;0.5,a.lineWidth&#x3D;6,a.draw&#x3D;function()&#123;ctx.globalAlpha&#x3D;a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth&#x3D;a.lineWidth,ctx.strokeStyle&#x3D;a.color,ctx.stroke(),ctx.globalAlpha&#x3D;1&#125;,a&#125;function renderParticule(e)&#123;for(var t&#x3D;0;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;function animateParticules(e,t)&#123;for(var a&#x3D;createCircle(e,t),n&#x3D;[],i&#x3D;0;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;targets:n,x:function(e)&#123;return e.endPos.x&#125;,y:function(e)&#123;return e.endPos.y&#125;,radius:0.1,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule&#125;).add(&#123;targets:a,radius:anime.random(80,160),lineWidth:0,alpha:&#123;value:0,easing:&quot;linear&quot;,duration:anime.random(600,800)&#125;,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule,offset:0&#125;)&#125;function debounce(e,t)&#123;var a;return function()&#123;var n&#x3D;this,i&#x3D;arguments;clearTimeout(a),a&#x3D;setTimeout(function()&#123;e.apply(n,i)&#125;,t)&#125;&#125;var canvasEl&#x3D;document.querySelector(&quot;.fireworks&quot;);if(canvasEl)&#123;var ctx&#x3D;canvasEl.getContext(&quot;2d&quot;),numberOfParticules&#x3D;30,pointerX&#x3D;0,pointerY&#x3D;0,tap&#x3D;&quot;mousedown&quot;,colors&#x3D;[&quot;#FF1461&quot;,&quot;#18FF92&quot;,&quot;#5A87FF&quot;,&quot;#FBF38C&quot;],setCanvasSize&#x3D;debounce(function()&#123;canvasEl.width&#x3D;2*window.innerWidth,canvasEl.height&#x3D;2*window.innerHeight,canvasEl.style.width&#x3D;window.innerWidth+&quot;px&quot;,canvasEl.style.height&#x3D;window.innerHeight+&quot;px&quot;,canvasEl.getContext(&quot;2d&quot;).scale(2,2)&#125;,500),render&#x3D;anime(&#123;duration:1&#x2F;0,update:function()&#123;ctx.clearRect(0,0,canvasEl.width,canvasEl.height)&#125;&#125;);document.addEventListener(tap,function(e)&#123;&quot;sidebar&quot;!&#x3D;&#x3D;e.target.id&amp;&amp;&quot;toggle-sidebar&quot;!&#x3D;&#x3D;e.target.id&amp;&amp;&quot;A&quot;!&#x3D;&#x3D;e.target.nodeName&amp;&amp;&quot;IMG&quot;!&#x3D;&#x3D;e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!1),setCanvasSize(),window.addEventListener(&quot;resize&quot;,setCanvasSize,!1)&#125;;</span><br></pre></td></tr></table></figure><p>然后在 \themes\material-x\layout\layout.ejs 文件中写入以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">复制&lt;canvas class&#x3D;&quot;fireworks&quot; style&#x3D;&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot; &gt;&lt;&#x2F;canvas&gt; </span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;&#x2F;cdn.bootcss.com&#x2F;animejs&#x2F;2.2.0&#x2F;anime.min.js&quot;&gt;&lt;&#x2F;script&gt; </span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;js&#x2F;fireworks.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>最终效果：</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/011.gif" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/011.gif" alt="011"></a></p><hr><h1 id="【07】添加彩色滚动变换字体"><a href="#【07】添加彩色滚动变换字体" class="headerlink" title="【07】添加彩色滚动变换字体"></a>【07】添加彩色滚动变换字体</h1><p>在你想要添加彩色滚动变换字体的地方写入以下代码即可，其中文字可自行更改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">复制&lt;div id&#x3D;&quot;binft&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    var binft &#x3D; function (r) &#123;</span><br><span class="line">      function t() &#123;</span><br><span class="line">        return b[Math.floor(Math.random() * b.length)]</span><br><span class="line">      &#125;  </span><br><span class="line">      function e() &#123;</span><br><span class="line">        return String.fromCharCode(94 * Math.random() + 33)</span><br><span class="line">      &#125;</span><br><span class="line">      function n(r) &#123;</span><br><span class="line">        for (var n &#x3D; document.createDocumentFragment(), i &#x3D; 0; r &gt; i; i++) &#123;</span><br><span class="line">          var l &#x3D; document.createElement(&quot;span&quot;);</span><br><span class="line">          l.textContent &#x3D; e(), l.style.color &#x3D; t(), n.appendChild(l)</span><br><span class="line">        &#125;</span><br><span class="line">        return n</span><br><span class="line">      &#125;</span><br><span class="line">      function i() &#123;</span><br><span class="line">        var t &#x3D; o[c.skillI];</span><br><span class="line">        c.step ? c.step-- : (c.step &#x3D; g, c.prefixP &lt; l.length ? (c.prefixP &gt;&#x3D; 0 &amp;&amp; (c.text +&#x3D; l[c.prefixP]), c.prefixP++) : &quot;forward&quot; &#x3D;&#x3D;&#x3D; c.direction ? c.skillP &lt; t.length ? (c.text +&#x3D; t[c.skillP], c.skillP++) : c.delay ? c.delay-- : (c.direction &#x3D; &quot;backward&quot;, c.delay &#x3D; a) : c.skillP &gt; 0 ? (c.text &#x3D; c.text.slice(0, -1), c.skillP--) : (c.skillI &#x3D; (c.skillI + 1) % o.length, c.direction &#x3D; &quot;forward&quot;)), r.textContent &#x3D; c.text, r.appendChild(n(c.prefixP &lt; l.length ? Math.min(s, s + c.prefixP) : Math.min(s, t.length - c.skillP))), setTimeout(i, d)</span><br><span class="line">      &#125;</span><br><span class="line">      var l &#x3D; &quot;&quot;,</span><br><span class="line">      o &#x3D; [&quot;青青陵上柏，磊磊涧中石。&quot;, &quot;人生天地间，忽如远行客。&quot;,&quot;斗酒相娱乐，聊厚不为薄。&quot;, &quot;驱车策驽马，游戏宛与洛。&quot;,&quot;洛中何郁郁，冠带自相索。&quot;,&quot;长衢罗夹巷，王侯多第宅。&quot;,&quot;两宫遥相望，双阙百余尺。&quot;,&quot;极宴娱心意，戚戚何所迫？&quot;].map(function (r) &#123;</span><br><span class="line">      return r + &quot;&quot;</span><br><span class="line">      &#125;),</span><br><span class="line">      a &#x3D; 2,</span><br><span class="line">      g &#x3D; 1,</span><br><span class="line">      s &#x3D; 5,</span><br><span class="line">      d &#x3D; 75,</span><br><span class="line">      b &#x3D; [&quot;rgb(110,64,170)&quot;, &quot;rgb(150,61,179)&quot;, &quot;rgb(191,60,175)&quot;, &quot;rgb(228,65,157)&quot;, &quot;rgb(254,75,131)&quot;, &quot;rgb(255,94,99)&quot;, &quot;rgb(255,120,71)&quot;, &quot;rgb(251,150,51)&quot;, &quot;rgb(226,183,47)&quot;, &quot;rgb(198,214,60)&quot;, &quot;rgb(175,240,91)&quot;, &quot;rgb(127,246,88)&quot;, &quot;rgb(82,246,103)&quot;, &quot;rgb(48,239,130)&quot;, &quot;rgb(29,223,163)&quot;, &quot;rgb(26,199,194)&quot;, &quot;rgb(35,171,216)&quot;, &quot;rgb(54,140,225)&quot;, &quot;rgb(76,110,219)&quot;, &quot;rgb(96,84,200)&quot;],</span><br><span class="line">      c &#x3D; &#123;</span><br><span class="line">        text: &quot;&quot;,</span><br><span class="line">        prefixP: -s,</span><br><span class="line">        skillI: 0,</span><br><span class="line">        skillP: 0,</span><br><span class="line">        direction: &quot;forward&quot;,</span><br><span class="line">        delay: a,</span><br><span class="line">        step: g</span><br><span class="line">      &#125;;</span><br><span class="line">      i()</span><br><span class="line">      &#125;;</span><br><span class="line">      binft(document.getElementById(&#39;binft&#39;));</span><br><span class="line">  &lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>最终效果：</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/012.gif" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/012.gif" alt="012"></a></p><hr><h1 id="【08】添加字数统计和阅读时长"><a href="#【08】添加字数统计和阅读时长" class="headerlink" title="【08】添加字数统计和阅读时长"></a>【08】添加字数统计和阅读时长</h1><p>先在博客目录下执行以下命令安装 hexo-wordcount 插件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">复制$ npm i --save hexo-wordcount</span><br></pre></td></tr></table></figure><p>注意：在 <a href="https://xaoxuu.com/wiki/material-x/" target="_blank" rel="noopener">Material X</a> 主题中，字数统计和阅读时长的功能我已提交 PR，在最新版本中，只需要安装插件后，在主题 <code>config.yml</code> 配置文件里，将 <code>word_count</code> 关键字设置为 <code>true</code> 即可，对于旧版本，可以通过以下方法实现：</p><p>以 <a href="https://xaoxuu.com/wiki/material-x/" target="_blank" rel="noopener">Material X</a> 主题（版本 1.2.1）为例，在 \themes\material-x\layout_meta 目录下创建 word.ejs 文件，在 word.ejs 文件中写入以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">复制&lt;% if(isPostList || !isPostList)&#123; %&gt;</span><br><span class="line">  &lt;% if (theme.word_count &amp;&amp; !post.no_word_count) &#123; %&gt;</span><br><span class="line">    &lt;div style&#x3D;&quot;margin-right: 10px;&quot;&gt;</span><br><span class="line">      &lt;span class&#x3D;&quot;post-time&quot;&gt;</span><br><span class="line">        &lt;span class&#x3D;&quot;post-meta-item-icon&quot;&gt;</span><br><span class="line">          &lt;i class&#x3D;&quot;fa fa-keyboard&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">          &lt;span class&#x3D;&quot;post-meta-item-text&quot;&gt;  字数统计: &lt;&#x2F;span&gt;</span><br><span class="line">          &lt;span class&#x3D;&quot;post-count&quot;&gt;&lt;%&#x3D; wordcount(post.content) %&gt;字&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;&#x2F;span&gt;</span><br><span class="line">      &lt;&#x2F;span&gt;</span><br><span class="line">      &amp;nbsp; | &amp;nbsp;</span><br><span class="line">      &lt;span class&#x3D;&quot;post-time&quot;&gt;</span><br><span class="line">        &lt;span class&#x3D;&quot;post-meta-item-icon&quot;&gt;</span><br><span class="line">          &lt;i class&#x3D;&quot;fa fa-hourglass-half&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">          &lt;span class&#x3D;&quot;post-meta-item-text&quot;&gt;  阅读时长≈&lt;&#x2F;span&gt;</span><br><span class="line">          &lt;span class&#x3D;&quot;post-count&quot;&gt;&lt;%&#x3D; min2read(post.content) %&gt;分&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;&#x2F;span&gt;</span><br><span class="line">      &lt;&#x2F;span&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;% &#125; %&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>然后在主题的配置文件 _config.yml 找到 meta 关键字，将 word 填入 header 中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">复制meta:</span><br><span class="line">  header: [title, author, date, categories, tags, counter, word, top]</span><br><span class="line">  footer: [updated, share]</span><br></pre></td></tr></table></figure><p>最后在主题目录下的 _config.yml 添加以下配置即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">复制word_count: true</span><br></pre></td></tr></table></figure><p>效果图：</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/036.png" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/036.png" alt="036"></a></p><hr><p>同样的，以 <a href="https://github.com/luuman/hexo-theme-spfk" target="_blank" rel="noopener">spfk</a> 主题为例，在 \themes\hexo-theme-spfk\layout_partial\post 目录下创建 word.ejs 文件，在 word.ejs 文件中写入以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">复制&lt;div style&#x3D;&quot;margin-top:10px;&quot;&gt;</span><br><span class="line">    &lt;span class&#x3D;&quot;post-time&quot;&gt;</span><br><span class="line">      &lt;span class&#x3D;&quot;post-meta-item-icon&quot;&gt;</span><br><span class="line">        &lt;i class&#x3D;&quot;fa fa-keyboard-o&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">        &lt;span class&#x3D;&quot;post-meta-item-text&quot;&gt;  字数统计: &lt;&#x2F;span&gt;</span><br><span class="line">        &lt;span class&#x3D;&quot;post-count&quot;&gt;&lt;%&#x3D; wordcount(post.content) %&gt;字&lt;&#x2F;span&gt;</span><br><span class="line">      &lt;&#x2F;span&gt;</span><br><span class="line">    &lt;&#x2F;span&gt;</span><br><span class="line">    &amp;nbsp; | &amp;nbsp;</span><br><span class="line">    &lt;span class&#x3D;&quot;post-time&quot;&gt;</span><br><span class="line">      &lt;span class&#x3D;&quot;post-meta-item-icon&quot;&gt;</span><br><span class="line">        &lt;i class&#x3D;&quot;fa fa-hourglass-half&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">        &lt;span class&#x3D;&quot;post-meta-item-text&quot;&gt;  阅读时长: &lt;&#x2F;span&gt;</span><br><span class="line">        &lt;span class&#x3D;&quot;post-count&quot;&gt;&lt;%&#x3D; min2read(post.content) %&gt;分&lt;&#x2F;span&gt;</span><br><span class="line">      &lt;&#x2F;span&gt;</span><br><span class="line">    &lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>然后在 \themes\hexo-theme-spfk\layout_partial\article.ejs 中适当位置添加以下代码：</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/013.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/013.jpg" alt="013"></a></p><p>最后在主题目录下的 _config.yml 添加以下配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">复制word_count: true</span><br></pre></td></tr></table></figure><p>如果显示的位置不好，可以自行更改其位置，成功配置后的效果如下：</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/014.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/014.jpg" alt="014"></a></p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/015.png" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/015.png" alt="015"></a></p><p>另外：要在博客底部显示所有文章的总字数，可以<a href="https://www.npmjs.com/package/hexo-wordcount" target="_blank" rel="noopener">点击此处</a>，根据你博客底部文件的类型选择相应的代码放在适当的位置即可，前提是要安装好 hexo-wordcount 插件，例如我使用 <a href="https://xaoxuu.com/wiki/material-x/" target="_blank" rel="noopener">Material X</a> 主题，在 \themes\material-x\layout_partial 目录下的 footer.ejs 文件中添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">复制&lt;i class&#x3D;&quot;fas fa-chart-area&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">&lt;span class&#x3D;&quot;post-count&quot;&gt;字数统计：&lt;%&#x3D; totalcount(site) %&gt;&lt;&#x2F;span&gt;</span><br></pre></td></tr></table></figure><p>实现效果如下：</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/016.png" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/016.png" alt="016"></a></p><hr><h1 id="【09】添加背景音乐"><a href="#【09】添加背景音乐" class="headerlink" title="【09】添加背景音乐"></a>【09】添加背景音乐</h1><p>打开网页版<a href="https://music.163.com/" target="_blank" rel="noopener">网易云音乐</a>，选择你准备添加的背景音乐，点击生成外链播放器，前提是要有版权，不然是无法生成外链播放器的，复制底下的HTML代码</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/017.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/017.jpg" alt="017"></a></p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/018.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/018.jpg" alt="018"></a></p><p>然后将此代码放到你想要放的地方，比如放在博客的左侧，则打开 \themes\hexo-theme-spfk\layout_partial\left-col.ejs 文件，将复制的HTML代码粘贴进去，再进行适当的位置设置让播放器更美观，其中 auto=1 表示打开网页自动播放音乐，auto=0 表示关闭自动播放音乐</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/019.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/019.jpg" alt="019"></a></p><p>最后效果如下：</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/020.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/020.jpg" alt="020"></a></p><p>这种网易云音乐外链的方式有很多局限性，因此推荐使用aplayer，GitHub地址为：<a href="https://github.com/MoePlayer/APlayer" target="_blank" rel="noopener">https://github.com/MoePlayer/APlayer</a> ，参考教程：<a href="https://blog.yleao.com/2018/0902/hexo上的aplayer应用.html" target="_blank" rel="noopener">《hexo上的aplayer应用》</a></p><hr><h1 id="【10】添加网站运行时间"><a href="#【10】添加网站运行时间" class="headerlink" title="【10】添加网站运行时间"></a>【10】添加网站运行时间</h1><p>一个比较好的小功能，可以看见自己的博客运行多久了，时间一天天的增加，成就感也会一天天增加的<br>在 \themes\hexo-theme-spfk\layout_partial\footer.ejs 文件下添加以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">复制&lt;span id&#x3D;&quot;timeDate&quot;&gt;载入天数...&lt;&#x2F;span&gt;&lt;span id&#x3D;&quot;times&quot;&gt;载入时分秒...&lt;&#x2F;span&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var now &#x3D; new Date(); </span><br><span class="line">    function createtime() &#123; </span><br><span class="line">        var grt&#x3D; new Date(&quot;08&#x2F;10&#x2F;2018 17:38:00&quot;);&#x2F;&#x2F;在此处修改你的建站时间，格式：月&#x2F;日&#x2F;年 时:分:秒</span><br><span class="line">        now.setTime(now.getTime()+250); </span><br><span class="line">        days &#x3D; (now - grt ) &#x2F; 1000 &#x2F; 60 &#x2F; 60 &#x2F; 24; dnum &#x3D; Math.floor(days); </span><br><span class="line">        hours &#x3D; (now - grt ) &#x2F; 1000 &#x2F; 60 &#x2F; 60 - (24 * dnum); hnum &#x3D; Math.floor(hours); </span><br><span class="line">        if(String(hnum).length &#x3D;&#x3D;1 )&#123;hnum &#x3D; &quot;0&quot; + hnum;&#125; minutes &#x3D; (now - grt ) &#x2F; 1000 &#x2F;60 - (24 * 60 * dnum) - (60 * hnum); </span><br><span class="line">        mnum &#x3D; Math.floor(minutes); if(String(mnum).length &#x3D;&#x3D;1 )&#123;mnum &#x3D; &quot;0&quot; + mnum;&#125; </span><br><span class="line">        seconds &#x3D; (now - grt ) &#x2F; 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum); </span><br><span class="line">        snum &#x3D; Math.round(seconds); if(String(snum).length &#x3D;&#x3D;1 )&#123;snum &#x3D; &quot;0&quot; + snum;&#125; </span><br><span class="line">        document.getElementById(&quot;timeDate&quot;).innerHTML &#x3D; &quot;本站已安全运行 &quot;+dnum+&quot; 天 &quot;; </span><br><span class="line">        document.getElementById(&quot;times&quot;).innerHTML &#x3D; hnum + &quot; 小时 &quot; + mnum + &quot; 分 &quot; + snum + &quot; 秒&quot;; </span><br><span class="line">    &#125; </span><br><span class="line">setInterval(&quot;createtime()&quot;,250);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>最后效果如下：</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/021.png" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/021.png" alt="021"></a></p><hr><h1 id="【11】添加百度统计"><a href="#【11】添加百度统计" class="headerlink" title="【11】添加百度统计"></a>【11】添加百度统计</h1><p>百度统计是百度推出的一款免费的专业网站流量分析工具，能够告诉用户访客是如何找到并浏览用户的网站，在网站上做了些什么，非常有趣，接下来我们把百度统计添加到自己博客当中</p><p>访问<a href="https://tongji.baidu.com/" target="_blank" rel="noopener">百度统计首页</a>，注册一个账号后登陆，添加你的博客网站</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/022.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/022.jpg" alt="022"></a></p><p>接着点击代码获取，复制该代码</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/023.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/023.jpg" alt="023"></a></p><p>然后到目录 \Hexo\themes\hexo-theme-spfk\layout_partial 下新建一个 baidu-analytics.ejs 文件，里面粘贴你刚刚复制的代码</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/024.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/024.jpg" alt="024"></a></p><p>修改主题文件夹下的 _config.yml 文件，将你的key（图中涂掉部分）填写进去：</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/025.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/025.jpg" alt="025"></a></p><p>所有操作完成后可以在百度统计管理页面检查代码是否安装成功，如果代码安装正确，一般20分钟后，可以查看网站分析数据</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/026.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/026.jpg" alt="026"></a></p><p>另外推荐：<a href="https://web.umeng.com/main.php?c=user&a=index" target="_blank" rel="noopener">友盟</a>，2010年4月在北京成立，安全、可靠、公正、第三方的网站流量统计分析系统</p><hr><h1 id="【12】浏览器网页标题恶搞"><a href="#【12】浏览器网页标题恶搞" class="headerlink" title="【12】浏览器网页标题恶搞"></a>【12】浏览器网页标题恶搞</h1><p>当用户访问你的博客时点击到了其他网页，我们可以恶搞一下网页标题，呼唤用户回来，首先在目录 \themes\material-x\source\js 下新建一个 FunnyTitle.js 文件，在里面填写如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">复制&#x2F;&#x2F; 浏览器搞笑标题</span><br><span class="line">var OriginTitle &#x3D; document.title;</span><br><span class="line">var titleTime;</span><br><span class="line">document.addEventListener(&#39;visibilitychange&#39;, function () &#123;</span><br><span class="line">    if (document.hidden) &#123;</span><br><span class="line">        $(&#39;[rel&#x3D;&quot;icon&quot;]&#39;).attr(&#39;href&#39;, &quot;&#x2F;funny.ico&quot;);</span><br><span class="line">        document.title &#x3D; &#39;╭(°A°&#96;)╮ 页面崩溃啦 ~&#39;;</span><br><span class="line">        clearTimeout(titleTime);</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        $(&#39;[rel&#x3D;&quot;icon&quot;]&#39;).attr(&#39;href&#39;, &quot;&#x2F;favicon.ico&quot;);</span><br><span class="line">        document.title &#x3D; &#39;(ฅ&gt;ω&lt;*ฅ) 噫又好啦 ~&#39; + OriginTitle;</span><br><span class="line">        titleTime &#x3D; setTimeout(function () &#123;</span><br><span class="line">            document.title &#x3D; OriginTitle;</span><br><span class="line">        &#125;, 2000);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>其中 <code>funny.ico</code> 是用户切换到其他标签后你网站的图标，<code>favicon.ico</code> 是正常图标，然后在 \themes\material-x\layout\layout.ejs 文件中添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">复制&lt;!--浏览器搞笑标题--&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;js&#x2F;FunnyTitle.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>再次部署博客后就可以看见标题搞笑的效果了：</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/027.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/027.jpg" alt="027"></a></p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/028.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/028.jpg" alt="028"></a></p><hr><h1 id="【13】背景添加动态线条效果"><a href="#【13】背景添加动态线条效果" class="headerlink" title="【13】背景添加动态线条效果"></a>【13】背景添加动态线条效果</h1><p>在 \Hexo\themes\hexo-theme-spfk\layout\layout.ejs 文件中添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">复制&lt;!--动态线条背景--&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;</span><br><span class="line">color&#x3D;&quot;220,220,220&quot; opacity&#x3D;&#39;0.7&#39; zIndex&#x3D;&quot;-2&quot; count&#x3D;&quot;200&quot; src&#x3D;&quot;&#x2F;&#x2F;cdn.bootcss.com&#x2F;canvas-nest.js&#x2F;1.0.0&#x2F;canvas-nest.min.js&quot;&gt;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>其中：</p><ul><li>color：表示线条颜色，三个数字分别为(R,G,B)，默认：（0,0,0）</li><li>opacity：表示线条透明度（0~1），默认：0.5</li><li>count：表示线条的总数量，默认：150</li><li>zIndex：表示背景的z-index属性，css属性用于控制所在层的位置，默认：-1</li></ul><p>最终实现效果：</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/029.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/029.jpg" alt="029"></a></p><hr><h1 id="【14】添加人体时钟"><a href="#【14】添加人体时钟" class="headerlink" title="【14】添加人体时钟"></a>【14】添加人体时钟</h1><p>无意中发现了个有趣的人体时钟 HONE HONE CLOCK，作者是个日本人，<a href="http://chabudai.org/blog/" target="_blank" rel="noopener">点击此处</a>访问作者博客，<a href="http://chabudai.org/blog/?p=59" target="_blank" rel="noopener">点击此处</a>在作者原博客上查看动态样式，<a href="http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.swf" target="_blank" rel="noopener">点击此处</a>查看动态大图，如果你的博客上有合适的地方，加上一个人体时钟会很有趣的</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/030.png" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/030.png" alt="030"></a></p><p>实现代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">复制&lt;!--人体时钟背景透明--&gt;</span><br><span class="line">&lt;script charset&#x3D;&quot;Shift_JIS&quot; src&#x3D;&quot;http:&#x2F;&#x2F;chabudai.sakura.ne.jp&#x2F;blogparts&#x2F;honehoneclock&#x2F;honehone_clock_tr.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--人体时钟背景白--&gt;</span><br><span class="line">&lt;script charset&#x3D;&quot;Shift_JIS&quot; src&#x3D;&quot;http:&#x2F;&#x2F;chabudai.sakura.ne.jp&#x2F;blogparts&#x2F;honehoneclock&#x2F;honehone_clock_wh.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>其他网页小挂件推荐：</p><ul><li><a href="http://abowman.com/" target="_blank" rel="noopener">http://abowman.com/</a> 里面有很多有趣的小挂件，可以养养鱼、龟、狗、仓鼠等各式各样的虚拟宠物，能根据你的鼠标指针位置移动，直接复制代码就可以用</li><li><a href="http://www.revolvermaps.com/" target="_blank" rel="noopener">http://www.revolvermaps.com/</a> 它提供网站访客地理信息，可以以2D、3D等形式显示</li><li><a href="http://www.amazingcounters.com/" target="_blank" rel="noopener">http://www.amazingcounters.com/</a> 免费网站计数器，有非常多的样式供你选择，可以设置计数器初始数值，可以设置按访问量计数，也可以按独立访问者计数</li><li><a href="https://www.seniverse.com/widget/get" target="_blank" rel="noopener">https://www.seniverse.com/widget/get</a> 心知天气提供基于Web的免费天气插件，可以为你的网站添加一项简洁美观的天气预报功能，并自动适配PC和手机上的浏览</li></ul><hr><h1 id="【15】添加RSS订阅"><a href="#【15】添加RSS订阅" class="headerlink" title="【15】添加RSS订阅"></a>【15】添加RSS订阅</h1><p>RSS订阅是站点用来和其他站点之间共享内容的一种简易方式，即Really Simple Syndication（简易信息聚合），如果不会使用，可以参见百度百科：<a href="https://baike.baidu.com/item/RSS订阅/663114" target="_blank" rel="noopener">https://baike.baidu.com/item/RSS%E8%AE%A2%E9%98%85/663114</a> ；首先我们安装feed插件，在本地hexo目录下右键<code>git bash here</code>，输入以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">复制$ npm install hexo-generator-feed</span><br></pre></td></tr></table></figure><p>等待安装完成后，打开hexo目录下配置文件的<code>_config.yml</code>，在末尾添加以下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">复制# Extensions</span><br><span class="line">## Plugins: http:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;</span><br><span class="line">#RSS订阅</span><br><span class="line">plugin:</span><br><span class="line">- hexo-generator-feed</span><br><span class="line">#Feed Atom</span><br><span class="line">feed:</span><br><span class="line">type: atom</span><br><span class="line">path: atom.xml</span><br><span class="line">limit: 20</span><br></pre></td></tr></table></figure><p>随后打开主题配置文件<code>_config.yml</code>，添加以下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">复制rss: &#x2F;atom.xml</span><br></pre></td></tr></table></figure><p>至此，RSS订阅功能添加完成</p><hr><h1 id="【16】添加网站雪花飘落效果"><a href="#【16】添加网站雪花飘落效果" class="headerlink" title="【16】添加网站雪花飘落效果"></a>【16】添加网站雪花飘落效果</h1><p>样式一和样式二分别如下：</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/031.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/031.jpg" alt="031样式一"></a></p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/032.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/032.jpg" alt="032样式二"></a></p><p>实现方法：在 \Hexo\themes\hexo-theme-spfk\source\js 目录下新建一个 snow.js 文件，粘贴以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br></pre></td><td class="code"><pre><span class="line">复制&#x2F;*样式一*&#x2F;</span><br><span class="line">(function($)&#123;</span><br><span class="line">$.fn.snow &#x3D; function(options)&#123;</span><br><span class="line">var $flake &#x3D; $(&#39;&lt;div id&#x3D;&quot;snowbox&quot; &#x2F;&gt;&#39;).css(&#123;&#39;position&#39;: &#39;absolute&#39;,&#39;z-index&#39;:&#39;9999&#39;, &#39;top&#39;: &#39;-50px&#39;&#125;).html(&#39;&amp;#10052;&#39;),</span><br><span class="line">documentHeight &#x3D; $(document).height(),</span><br><span class="line">documentWidth&#x3D; $(document).width(),</span><br><span class="line">defaults &#x3D; &#123;</span><br><span class="line">minSize: 10,</span><br><span class="line">maxSize: 20,</span><br><span class="line">newOn: 1000,</span><br><span class="line">flakeColor: &quot;#AFDAEF&quot; &#x2F;* 此处可以定义雪花颜色，若要白色可以改为#FFFFFF *&#x2F;</span><br><span class="line">&#125;,</span><br><span class="line">options&#x3D; $.extend(&#123;&#125;, defaults, options);</span><br><span class="line">var interval&#x3D; setInterval( function()&#123;</span><br><span class="line">var startPositionLeft &#x3D; Math.random() * documentWidth - 100,</span><br><span class="line">startOpacity &#x3D; 0.5 + Math.random(),</span><br><span class="line">sizeFlake &#x3D; options.minSize + Math.random() * options.maxSize,</span><br><span class="line">endPositionTop &#x3D; documentHeight - 200,</span><br><span class="line">endPositionLeft &#x3D; startPositionLeft - 500 + Math.random() * 500,</span><br><span class="line">durationFall &#x3D; documentHeight * 10 + Math.random() * 5000;</span><br><span class="line">$flake.clone().appendTo(&#39;body&#39;).css(&#123;</span><br><span class="line">left: startPositionLeft,</span><br><span class="line">opacity: startOpacity,</span><br><span class="line">&#39;font-size&#39;: sizeFlake,</span><br><span class="line">color: options.flakeColor</span><br><span class="line">&#125;).animate(&#123;</span><br><span class="line">top: endPositionTop,</span><br><span class="line">left: endPositionLeft,</span><br><span class="line">opacity: 0.2</span><br><span class="line">&#125;,durationFall,&#39;linear&#39;,function()&#123;</span><br><span class="line">$(this).remove()</span><br><span class="line">&#125;);</span><br><span class="line">&#125;, options.newOn);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;)(jQuery);</span><br><span class="line">$(function()&#123;</span><br><span class="line">    $.fn.snow(&#123; </span><br><span class="line">    minSize: 5, &#x2F;* 定义雪花最小尺寸 *&#x2F;</span><br><span class="line">    maxSize: 50,&#x2F;* 定义雪花最大尺寸 *&#x2F;</span><br><span class="line">    newOn: 300  &#x2F;* 定义密集程度，数字越小越密集 *&#x2F;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">复制&#x2F;*样式二*&#x2F;</span><br><span class="line">&#x2F;* 控制下雪 *&#x2F;</span><br><span class="line">function snowFall(snow) &#123;</span><br><span class="line">    &#x2F;* 可配置属性 *&#x2F;</span><br><span class="line">    snow &#x3D; snow || &#123;&#125;;</span><br><span class="line">    this.maxFlake &#x3D; snow.maxFlake || 200;   &#x2F;* 最多片数 *&#x2F;</span><br><span class="line">    this.flakeSize &#x3D; snow.flakeSize || 10;  &#x2F;* 雪花形状 *&#x2F;</span><br><span class="line">    this.fallSpeed &#x3D; snow.fallSpeed || 1;   &#x2F;* 坠落速度 *&#x2F;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* 兼容写法 *&#x2F;</span><br><span class="line">requestAnimationFrame &#x3D; window.requestAnimationFrame ||</span><br><span class="line">    window.mozRequestAnimationFrame ||</span><br><span class="line">    window.webkitRequestAnimationFrame ||</span><br><span class="line">    window.msRequestAnimationFrame ||</span><br><span class="line">    window.oRequestAnimationFrame ||</span><br><span class="line">    function(callback) &#123; setTimeout(callback, 1000 &#x2F; 60); &#125;;</span><br><span class="line"></span><br><span class="line">cancelAnimationFrame &#x3D; window.cancelAnimationFrame ||</span><br><span class="line">    window.mozCancelAnimationFrame ||</span><br><span class="line">    window.webkitCancelAnimationFrame ||</span><br><span class="line">    window.msCancelAnimationFrame ||</span><br><span class="line">window.oCancelAnimationFrame;</span><br><span class="line">&#x2F;* 开始下雪 *&#x2F;</span><br><span class="line">snowFall.prototype.start &#x3D; function()&#123;</span><br><span class="line">    &#x2F;* 创建画布 *&#x2F;</span><br><span class="line">    snowCanvas.apply(this);</span><br><span class="line">    &#x2F;* 创建雪花形状 *&#x2F;</span><br><span class="line">    createFlakes.apply(this);</span><br><span class="line">    &#x2F;* 画雪 *&#x2F;</span><br><span class="line">    drawSnow.apply(this)</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* 创建画布 *&#x2F;</span><br><span class="line">function snowCanvas() &#123;</span><br><span class="line">    &#x2F;* 添加Dom结点 *&#x2F;</span><br><span class="line">    var snowcanvas &#x3D; document.createElement(&quot;canvas&quot;);</span><br><span class="line">    snowcanvas.id &#x3D; &quot;snowfall&quot;;</span><br><span class="line">    snowcanvas.width &#x3D; window.innerWidth;</span><br><span class="line">    snowcanvas.height &#x3D; document.body.clientHeight;</span><br><span class="line">    snowcanvas.setAttribute(&quot;style&quot;, &quot;position:absolute; top: 0; left: 0; z-index: 1; pointer-events: none;&quot;);</span><br><span class="line">    document.getElementsByTagName(&quot;body&quot;)[0].appendChild(snowcanvas);</span><br><span class="line">    this.canvas &#x3D; snowcanvas;</span><br><span class="line">    this.ctx &#x3D; snowcanvas.getContext(&quot;2d&quot;);</span><br><span class="line">    &#x2F;* 窗口大小改变的处理 *&#x2F;</span><br><span class="line">    window.onresize &#x3D; function() &#123;</span><br><span class="line">        snowcanvas.width &#x3D; window.innerWidth;</span><br><span class="line">        &#x2F;* snowcanvas.height &#x3D; window.innerHeight *&#x2F;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* 雪运动对象 *&#x2F;</span><br><span class="line">function flakeMove(canvasWidth, canvasHeight, flakeSize, fallSpeed) &#123;</span><br><span class="line">    this.x &#x3D; Math.floor(Math.random() * canvasWidth);   &#x2F;* x坐标 *&#x2F;</span><br><span class="line">    this.y &#x3D; Math.floor(Math.random() * canvasHeight);  &#x2F;* y坐标 *&#x2F;</span><br><span class="line">    this.size &#x3D; Math.random() * flakeSize + 2;          &#x2F;* 形状 *&#x2F;</span><br><span class="line">    this.maxSize &#x3D; flakeSize;                           &#x2F;* 最大形状 *&#x2F;</span><br><span class="line">    this.speed &#x3D; Math.random() * 1 + fallSpeed;         &#x2F;* 坠落速度 *&#x2F;</span><br><span class="line">    this.fallSpeed &#x3D; fallSpeed;                         &#x2F;* 坠落速度 *&#x2F;</span><br><span class="line">    this.velY &#x3D; this.speed;                             &#x2F;* Y方向速度 *&#x2F;</span><br><span class="line">    this.velX &#x3D; 0;                                      &#x2F;* X方向速度 *&#x2F;</span><br><span class="line">    this.stepSize &#x3D; Math.random() &#x2F; 30;                 &#x2F;* 步长 *&#x2F;</span><br><span class="line">    this.step &#x3D; 0                                       &#x2F;* 步数 *&#x2F;</span><br><span class="line">&#125;</span><br><span class="line">flakeMove.prototype.update &#x3D; function() &#123;</span><br><span class="line">    var x &#x3D; this.x,</span><br><span class="line">        y &#x3D; this.y;</span><br><span class="line">    &#x2F;* 左右摆动(余弦) *&#x2F;</span><br><span class="line">    this.velX *&#x3D; 0.98;</span><br><span class="line">    if (this.velY &lt;&#x3D; this.speed) &#123;</span><br><span class="line">        this.velY &#x3D; this.speed</span><br><span class="line">    &#125;</span><br><span class="line">    this.velX +&#x3D; Math.cos(this.step +&#x3D; .05) * this.stepSize;</span><br><span class="line"></span><br><span class="line">    this.y +&#x3D; this.velY;</span><br><span class="line">    this.x +&#x3D; this.velX;</span><br><span class="line">    &#x2F;* 飞出边界的处理 *&#x2F;</span><br><span class="line">    if (this.x &gt;&#x3D; canvas.width || this.x &lt;&#x3D; 0 || this.y &gt;&#x3D; canvas.height || this.y &lt;&#x3D; 0) &#123;</span><br><span class="line">        this.reset(canvas.width, canvas.height)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&#x2F;* 飞出边界-放置最顶端继续坠落 *&#x2F;</span><br><span class="line">flakeMove.prototype.reset &#x3D; function(width, height) &#123;</span><br><span class="line">    this.x &#x3D; Math.floor(Math.random() * width);</span><br><span class="line">    this.y &#x3D; 0;</span><br><span class="line">    this.size &#x3D; Math.random() * this.maxSize + 2;</span><br><span class="line">    this.speed &#x3D; Math.random() * 1 + this.fallSpeed;</span><br><span class="line">    this.velY &#x3D; this.speed;</span><br><span class="line">    this.velX &#x3D; 0;</span><br><span class="line">&#125;;</span><br><span class="line">&#x2F;&#x2F; 渲染雪花-随机形状（此处可修改雪花颜色！！！）</span><br><span class="line">flakeMove.prototype.render &#x3D; function(ctx) &#123;</span><br><span class="line">    var snowFlake &#x3D; ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, this.size);</span><br><span class="line">    snowFlake.addColorStop(0, &quot;rgba(255, 255, 255, 0.9)&quot;);  &#x2F;* 此处是雪花颜色，默认是白色 *&#x2F;</span><br><span class="line">    snowFlake.addColorStop(.5, &quot;rgba(255, 255, 255, 0.5)&quot;); &#x2F;* 若要改为其他颜色，请自行查 *&#x2F;</span><br><span class="line">    snowFlake.addColorStop(1, &quot;rgba(255, 255, 255, 0)&quot;);    &#x2F;* 找16进制的RGB 颜色代码。 *&#x2F;</span><br><span class="line">    ctx.save();</span><br><span class="line">    ctx.fillStyle &#x3D; snowFlake;</span><br><span class="line">    ctx.beginPath();</span><br><span class="line">    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);</span><br><span class="line">    ctx.fill();</span><br><span class="line">    ctx.restore();</span><br><span class="line">&#125;;</span><br><span class="line">&#x2F;* 创建雪花-定义形状 *&#x2F;</span><br><span class="line">function createFlakes() &#123;</span><br><span class="line">    var maxFlake &#x3D; this.maxFlake,</span><br><span class="line">        flakes &#x3D; this.flakes &#x3D; [],</span><br><span class="line">        canvas &#x3D; this.canvas;</span><br><span class="line">    for (var i &#x3D; 0; i &lt; maxFlake; i++) &#123;</span><br><span class="line">        flakes.push(new flakeMove(canvas.width, canvas.height, this.flakeSize, this.fallSpeed))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* 画雪 *&#x2F;</span><br><span class="line">function drawSnow() &#123;</span><br><span class="line">    var maxFlake &#x3D; this.maxFlake,</span><br><span class="line">        flakes &#x3D; this.flakes;</span><br><span class="line">    ctx &#x3D; this.ctx, canvas &#x3D; this.canvas, that &#x3D; this;</span><br><span class="line">    &#x2F;* 清空雪花 *&#x2F;</span><br><span class="line">    ctx.clearRect(0, 0, canvas.width, canvas.height);</span><br><span class="line">    for (var e &#x3D; 0; e &lt; maxFlake; e++) &#123;</span><br><span class="line">        flakes[e].update();</span><br><span class="line">        flakes[e].render(ctx);</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;*  一帧一帧的画 *&#x2F;</span><br><span class="line">    this.loop &#x3D; requestAnimationFrame(function() &#123;</span><br><span class="line">        drawSnow.apply(that);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* 调用及控制方法 *&#x2F;</span><br><span class="line">var snow &#x3D; new snowFall(&#123;maxFlake:60&#125;);</span><br><span class="line">snow.start();</span><br></pre></td></tr></table></figure><p>然后在 \Hexo\themes\hexo-theme-spfk\layout\layout.ejs 文件里引用即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">复制&lt;!-- 雪花特效 --&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;\js\snow.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>如果没效果，请确认网页是否已载入JQurey，如果没有请在下雪代码之前引入JQ即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">复制&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;http:&#x2F;&#x2F;libs.baidu.com&#x2F;jquery&#x2F;1.8.3&#x2F;jquery.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;http:&#x2F;&#x2F;libs.baidu.com&#x2F;jquery&#x2F;1.8.3&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>原文链接：<a href="https://ihuan.me/2172.html" target="_blank" rel="noopener">《分享两种圣诞节雪花特效JS代码(网站下雪效果)》</a></p><hr><h1 id="【17】添加-Fork-me-on-GitHub-效果"><a href="#【17】添加-Fork-me-on-GitHub-效果" class="headerlink" title="【17】添加 Fork me on GitHub 效果"></a>【17】添加 Fork me on GitHub 效果</h1><p>效果图：</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/033.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/033.jpg" alt="033"></a></p><p><a href="https://blog.github.com/2008-12-19-github-ribbons/" target="_blank" rel="noopener">点击此处</a>可以查看更多样式，将相应样式的代码复制到你想要放的地方就OK了，代码里的链接也要替换成你的，更多创意，比如 Follow me on CSDN ，只需要用PS改掉图片里的文字，替换掉相应链接即可</p><hr><h1 id="【18】添加背景动态彩带效果"><a href="#【18】添加背景动态彩带效果" class="headerlink" title="【18】添加背景动态彩带效果"></a>【18】添加背景动态彩带效果</h1><p>样式一是鼠标点击后彩带自动更换样式，样式二是飘动的彩带：</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/034.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/034.jpg" alt="034"></a></p><p>实现方法：在 \themes\material-x\layout\layout.ejs 文件的body前面添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">复制&lt;!-- 样式一（鼠标点击更换样式） --&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;g.joyinshare.com&#x2F;hc&#x2F;ribbon.min.js&quot; type&#x3D;&quot;text&#x2F;javascript&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">复制&lt;!-- 样式二（飘动的彩带） --&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;g.joyinshare.com&#x2F;hc&#x2F;piao.js&quot; type&#x3D;&quot;text&#x2F;javascript&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><hr><h1 id="【19】添加背景代码雨特效"><a href="#【19】添加背景代码雨特效" class="headerlink" title="【19】添加背景代码雨特效"></a>【19】添加背景代码雨特效</h1><p>新建 <code>DigitalRain.js</code>，写入以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">复制window.onload &#x3D; function()&#123;</span><br><span class="line">    &#x2F;&#x2F;获取画布对象</span><br><span class="line">    var canvas &#x3D; document.getElementById(&quot;canvas&quot;);</span><br><span class="line">    &#x2F;&#x2F;获取画布的上下文</span><br><span class="line">    var context &#x3D;canvas.getContext(&quot;2d&quot;);</span><br><span class="line">    var s &#x3D; window.screen;</span><br><span class="line">    var W &#x3D; canvas.width &#x3D; s.width;</span><br><span class="line">    var H &#x3D; canvas.height;</span><br><span class="line">    &#x2F;&#x2F;获取浏览器屏幕的宽度和高度</span><br><span class="line">    &#x2F;&#x2F;var W &#x3D; window.innerWidth;</span><br><span class="line">    &#x2F;&#x2F;var H &#x3D; window.innerHeight;</span><br><span class="line">    &#x2F;&#x2F;设置canvas的宽度和高度</span><br><span class="line">    canvas.width &#x3D; W;</span><br><span class="line">    canvas.height &#x3D; H;</span><br><span class="line">    &#x2F;&#x2F;每个文字的字体大小</span><br><span class="line">    var fontSize &#x3D; 12;</span><br><span class="line">    &#x2F;&#x2F;计算列</span><br><span class="line">    var colunms &#x3D; Math.floor(W &#x2F;fontSize);</span><br><span class="line">    &#x2F;&#x2F;记录每列文字的y轴坐标</span><br><span class="line">    var drops &#x3D; [];</span><br><span class="line">    &#x2F;&#x2F;给每一个文字初始化一个起始点的位置</span><br><span class="line">    for(var i&#x3D;0;i&lt;colunms;i++)&#123;</span><br><span class="line">        drops.push(0);</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;&#x2F;运动的文字</span><br><span class="line">    var str &#x3D;&quot;WELCOME TO WWW.ITRHX.COM&quot;;</span><br><span class="line">    &#x2F;&#x2F;4:fillText(str,x,y);原理就是去更改y的坐标位置</span><br><span class="line">    &#x2F;&#x2F;绘画的函数</span><br><span class="line">    function draw()&#123;</span><br><span class="line">        context.fillStyle &#x3D; &quot;rgba(238,238,238,.08)&quot;;&#x2F;&#x2F;遮盖层</span><br><span class="line">        context.fillRect(0,0,W,H);</span><br><span class="line">        &#x2F;&#x2F;给字体设置样式</span><br><span class="line">        context.font &#x3D; &quot;600 &quot;+fontSize+&quot;px  Georgia&quot;;</span><br><span class="line">        &#x2F;&#x2F;给字体添加颜色</span><br><span class="line">        context.fillStyle &#x3D; [&quot;#33B5E5&quot;, &quot;#0099CC&quot;, &quot;#AA66CC&quot;, &quot;#9933CC&quot;, &quot;#99CC00&quot;, &quot;#669900&quot;, &quot;#FFBB33&quot;, &quot;#FF8800&quot;, &quot;#FF4444&quot;, &quot;#CC0000&quot;][parseInt(Math.random() * 10)];&#x2F;&#x2F;randColor();可以rgb,hsl, 标准色，十六进制颜色</span><br><span class="line">        &#x2F;&#x2F;写入画布中</span><br><span class="line">        for(var i&#x3D;0;i&lt;colunms;i++)&#123;</span><br><span class="line">            var index &#x3D; Math.floor(Math.random() * str.length);</span><br><span class="line">            var x &#x3D; i*fontSize;</span><br><span class="line">            var y &#x3D; drops[i] *fontSize;</span><br><span class="line">            context.fillText(str[index],x,y);</span><br><span class="line">            &#x2F;&#x2F;如果要改变时间，肯定就是改变每次他的起点</span><br><span class="line">            if(y &gt;&#x3D; canvas.height &amp;&amp; Math.random() &gt; 0.99)&#123;</span><br><span class="line">                drops[i] &#x3D; 0;</span><br><span class="line">            &#125;</span><br><span class="line">            drops[i]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    function randColor()&#123;&#x2F;&#x2F;随机颜色</span><br><span class="line">        var r &#x3D; Math.floor(Math.random() * 256);</span><br><span class="line">        var g &#x3D; Math.floor(Math.random() * 256);</span><br><span class="line">        var b &#x3D; Math.floor(Math.random() * 256);</span><br><span class="line">        return &quot;rgb(&quot;+r+&quot;,&quot;+g+&quot;,&quot;+b+&quot;)&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    draw();</span><br><span class="line">    setInterval(draw,35);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在主题文件的相关css文件中（以 Material X 1.2.1 主题为例，在\themes\material-x-1.2.1\source\less_main.less 文件末尾）添加以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">复制canvas &#123;</span><br><span class="line">  position: fixed;</span><br><span class="line">  right: 0px;</span><br><span class="line">  bottom: 0px;</span><br><span class="line">  min-width: 100%;</span><br><span class="line">  min-height: 100%;</span><br><span class="line">  height: auto;</span><br><span class="line">  width: auto;</span><br><span class="line">  z-index: -1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在主题的 layout.ejs 文件中引入即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">复制&lt;!-- 数字雨 --&gt;</span><br><span class="line">&lt;canvas id&#x3D;&quot;canvas&quot; width&#x3D;&quot;1440&quot; height&#x3D;&quot;900&quot; &gt;&lt;&#x2F;canvas&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;js&#x2F;DigitalRain.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>最终效果：</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/035.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/035.jpg" alt="035"></a></p><p>代码来源：<a href="http://www.lxl8800.cn/Main/Resource" target="_blank" rel="noopener">http://www.lxl8800.cn/Main/Resource</a></p><hr><h1 id="【20】自定义一个不使用主题模板渲染的独立页面"><a href="#【20】自定义一个不使用主题模板渲染的独立页面" class="headerlink" title="【20】自定义一个不使用主题模板渲染的独立页面"></a>【20】自定义一个不使用主题模板渲染的独立页面</h1><p>  有时候我们需要新建一个独立的页面，这个页面不使用主题的渲染，具有自己独立的样式，可以放一些自己的作品，相册什么的，以下就介绍这种独立页面的实现方法。</p><p>方法一：</p><p>  使用 Hexo 提供的跳过渲染配置，在博客根目录的配置文件 <code>_config.yml</code> 里找到 <code>skip_render</code> 关键字，在后面添加想要跳过渲染的页面，比如我们创建 <code>\source\about\index.html</code>， 配置文件填写：<code>skip_render: about\**</code>，那么就表示 <code>\source\about</code> 里所有的文件将跳过渲染，里面的文件将会被直接复制到 public 文件夹，此时就会得到一个独立的 about 页面；官方文档：<a href="https://hexo.io/docs/configuration" target="_blank" rel="noopener">https://hexo.io/docs/configuration</a></p><p>方法二：</p><p>  在文章头部的 Front-matter 里添加配置 <code>layout: false</code> 来跳过渲染配置，比如我们要使 about 页面跳过渲染，创建 <code>\source\about\index.md</code>，将这个页面的相关 HTML 代码写进<code>.md</code>文件并保存，然后在 <code>index.md</code> 的头部写入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">复制---</span><br><span class="line">layout: false</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">&#123;% raw %&#125;</span><br><span class="line"></span><br><span class="line">这里是 HTML 代码</span><br><span class="line"></span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><p>PS：Front-matter 是 <code>.md</code> 文件最上方以 — 分隔的区域，用于指定个别文件的变量，官方文档：<a href="https://hexo.io/docs/front-matter" target="_blank" rel="noopener">https://hexo.io/docs/front-matter</a></p><p>效果可以对比我的<a href="https://www.itrhx.com/" target="_blank" rel="noopener">博客主页</a>和<a href="https://www.itrhx.com/about/" target="_blank" rel="noopener">关于页面</a></p><hr><h1 id="【21】更改本地预览端口号"><a href="#【21】更改本地预览端口号" class="headerlink" title="【21】更改本地预览端口号"></a>【21】更改本地预览端口号</h1><p>hexo博客在执行 <code>hexo s</code> 进行本地预览的时候，默认端口号是4000，当该端口号被占用时会报错 <code>Error: listen EADDRINUSE 0.0.0.0:4000</code> ，此时可以关闭占用该端口的进程，也可以更换端口号，更换端口号可以通过以下两种方法实现：</p><p>方法一：在根目录的 <code>_config.yml</code> 配置文件内加上如下代码更改 <code>hexo s</code> 运行时的端口号：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">复制server:</span><br><span class="line">  port: 5000</span><br><span class="line">  compress: true</span><br><span class="line">  header: true</span><br></pre></td></tr></table></figure><p>方法二：通过 <code>hexo server -p 5000</code> 命令来指定端口，这种方法只是本次执行有效</p><hr><h1 id="未完待续……"><a href="#未完待续……" class="headerlink" title="未完待续……"></a>未完待续……</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Python 爬虫大小项目集合</title>
    <link href="http://yoursite.com/2020/06/13/Python-%E7%88%AC%E8%99%AB%E5%A4%A7%E5%B0%8F%E9%A1%B9%E7%9B%AE%E9%9B%86%E5%90%88/"/>
    <id>http://yoursite.com/2020/06/13/Python-%E7%88%AC%E8%99%AB%E5%A4%A7%E5%B0%8F%E9%A1%B9%E7%9B%AE%E9%9B%86%E5%90%88/</id>
    <published>2020-06-13T12:00:54.000Z</published>
    <updated>2020-06-13T12:01:44.780Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p> 今天为大家带来了自己的爬虫代码集，主要是以往学习Python爬虫过程中写过的大小项目，可能不是很全面，但是持续在更新，那我的代码里有什么？</p><p><img src="https://upload-images.jianshu.io/upload_images/6458648-9687b9c69d8e9dc2.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/150/format/webp" alt="img"></p><h4 id="1-Cnblogs-博客园爬虫"><a href="#1-Cnblogs-博客园爬虫" class="headerlink" title="1. Cnblogs - 博客园爬虫"></a>1. <a href="https://github.com/Northxw/Python3_WebSpider/tree/master/01-Cnblogs" target="_blank" rel="noopener">Cnblogs</a> - 博客园爬虫</h4><p>  使用Urllib库实现博客园”最新文章”的爬取，可以自行扩展为全站爬虫，但是要注意它的接口。</p><h4 id="2-Golory-of-Kings-王者荣耀爬虫"><a href="#2-Golory-of-Kings-王者荣耀爬虫" class="headerlink" title="2. Golory_of_Kings - 王者荣耀爬虫"></a>2. <a href="https://github.com/Northxw/Python3_WebSpider/tree/master/02-Golory_of_Kings" target="_blank" rel="noopener">Golory_of_Kings</a> - 王者荣耀爬虫</h4><p>  通过王者荣耀官网的英雄列表接口以及英雄皮肤的下载URL，完成对王者荣耀英雄全皮肤的下载。</p><h4 id="3-MaoYan-Top100-猫眼TOP100爬虫"><a href="#3-MaoYan-Top100-猫眼TOP100爬虫" class="headerlink" title="3.MaoYan_Top100 - 猫眼TOP100爬虫"></a>3.<a href="https://github.com/Northxw/Python3_WebSpider/tree/master/03-MaoYan_Top100" target="_blank" rel="noopener">MaoYan_Top100</a> - 猫眼TOP100爬虫</h4><p>  （见名知意）爬取猫眼TOP排行榜前100的电影信息。</p><h4 id="4-Moments-朋友圈爬虫"><a href="#4-Moments-朋友圈爬虫" class="headerlink" title="4.Moments - 朋友圈爬虫"></a>4.<a href="https://github.com/Northxw/Python3_WebSpider/tree/master/05-Moments" target="_blank" rel="noopener">Moments</a> - 朋友圈爬虫</h4><p>  基于自动化测试工具Appium的微信朋友圈爬虫，模拟登录、抓取动态、保存数据。</p><h4 id="5-Bilibili-B站爬虫"><a href="#5-Bilibili-B站爬虫" class="headerlink" title="5.Bilibili - B站爬虫"></a>5.<a href="https://github.com/Northxw/Python3_WebSpider/tree/master/09-Bilibili" target="_blank" rel="noopener">Bilibili</a> - B站爬虫</h4><p>  模拟登录B站并识别滑动验证码。破解滑动验证码的思路主要沿袭崔大破解极验的思路，登录、获取验证码Image对象、打码平台识别、本地转化识别结果、Selenium模拟滑动等。</p><h4 id="6-DouYin-抖音爬虫"><a href="#6-DouYin-抖音爬虫" class="headerlink" title="6.DouYin - 抖音爬虫"></a>6.<a href="https://github.com/Northxw/Python3_WebSpider/tree/master/10-DouYin" target="_blank" rel="noopener">DouYin</a> - 抖音爬虫</h4><p>  基于Mitmdump的抖音短视频爬取，包括视频名称、作者名称、获赞数、转发量等重要信息的获取。</p><h4 id="7-Crack-Jianshu-简书爬虫"><a href="#7-Crack-Jianshu-简书爬虫" class="headerlink" title="7.Crack_Jianshu - 简书爬虫"></a>7.<a href="https://github.com/Northxw/Python3_WebSpider/tree/master/12-Crack_Jianshu" target="_blank" rel="noopener">Crack_Jianshu</a> - 简书爬虫</h4><p>  为了照顾简书，完成了简书的模拟登录并识别简书的点触式验证码，破解验证码的思路基本与滑动验证码相同。</p><h4 id="8-Selenium-163-网易163邮箱爬虫"><a href="#8-Selenium-163-网易163邮箱爬虫" class="headerlink" title="8.Selenium_163 - 网易163邮箱爬虫"></a>8.<a href="https://github.com/Northxw/Python3_WebSpider/tree/master/20-Selenium_163" target="_blank" rel="noopener">Selenium_163</a> - 网易163邮箱爬虫</h4><p>  模拟登录网易163邮箱，并发送SOS邮件。主要是为了对iframe子节点的训练。</p><h4 id="9-City-58-58房屋信息爬虫"><a href="#9-City-58-58房屋信息爬虫" class="headerlink" title="9.City_58 - 58房屋信息爬虫"></a>9.<a href="https://github.com/Northxw/Python3_WebSpider/tree/master/17-City_58" target="_blank" rel="noopener">City_58</a> - 58房屋信息爬虫</h4><p>  使用Scrapy框架爬取58同城的出租房信息，并包含下级网页数据的爬虫，项目难度较大，可根据能力练习。</p><h4 id="10-Selenium-Cnki-知网爬虫"><a href="#10-Selenium-Cnki-知网爬虫" class="headerlink" title="10.Selenium_Cnki - 知网爬虫"></a>10.<a href="https://github.com/Northxw/Python3_WebSpider/tree/master/08-Selenium_Cnki" target="_blank" rel="noopener">Selenium_Cnki</a> - 知网爬虫</h4><p>  模拟登录注册知网，识别知网的普通数字英文混合验证码。别小看这简单的验证码，可是用tesserocr等Python识别库搞不定的。</p><p>其他的可以看截图：</p><p><img src="https://upload-images.jianshu.io/upload_images/6458648-7a6baa6bab71d74d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/986/format/webp" alt="img"></p><p>  我是爬虫小白，代码中如果有写的什么不好的地方，可以提交issue。最后，贴出我的<strong>Github仓库地址</strong>：<a href="https://github.com/Northxw/Python3_WebSpider，欢迎各种**star**和**fork**，一起学爬虫。" target="_blank" rel="noopener">https://github.com/Northxw/Python3_WebSpider，欢迎各种**star**和**fork**，一起学爬虫。</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python 爬虫（二）</title>
    <link href="http://yoursite.com/2020/06/13/Python-%E7%88%AC%E8%99%AB%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://yoursite.com/2020/06/13/Python-%E7%88%AC%E8%99%AB%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2020-06-13T11:59:47.000Z</published>
    <updated>2020-06-13T12:00:24.194Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p> Github代码获取：<a href="https://github.com/Jack-Cherish/python-spider" target="_blank" rel="noopener">https://github.com/Jack-Cherish/python-spider</a><br>Python版本： Python3.x<br>运行平台： Windows<br>IDE： Sublime text3</p><hr><h2 id="更多教程，请查看：https-cuijiahua-com-blog-spider"><a href="#更多教程，请查看：https-cuijiahua-com-blog-spider" class="headerlink" title="更多教程，请查看：https://cuijiahua.com/blog/spider/"></a>更多教程，请查看：<a href="https://cuijiahua.com/blog/spider/" target="_blank" rel="noopener">https://cuijiahua.com/blog/spider/</a></h2><h1 id="一-前言"><a href="#一-前言" class="headerlink" title="一 前言"></a>一 前言</h1><p><strong>强烈建议：</strong>请在电脑的陪同下，阅读本文。本文以实战为主，阅读过程如稍有不适，还望多加练习。<br>本文的实战内容有：</p><ul><li>网络小说下载(静态网站)</li><li>优美壁纸下载(动态网站)</li><li>视频下载</li></ul><hr><p>2020年，更多精彩内容，尽在微信公众号，欢迎您的关注：</p><p><img src="https://img-blog.csdnimg.cn/20200423085559318.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2M0MDY0OTU3NjI=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h1 id="二-网络爬虫简介"><a href="#二-网络爬虫简介" class="headerlink" title="二 网络爬虫简介"></a>二 网络爬虫简介</h1><p>网络爬虫，也叫网络蜘蛛(Web Spider)。它根据网页地址(URL)爬取网页内容，而网页地址(URL)就是我们在浏览器中输入的网站链接。比如：<a href="https://www.baidu.com/，它就是一个URL。" target="_blank" rel="noopener">https://www.baidu.com/，它就是一个URL。</a></p><p>在讲解爬虫内容之前，我们需要先学习一项写爬虫的必备技能：<strong>审查元素（如果已掌握，可跳过此部分内容）。</strong></p><h2 id="1-审查元素"><a href="#1-审查元素" class="headerlink" title="1 审查元素"></a>1 审查元素</h2><p>在浏览器的地址栏输入URL地址，在网页处右键单击，找到检查。(不同浏览器的叫法不同，Chrome浏览器叫做检查，Firefox浏览器叫做查看元素，但是功能都是相同的)</p><p><img src="https://img-blog.csdn.net/20170928142328881?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYzQwNjQ5NTc2Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p>我们可以看到，右侧出现了一大推代码，这些代码就叫做HTML。什么是HTML？举个容易理解的例子：<strong>我们的基因决定了我们的原始容貌，服务器返回的HTML决定了网站的原始容貌。</strong></p><p><img src="https://img-blog.csdn.net/20170928142436698?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYzQwNjQ5NTc2Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p>为啥说是<strong>原始容貌</strong>呢？因为人可以<strong>整容啊</strong>！扎心了，有木有？<strong>那网站也可以”整容”吗？可以！请看下图：</strong></p><p><img src="https://img-blog.csdn.net/20170928142523847?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYzQwNjQ5NTc2Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p>我能有这么多钱吗？显然不可能。我是怎么给网站”整容”的呢？就是通过修改服务器返回的HTML信息。我们每个人都是”整容大师”，可以修改页面信息。<strong>我们在页面的哪个位置点击审查元素，浏览器就会为我们定位到相应的HTML位置，进而就可以在本地更改HTML信息。</strong></p><p><strong>再举个小例子：</strong>我们都知道，使用浏览器”记住密码”的功能，密码会变成一堆小黑点，是不可见的。可以让密码显示出来吗？可以，只需给页面”动个小手术”！以淘宝为例，在输入密码框处右键，点击检查。</p><p><img src="https://img-blog.csdn.net/20170928142556264?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYzQwNjQ5NTc2Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p>可以看到，浏览器为我们自动定位到了相应的HTML位置。将下图中的password属性值改为text属性值(<strong>直接在右侧代码处修改</strong>)：</p><p><img src="https://img-blog.csdn.net/20170928142703187?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYzQwNjQ5NTc2Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p>我们让浏览器记住的密码就这样显现出来了：</p><p><img src="https://img-blog.csdn.net/20170928142630494?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYzQwNjQ5NTc2Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p>说这么多，什么意思呢？<strong>浏览器就是作为客户端从服务器端获取信息，然后将信息解析，并展示给我们的。</strong>我们可以在本地修改HTML信息，为网页”整容”，但是我们修改的信息不会回传到服务器，服务器存储的HTML信息不会改变。刷新一下界面，页面还会回到原本的样子。<strong>这就跟人整容一样，我们能改变一些表面的东西，但是不能改变我们的基因。</strong></p><h2 id="2-简单实例"><a href="#2-简单实例" class="headerlink" title="2 简单实例"></a>2 简单实例</h2><p><strong>网络爬虫的第一步就是根据URL，获取网页的HTML信息。\</strong>在Python3中，可以使用*<em>urllib.request*</em>和<strong>requests</strong>进行网页爬取。</p><ul><li>urllib库是python内置的，无需我们额外安装，只要安装了Python就可以使用这个库。</li><li>requests库是第三方库，需要我们自己安装。</li></ul><p>requests库强大好用，所以本文使用requests库获取网页的HTML信息。requests库的github地址：<a href="https://github.com/requests/requests" target="_blank" rel="noopener">https://github.com/requests/requests</a></p><h3 id="1-requests安装"><a href="#1-requests安装" class="headerlink" title="(1) requests安装"></a>(1) requests安装</h3><p>在cmd中，使用如下指令安装requests：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install requests</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>或者：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">easy_install requests</span><br><span class="line">1</span><br></pre></td></tr></table></figure><h3 id="2-简单实例-1"><a href="#2-简单实例-1" class="headerlink" title="(2) 简单实例"></a>(2) 简单实例</h3><p>requests库的基础方法如下：</p><p><img src="https://img-blog.csdn.net/20170928142920593?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYzQwNjQ5NTc2Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p>官方中文教程地址：<a href="http://docs.python-requests.org/zh_CN/latest/user/quickstart.html" target="_blank" rel="noopener">http://docs.python-requests.org/zh_CN/latest/user/quickstart.html</a></p><p>requests库的开发者为我们提供了详细的中文教程，查询起来很方便。本文不会对其所有内容进行讲解，摘取其部分使用到的内容，进行实战说明。</p><p>首先，让我们看下requests.get()方法，它用于向服务器发起GET请求，不了解GET请求没有关系。我们可以这样理解：get的中文意思是得到、抓住，那这个requests.get()方法就是从服务器得到、抓住数据，也就是获取数据。让我们看一个例子(以 <a href="http://www.gitbook.cn为例)来加深理解：">www.gitbook.cn为例)来加深理解：</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding:UTF-8 -*-</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    target &#x3D; &#39;http:&#x2F;&#x2F;gitbook.cn&#x2F;&#39;</span><br><span class="line">    req &#x3D; requests.get(url&#x3D;target)</span><br><span class="line">    print(req.text)</span><br><span class="line">1234567</span><br></pre></td></tr></table></figure><p>requests.get()方法必须设置的一个参数就是url，因为我们得告诉GET请求，我们的目标是谁，我们要获取谁的信息。运行程序看下结果：</p><p><img src="https://img-blog.csdn.net/20170928143016033?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYzQwNjQ5NTc2Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p>左侧是我们程序获得的结果，右侧是我们在<a href="http://www.gitbook.cn网站审查元素获得的信息。我们可以看到，我们已经顺利获得了该网页的HTML信息。这就是一个最简单的爬虫实例，可能你会问，我只是爬取了这个网页的HTML信息，有什么用呢？客官稍安勿躁，接下来进入我们的实战正文。">www.gitbook.cn网站审查元素获得的信息。我们可以看到，我们已经顺利获得了该网页的HTML信息。这就是一个最简单的爬虫实例，可能你会问，我只是爬取了这个网页的HTML信息，有什么用呢？客官稍安勿躁，接下来进入我们的实战正文。</a></p><hr><h1 id="三-爬虫实战"><a href="#三-爬虫实战" class="headerlink" title="三 爬虫实战"></a>三 爬虫实战</h1><h2 id="1-小说下载"><a href="#1-小说下载" class="headerlink" title="1 小说下载"></a>1 小说下载</h2><h3 id="1-实战背景"><a href="#1-实战背景" class="headerlink" title="(1) 实战背景"></a>(1) 实战背景</h3><p>小说网站-笔趣看：URL：<a href="http://www.biqukan.com/" target="_blank" rel="noopener">http://www.biqukan.com/</a></p><p>本次实战就是从该网站爬取并保存一本名为《一念永恒》的小说。</p><h3 id="2-小试牛刀"><a href="#2-小试牛刀" class="headerlink" title="(2) 小试牛刀"></a>(2) 小试牛刀</h3><p>我们先看下《一念永恒》小说的第一章内容，URL：<a href="http://www.biqukan.com/1_1094/5403177.html" target="_blank" rel="noopener">http://www.biqukan.com/1_1094/5403177.html</a></p><p><img src="https://img-blog.csdn.net/20170928143125108?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYzQwNjQ5NTc2Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p>我们先用已经学到的知识获取HTML信息试一试，编写代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding:UTF-8 -*-</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    target &#x3D; &#39;http:&#x2F;&#x2F;www.biqukan.com&#x2F;1_1094&#x2F;5403177.html&#39;</span><br><span class="line">    req &#x3D; requests.get(url&#x3D;target)</span><br><span class="line">    print(req.text)</span><br><span class="line">1234567</span><br></pre></td></tr></table></figure><p>运行代码，可以看到如下结果：</p><p><img src="https://img-blog.csdn.net/20170928143206652?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYzQwNjQ5NTc2Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p>可以看到，我们很轻松地获取了HTML信息。但是，很显然，很多信息是我们不想看到的，我们只想获得如右侧所示的正文内容，我们不关心div、br这些html标签。<strong>如何把正文内容从这些众多的html标签中提取出来呢？这就是本次实战的主要内容。</strong></p><p>###（3）Beautiful Soup</p><p><strong>爬虫的第一步，获取整个网页的HTML信息，我们已经完成。接下来就是爬虫的第二步，解析HTML信息，提取我们感兴趣的内容。</strong>对于本小节的实战，我们感兴趣的内容就是文章的正文。提取的方法有很多，例如使用正则表达式、Xpath、Beautiful Soup等。对于初学者而言，最容易理解，并且使用简单的方法就是使用Beautiful Soup提取感兴趣内容。</p><p>Beautiful Soup的安装方法和requests一样，使用如下指令安装(也是二选一)：</p><ul><li>pip install beautifulsoup4</li><li>easy_install beautifulsoup4</li></ul><p>一个强大的第三方库，都会有一个详细的官方文档。我们很幸运，Beautiful Soup也是有中文的官方文档。</p><p>URL：<a href="http://beautifulsoup.readthedocs.io/zh_CN/latest/" target="_blank" rel="noopener">http://beautifulsoup.readthedocs.io/zh_CN/latest/</a></p><p>同理，我会根据实战需求，讲解Beautiful Soup库的部分使用方法，更详细的内容，请查看官方文档。</p><p>现在，我们使用已经掌握的审查元素方法，查看一下我们的目标页面，你会看到如下内容：</p><p><img src="https://img-blog.csdn.net/20170928143325915?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYzQwNjQ5NTc2Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p>不难发现，文章的所有内容都放在了一个名为div的“东西下面”，这个”东西”就是html标签。HTML标签是HTML语言中最基本的单位，HTML标签是HTML最重要的组成部分。不理解，没关系，我们再举个简单的例子：</p><blockquote><p>一个女人的包包里，会有很多东西，她们会根据自己的习惯将自己的东西进行分类放好。镜子和口红这些会经常用到的东西，会归放到容易拿到的外侧口袋里。那些不经常用到，需要注意安全存放的证件会放到不容易拿到的里侧口袋里。</p></blockquote><p>html标签就像一个个“口袋”，每个“口袋”都有自己的特定功能，负责存放不同的内容。显然，上述例子中的div标签下存放了我们关心的正文内容。这个div标签是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;content&quot;, class&#x3D;&quot;showtxt&quot;&gt;</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>细心的朋友可能已经发现，除了div字样外，还有id和class。id和class就是div标签的属性，content和showtxt是属性值，一个属性对应一个属性值。这东西有什么用？它是用来区分不同的div标签的，因为div标签可以有很多，我们怎么加以区分不同的div标签呢？就是通过不同的属性值。</p><p>仔细观察目标网站一番，我们会发现这样一个事实：<strong>class属性为showtxt的div标签，独一份！这个标签里面存放的内容，是我们关心的正文部分。</strong></p><p>知道这个信息，我们就可以使用Beautiful Soup提取我们想要的内容了，编写代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding:UTF-8 -*-</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">import requests</span><br><span class="line">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:</span><br><span class="line">     target &#x3D; &#39;http:&#x2F;&#x2F;www.biqukan.com&#x2F;1_1094&#x2F;5403177.html&#39;</span><br><span class="line">     req &#x3D; requests.get(url &#x3D; target)</span><br><span class="line">     html &#x3D; req.text</span><br><span class="line">     bf &#x3D; BeautifulSoup(html)</span><br><span class="line">     texts &#x3D; bf.find_all(&#39;div&#39;, class_ &#x3D; &#39;showtxt&#39;) print(texts)</span><br><span class="line">123456789</span><br></pre></td></tr></table></figure><p>在解析html之前，我们需要创建一个Beautiful Soup对象。BeautifulSoup函数里的参数就是我们已经获得的html信息。然后我们使用find_all方法，获得html信息中所有class属性为showtxt的div标签。find_all方法的第一个参数是获取的标签名，第二个参数class_是标签的属性，为什么不是class，而带了一个下划线呢？因为python中class是关键字，为了防止冲突，这里使用class_表示标签的class属性，class_后面跟着的showtxt就是属性值了。看下我们要匹配的标签格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;content&quot;, class&#x3D;&quot;showtxt&quot;&gt;</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>这样对应的看一下，是不是就懂了？可能有人会问了，为什么不是find_all(‘div’, id = ‘content’, class_ = ‘showtxt’)?这样其实也是可以的，属性是作为查询时候的约束条件，添加一个class_=’showtxt’条件，我们就已经能够准确匹配到我们想要的标签了，所以我们就不必再添加id这个属性了。运行代码查看我们匹配的结果：</p><p><img src="https://img-blog.csdn.net/20170928143457737?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYzQwNjQ5NTc2Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p>我们可以看到，我们已经顺利匹配到我们关心的正文内容，但是还有一些我们不想要的东西。比如div标签名，br标签，以及各种空格。怎么去除这些东西呢？我们继续编写代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding:UTF-8 -*-</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">import requests</span><br><span class="line">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:</span><br><span class="line">     target &#x3D; &#39;http:&#x2F;&#x2F;www.biqukan.com&#x2F;1_1094&#x2F;5403177.html&#39;</span><br><span class="line">     req &#x3D; requests.get(url &#x3D; target) html &#x3D; req.text</span><br><span class="line">     bf &#x3D; BeautifulSoup(html)</span><br><span class="line">     texts &#x3D; bf.find_all(&#39;div&#39;, class_ &#x3D; &#39;showtxt&#39;)</span><br><span class="line">     print(texts[0].text.replace(&#39;\xa0&#39;*8,&#39;\n\n&#39;))</span><br><span class="line">123456789</span><br></pre></td></tr></table></figure><p>find_all匹配的返回的结果是一个列表。提取匹配结果后，使用text属性，提取文本内容，滤除br标签。随后使用replace方法，剔除空格，替换为回车进行分段。 在html中是用来表示空格的。replace(’\xa0’*8,’\n\n’)就是去掉下图的八个空格符号，并用回车代替：</p><p><img src="https://img-blog.csdn.net/20170928143543366?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYzQwNjQ5NTc2Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p>程序运行结果如下：</p><p><img src="https://img-blog.csdn.net/20170928143634255?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYzQwNjQ5NTc2Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p>可以看到，我们很自然的匹配到了所有正文内容，并进行了分段。我们已经顺利获得了一个章节的内容，要想下载正本小说，我们就要获取每个章节的链接。我们先分析下小说目录：</p><p>URL：<a href="http://www.biqukan.com/1_1094/" target="_blank" rel="noopener">http://www.biqukan.com/1_1094/</a></p><p><img src="https://img-blog.csdn.net/20170928143709074?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYzQwNjQ5NTc2Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p>通过审查元素，我们发现可以发现，这些章节都存放在了class属性为listmain的div标签下，选取部分html代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;listmain&quot;&gt;</span><br><span class="line">&lt;dl&gt;</span><br><span class="line">&lt;dt&gt;《一念永恒》最新章节列表&lt;&#x2F;dt&gt;</span><br><span class="line">&lt;dd&gt;&lt;a href&#x3D;&quot;&#x2F;1_1094&#x2F;15932394.html&quot;&gt;第1027章 第十道门&lt;&#x2F;a&gt;&lt;&#x2F;dd&gt;</span><br><span class="line">&lt;dd&gt;&lt;a href&#x3D;&quot;&#x2F;1_1094&#x2F;15923072.html&quot;&gt;第1026章 绝伦道法！&lt;&#x2F;a&gt;&lt;&#x2F;dd&gt;</span><br><span class="line">&lt;dd&gt;&lt;a href&#x3D;&quot;&#x2F;1_1094&#x2F;15921862.html&quot;&gt;第1025章 长生灯！&lt;&#x2F;a&gt;&lt;&#x2F;dd&gt;</span><br><span class="line">&lt;dd&gt;&lt;a href&#x3D;&quot;&#x2F;1_1094&#x2F;15918591.html&quot;&gt;第1024章 一目晶渊&lt;&#x2F;a&gt;&lt;&#x2F;dd&gt;</span><br><span class="line">&lt;dd&gt;&lt;a href&#x3D;&quot;&#x2F;1_1094&#x2F;15906236.html&quot;&gt;第1023章 通天道门&lt;&#x2F;a&gt;&lt;&#x2F;dd&gt;</span><br><span class="line">&lt;dd&gt;&lt;a href&#x3D;&quot;&#x2F;1_1094&#x2F;15903775.html&quot;&gt;第1022章 四大凶兽！&lt;&#x2F;a&gt;&lt;&#x2F;dd&gt;</span><br><span class="line">&lt;dd&gt;&lt;a href&#x3D;&quot;&#x2F;1_1094&#x2F;15890427.html&quot;&gt;第1021章 鳄首！&lt;&#x2F;a&gt;&lt;&#x2F;dd&gt;</span><br><span class="line">&lt;dd&gt;&lt;a href&#x3D;&quot;&#x2F;1_1094&#x2F;15886627.html&quot;&gt;第1020章 一触即发！&lt;&#x2F;a&gt;&lt;&#x2F;dd&gt;</span><br><span class="line">&lt;dd&gt;&lt;a href&#x3D;&quot;&#x2F;1_1094&#x2F;15875306.html&quot;&gt;第1019章 魁祖的气息！&lt;&#x2F;a&gt;&lt;&#x2F;dd&gt;</span><br><span class="line">&lt;dd&gt;&lt;a href&#x3D;&quot;&#x2F;1_1094&#x2F;15871572.html&quot;&gt;第1018章 绝望的魁皇城&lt;&#x2F;a&gt;&lt;&#x2F;dd&gt;</span><br><span class="line">&lt;dd&gt;&lt;a href&#x3D;&quot;&#x2F;1_1094&#x2F;15859514.html&quot;&gt;第1017章 我还是恨你！&lt;&#x2F;a&gt;&lt;&#x2F;dd&gt;</span><br><span class="line">&lt;dd&gt;&lt;a href&#x3D;&quot;&#x2F;1_1094&#x2F;15856137.html&quot;&gt;第1016章 从来没有世界之门！&lt;&#x2F;a&gt;&lt;&#x2F;dd&gt;</span><br><span class="line">&lt;dt&gt;《一念永恒》正文卷&lt;&#x2F;dt&gt; &lt;dd&gt;&lt;a href&#x3D;&quot;&#x2F;1_1094&#x2F;5386269.html&quot;&gt;外传1 柯父。&lt;&#x2F;a&gt;&lt;&#x2F;dd&gt;</span><br><span class="line">&lt;dd&gt;&lt;a href&#x3D;&quot;&#x2F;1_1094&#x2F;5386270.html&quot;&gt;外传2 楚玉嫣。&lt;&#x2F;a&gt;&lt;&#x2F;dd&gt; &lt;dd&gt;&lt;a href&#x3D;&quot;&#x2F;1_1094&#x2F;5386271.html&quot;&gt;外传3 鹦鹉与皮冻。&lt;&#x2F;a&gt;&lt;&#x2F;dd&gt;</span><br><span class="line">&lt;dd&gt;&lt;a href&#x3D;&quot;&#x2F;1_1094&#x2F;5403177.html&quot;&gt;第一章 他叫白小纯&lt;&#x2F;a&gt;&lt;&#x2F;dd&gt; &lt;dd&gt;&lt;a href&#x3D;&quot;&#x2F;1_1094&#x2F;5428081.html&quot;&gt;第二章 火灶房&lt;&#x2F;a&gt;&lt;&#x2F;dd&gt;</span><br><span class="line">&lt;dd&gt;&lt;a href&#x3D;&quot;&#x2F;1_1094&#x2F;5433843.html&quot;&gt;第三章 六句真言&lt;&#x2F;a&gt;&lt;&#x2F;dd&gt; &lt;dd&gt;&lt;a href&#x3D;&quot;&#x2F;1_1094&#x2F;5447905.html&quot;&gt;第四章 炼灵&lt;&#x2F;a&gt;&lt;&#x2F;dd&gt;</span><br><span class="line">&lt;&#x2F;dl&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">123456789101112131415161718192021</span><br></pre></td></tr></table></figure><p>在分析之前，让我们先介绍一个概念：父节点、子节点、孙节点。<code>&lt;div&gt;</code>和<code>&lt;/div&gt;</code>限定了<code>&lt;div&gt;</code>标签的开始和结束的位置，他们是成对出现的，有开始位置，就有结束位置。我们可以看到，在<code>&lt;div&gt;</code>标签包含<code>&lt;dl&gt;</code>标签，那这个<code>&lt;dl&gt;</code>标签就是<code>&lt;div&gt;</code>标签的子节点，<code>&lt;dl&gt;</code>标签又包含<code>&lt;dt&gt;</code>标签和<code>&lt;dd&gt;</code>标签，那么<code>&lt;dt&gt;</code>标签和<code>&lt;dd&gt;</code>标签就是<code>&lt;div&gt;</code>标签的孙节点。有点绕？那你记住这句话：<strong>谁包含谁，谁就是谁儿子！</strong></p><p><strong>他们之间的关系都是相对的。</strong>比如对于<code>&lt;dd&gt;</code>标签，它的子节点是<code>&lt;a&gt;</code>标签，它的父节点是<code>&lt;dl&gt;</code>标签。这跟我们人是一样的，上有老下有小。</p><p>看到这里可能有人会问，这有好多<code>&lt;dd&gt;</code>标签和<code>&lt;a&gt;</code>标签啊！不同的<code>&lt;dd&gt;</code>标签，它们是什么关系啊？显然，兄弟姐妹喽！我们称它们为兄弟结点。<br>好了，概念明确清楚，接下来，让我们分析一下问题。我们看到每个章节的名字存放在了<code>&lt;a&gt;</code>标签里面。<code>&lt;a&gt;</code>标签还有一个href属性。这里就不得不提一下<code>&lt;a&gt;</code>标签的定义了，<code>&lt;a&gt;</code>标签定义了一个超链接，用于从一张页面链接到另一张页面。<code>&lt;a&gt;</code> 标签最重要的属性是 href 属性，它指示链接的目标。</p><p>我们将之前获得的第一章节的URL和<code>&lt;a&gt;</code> 标签对比看一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.biqukan.com&#x2F;1_1094&#x2F;5403177.html</span><br><span class="line">&lt;a href&#x3D;&quot;&#x2F;1_1094&#x2F;5403177.html&quot;&gt;第一章 他叫白小纯&lt;&#x2F;a&gt;</span><br><span class="line">12</span><br></pre></td></tr></table></figure><p>不难发现，<code>&lt;a&gt;</code> 标签中href属性存放的属性值/1_1094/5403177.html是章节URL<a href="http://www.biqukan.com/1_1094/5403177.html的后半部分。其他章节也是如此！那这样，我们就可以根据`" target="_blank" rel="noopener">http://www.biqukan.com/1_1094/5403177.html的后半部分。其他章节也是如此！那这样，我们就可以根据`</a><a>`标签的href属性值获得每个章节的链接和名称了。</p><p>总结一下：小说每章的链接放在了class属性为listmain的<code>&lt;div&gt;</code>标签下的<code>&lt;a&gt;</code>标签中。链接具体位置放在html-&gt;body-&gt;div-&gt;dl-&gt;dd-&gt;a的href属性中。先匹配class属性为listmain的<code>&lt;div&gt;</code>标签，再匹配<code>&lt;a&gt;</code>标签。编写代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding:UTF-8 -*-</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">import requests</span><br><span class="line">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:</span><br><span class="line">     target &#x3D; &#39;http:&#x2F;&#x2F;www.biqukan.com&#x2F;1_1094&#x2F;&#39;</span><br><span class="line">     req &#x3D; requests.get(url &#x3D; target)</span><br><span class="line">     html &#x3D; req.text</span><br><span class="line">     div_bf &#x3D; BeautifulSoup(html)</span><br><span class="line">     div &#x3D; div_bf.find_all(&#39;div&#39;, class_ &#x3D; &#39;listmain&#39;)</span><br><span class="line">     print(div[0])</span><br><span class="line">12345678910</span><br></pre></td></tr></table></figure><p>还是使用find_all方法，运行结果如下：</p><p><img src="https://img-blog.csdn.net/20170928144048324?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYzQwNjQ5NTc2Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p>很顺利，接下来再匹配每一个<code>&lt;a&gt;</code>标签，并提取章节名和章节文章。如果我们使用Beautiful Soup匹配到了下面这个<code>&lt;a&gt;</code>标签，如何提取它的href属性和<code>&lt;a&gt;</code>标签里存放的章节名呢？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;&#x2F;1_1094&#x2F;5403177.html&quot;&gt;第一章 他叫白小纯&lt;&#x2F;a&gt;</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>方法很简单，对Beautiful Soup返回的匹配结果a，使用a.get(‘href’)方法就能获取href的属性值，使用a.string就能获取章节名，编写代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding:UTF-8 -*-</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">import requests</span><br><span class="line">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:</span><br><span class="line">     server &#x3D; &#39;http:&#x2F;&#x2F;www.biqukan.com&#x2F;&#39;</span><br><span class="line">     target &#x3D; &#39;http:&#x2F;&#x2F;www.biqukan.com&#x2F;1_1094&#x2F;&#39;</span><br><span class="line">     req &#x3D; requests.get(url &#x3D; target) html &#x3D; req.text</span><br><span class="line">     div_bf &#x3D; BeautifulSoup(html)</span><br><span class="line">     div &#x3D; div_bf.find_all(&#39;div&#39;, class_ &#x3D; &#39;listmain&#39;)</span><br><span class="line">     a_bf &#x3D; BeautifulSoup(str(div[0]))</span><br><span class="line">     a &#x3D; a_bf.find_all(&#39;a&#39;)</span><br><span class="line">     for each in a:</span><br><span class="line">          print(each.string, server + each.get(&#39;href&#39;))</span><br><span class="line">12345678910111213</span><br></pre></td></tr></table></figure><p>因为find_all返回的是一个列表，里边存放了很多的<code>&lt;a&gt;</code>标签，所以使用for循环遍历每个<code>&lt;a&gt;</code>标签并打印出来，运行结果如下。</p><p><img src="https://img-blog.csdn.net/20170928144215561?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYzQwNjQ5NTc2Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p>最上面匹配的一千多章的内容是最新更新的12章节的链接。这12章内容会和下面的重复，所以我们要滤除，除此之外，还有那3个外传，我们也不想要。这些都简单地剔除就好。</p><p>###（3）整合代码</p><p>每个章节的链接、章节名、章节内容都有了。接下来就是整合代码，将获得内容写入文本文件存储就好了。编写代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding:UTF-8 -*-</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">import requests, sys</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">类说明:下载《笔趣看》网小说《一念永恒》</span><br><span class="line">Parameters:</span><br><span class="line">    无</span><br><span class="line">Returns:</span><br><span class="line">    无</span><br><span class="line">Modify:</span><br><span class="line">    2017-09-13</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">class downloader(object):</span><br><span class="line"></span><br><span class="line">    def __init__(self):</span><br><span class="line">        self.server &#x3D; &#39;http:&#x2F;&#x2F;www.biqukan.com&#x2F;&#39;</span><br><span class="line">        self.target &#x3D; &#39;http:&#x2F;&#x2F;www.biqukan.com&#x2F;1_1094&#x2F;&#39;</span><br><span class="line">        self.names &#x3D; []            #存放章节名</span><br><span class="line">        self.urls &#x3D; []            #存放章节链接</span><br><span class="line">        self.nums &#x3D; 0            #章节数</span><br><span class="line"></span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    函数说明:获取下载链接</span><br><span class="line">    Parameters:</span><br><span class="line">        无</span><br><span class="line">    Returns:</span><br><span class="line">        无</span><br><span class="line">    Modify:</span><br><span class="line">        2017-09-13</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    def get_download_url(self):</span><br><span class="line">        req &#x3D; requests.get(url &#x3D; self.target)</span><br><span class="line">        html &#x3D; req.text</span><br><span class="line">        div_bf &#x3D; BeautifulSoup(html)</span><br><span class="line">        div &#x3D; div_bf.find_all(&#39;div&#39;, class_ &#x3D; &#39;listmain&#39;)</span><br><span class="line">        a_bf &#x3D; BeautifulSoup(str(div[0]))</span><br><span class="line">        a &#x3D; a_bf.find_all(&#39;a&#39;)</span><br><span class="line">        self.nums &#x3D; len(a[15:])                                #剔除不必要的章节，并统计章节数</span><br><span class="line">        for each in a[15:]:</span><br><span class="line">            self.names.append(each.string)</span><br><span class="line">            self.urls.append(self.server + each.get(&#39;href&#39;))</span><br><span class="line"></span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    函数说明:获取章节内容</span><br><span class="line">    Parameters:</span><br><span class="line">        target - 下载连接(string)</span><br><span class="line">    Returns:</span><br><span class="line">        texts - 章节内容(string)</span><br><span class="line">    Modify:</span><br><span class="line">        2017-09-13</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    def get_contents(self, target):</span><br><span class="line">        req &#x3D; requests.get(url &#x3D; target)</span><br><span class="line">        html &#x3D; req.text</span><br><span class="line">        bf &#x3D; BeautifulSoup(html)</span><br><span class="line">        texts &#x3D; bf.find_all(&#39;div&#39;, class_ &#x3D; &#39;showtxt&#39;)</span><br><span class="line">        texts &#x3D; texts[0].text.replace(&#39;\xa0&#39;*8,&#39;\n\n&#39;)</span><br><span class="line">        return texts</span><br><span class="line"></span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    函数说明:将爬取的文章内容写入文件</span><br><span class="line">    Parameters:</span><br><span class="line">        name - 章节名称(string)</span><br><span class="line">        path - 当前路径下,小说保存名称(string)</span><br><span class="line">        text - 章节内容(string)</span><br><span class="line">    Returns:</span><br><span class="line">        无</span><br><span class="line">    Modify:</span><br><span class="line">        2017-09-13</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    def writer(self, name, path, text):</span><br><span class="line">        write_flag &#x3D; True</span><br><span class="line">        with open(path, &#39;a&#39;, encoding&#x3D;&#39;utf-8&#39;) as f:</span><br><span class="line">            f.write(name + &#39;\n&#39;)</span><br><span class="line">            f.writelines(text)</span><br><span class="line">            f.write(&#39;\n\n&#39;)</span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:</span><br><span class="line">    dl &#x3D; downloader()</span><br><span class="line">    dl.get_download_url()</span><br><span class="line">    print(&#39;《一年永恒》开始下载：&#39;)</span><br><span class="line">    for i in range(dl.nums):</span><br><span class="line">        dl.writer(dl.names[i], &#39;一念永恒.txt&#39;, dl.get_contents(dl.urls[i]))</span><br><span class="line">        sys.stdout.write(&quot;  已下载:%.3f%%&quot; %  float(i&#x2F;dl.nums) + &#39;\r&#39;)</span><br><span class="line">        sys.stdout.flush()</span><br><span class="line">    print(&#39;《一年永恒》下载完成&#39;)</span><br><span class="line">123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687</span><br></pre></td></tr></table></figure><p>很简单的程序，单进程跑，没有开进程池。下载速度略慢，喝杯茶休息休息吧。代码运行效果如下图所示：</p><p><img src="https://img-blog.csdn.net/20170928144348411?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYzQwNjQ5NTc2Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><h2 id="2-优美壁纸下载"><a href="#2-优美壁纸下载" class="headerlink" title="2 优美壁纸下载"></a>2 优美壁纸下载</h2><p>###（1）实战背景</p><p>已经会爬取文字了，是不是感觉爬虫还是蛮好玩的呢？接下来，让我们进行一个进阶实战，了解一下反爬虫。</p><p>URL：<a href="https://unsplash.com/" target="_blank" rel="noopener">https://unsplash.com/</a></p><p><img src="https://img-blog.csdn.net/20170928144442435?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYzQwNjQ5NTc2Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p>看一看这些优美的壁纸，这个网站的名字叫做Unsplash，免费高清壁纸分享网是一个坚持每天分享高清的摄影图片的站点，每天更新一张高质量的图片素材，全是生活中的景象作品，清新的生活气息图片可以作为桌面壁纸也可以应用于各种需要的环境。</p><p>看到这么优美的图片，我的第一反应就是想收藏一些，作为知乎文章的题图再好不过了。每张图片我都很喜欢，批量下载吧，不多爬，就下载50张好了。</p><p>###（2）实战进阶</p><p>我们已经知道了每个html标签都有各自的功能。<code>&lt;a&gt;</code>标签存放一下超链接，图片存放在哪个标签里呢？html规定，图片统统给我放到<code>&lt;img&gt;</code>标签中！既然这样，我们截取就Unsplash网站中的一个<code>&lt;img&gt;</code>标签，分析一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;img alt&#x3D;&quot;Snow-capped mountain slopes under blue sky&quot; src&#x3D;&quot;https:&#x2F;&#x2F;images.unsplash.com&#x2F;photo-1428509774491-cfac96e12253?dpr&#x3D;1&amp;auto&#x3D;compress,format&amp;fit&#x3D;crop&amp;w&#x3D;360&amp;h&#x3D;240&amp;q&#x3D;80&amp;cs&#x3D;tinysrgb&amp;crop&#x3D;&quot; class&#x3D;&quot;cV68d&quot; style&#x3D;&quot;width: 220px; height: 147px;&quot;&gt;</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>可以看到，<code>&lt;img&gt;</code>标签有很多属性，有alt、src、class、style属性，其中src属性存放的就是我们需要的图片保存地址，我们根据这个地址就可以进行图片的下载。</p><p>那么，让我们先捋一捋这个过程：</p><ul><li>使用requeusts获取整个网页的HTML信息；</li><li>使用Beautiful Soup解析HTML信息，找到所有<code>&lt;img&gt;</code>标签，提取src属性，获取图片存放地址；</li><li>根据图片存放地址，下载图片。</li></ul><p>我们信心满满地按照这个思路爬取Unsplash试一试，编写代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding:UTF-8 -*-</span><br><span class="line">import requests</span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">     target &#x3D; &#39;https:&#x2F;&#x2F;unsplash.com&#x2F;&#39;</span><br><span class="line">     req &#x3D; requests.get(url&#x3D;target)</span><br><span class="line">     print(req.text)</span><br><span class="line">123456</span><br></pre></td></tr></table></figure><p>按照我们的设想，我们应该能找到很多<code>&lt;img&gt;</code>标签。但是我们发现，除了一些<code>&lt;script&gt;</code>标签和一些看不懂的代码之外，我们一无所获，一个<code>&lt;img&gt;</code>标签都没有！跟我们在网站审查元素的结果完全不一样，这是为什么？</p><p><img src="https://img-blog.csdn.net/20170928144659798?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYzQwNjQ5NTc2Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p><strong>答案就是，这个网站的所有图片都是动态加载的！</strong>网站有静态网站和动态网站之分，上一个实战爬取的网站是静态网站，而这个网站是动态网站，动态加载有一部分的目的就是为了反爬虫。</p><p><strong>对于什么是动态加载，你可以这样理解：我们知道化妆术学的好，贼厉害，可以改变一个人的容貌。相应的，动态加载用的好，也贼厉害，可以改变一个网站的容貌。</strong></p><p>动态网站使用动态加载常用的手段就是通过调用JavaScript来实现的。怎么实现JavaScript动态加载，我们不必深究，我们只要知道，动态加载的JavaScript脚本，就像化妆术需要用的化妆品，五花八门。有粉底、口红、睫毛膏等等，它们都有各自的用途。动态加载的JavaScript脚本也一样，一个动态加载的网站可能使用很多JavaScript脚本，我们只要找到负责动态加载图片的JavaScript脚本，不就找到我们需要的链接了吗？</p><p>对于初学者，我们不必看懂JavaScript执行的内容是什么，做了哪些事情，因为我们有强大的抓包工具，它自然会帮我们分析。这个强大的抓包工具就是Fiddler：</p><p>URL：<a href="http://www.telerik.com/fiddler" target="_blank" rel="noopener">http://www.telerik.com/fiddler</a></p><p>PS：也可以使用浏览器自带的Networks，但是我更推荐这个软件，因为它操作起来更高效。</p><p>安装方法很简单，傻瓜式安装，一直下一步即可，对于经常使用电脑的人来说，应该没有任何难度。</p><p>这个软件的使用方法也很简单，打开软件，然后用浏览器打开我们的目标网站，以Unsplash为例，抓包结果如下：</p><p><img src="https://img-blog.csdn.net/20170928144807582?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYzQwNjQ5NTc2Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p>我们可以看到，上图左侧红框处是我们的GET请求的地址，就是网站的URL，右下角是服务器返回的信息，我们可以看到，这些信息也是我们上一个程序获得的信息。这个不是我们需要的链接，我们继续往下看。</p><p><img src="https://img-blog.csdn.net/20170930125322590?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYzQwNjQ5NTc2Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p>我们发现上图所示的就是一个JavaScript请求，看右下侧服务器返回的信息是一个json格式的数据。这里面，就有我们需要的内容。我们局部放大看一下：</p><p><img src="https://img-blog.csdn.net/20170930125356095?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYzQwNjQ5NTc2Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p>这是Fiddler右侧的信息，上面是请求的Headers信息，包括这个Javascript的请求地 址：<a href="http://unsplash.com/napi/feeds/home，其他信息我们先不管，我们看看下面的内容。里面有很多图片的信息，包括图片的id，图片的大小，图片的链接，还有下一页的地址。这个脚本以json格式存储传输的数据，json格式是一种轻量级的数据交换格式，起到封装数据的作用，易于人阅读和编写，同时也易于机器解析和生成。这么多链接，可以看到图片的链接有很多，根据哪个链接下载图片呢？先别急，让我们继续分析：" target="_blank" rel="noopener">http://unsplash.com/napi/feeds/home，其他信息我们先不管，我们看看下面的内容。里面有很多图片的信息，包括图片的id，图片的大小，图片的链接，还有下一页的地址。这个脚本以json格式存储传输的数据，json格式是一种轻量级的数据交换格式，起到封装数据的作用，易于人阅读和编写，同时也易于机器解析和生成。这么多链接，可以看到图片的链接有很多，根据哪个链接下载图片呢？先别急，让我们继续分析：</a></p><p><img src="https://img-blog.csdn.net/20170930125434279?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYzQwNjQ5NTc2Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p>在这个网站，我们可以按这个按钮进行图片下载。我们抓包分下下这个动作，看看发送了哪些请求。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;unsplash.com&#x2F;photos&#x2F;1PrQ2mHW-Fo&#x2F;download?force&#x3D;true</span><br><span class="line">https:&#x2F;&#x2F;unsplash.com&#x2F;photos&#x2F;JX7nDtafBcU&#x2F;download?force&#x3D;true</span><br><span class="line">https:&#x2F;&#x2F;unsplash.com&#x2F;photos&#x2F;HCVbP3zqX4k&#x2F;download?force&#x3D;true</span><br><span class="line">123</span><br></pre></td></tr></table></figure><p>通过Fiddler抓包，我们发现，点击不同图片的下载按钮，GET请求的地址都是不同的。但是它们很有规律，就是中间有一段代码是不一样的，其他地方都一样。中间那段代码是不是很熟悉？没错，它就是我们之前抓包分析得到json数据中的照片的id。我们只要解析出每个照片的id，就可以获得图片下载的请求地址，然后根据这个请求地址，我们就可以下载图片了。那么，现在的首要任务就是解析json数据了。</p><p>json格式的数据也是分层的。可以看到next_page里存放的是下一页的请求地址，很显然Unsplash下一页的内容，也是动态加载的。在photos下面的id里，存放着图片的id，这个就是我们需要获得的图片id号。</p><p>怎么编程提取这些json数据呢？我们也是分步完成：</p><ul><li>获取整个json数据</li><li>解析json数据</li></ul><p>编写代码，尝试获取json数据：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding:UTF-8 -*-</span><br><span class="line">import requests</span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">     target &#x3D; &#39;http:&#x2F;&#x2F;unsplash.com&#x2F;napi&#x2F;feeds&#x2F;home&#39;</span><br><span class="line">     req &#x3D; requests.get(url&#x3D;target) print(req.text)</span><br><span class="line">12345</span><br></pre></td></tr></table></figure><p>很遗憾，程序报错了，问题出在哪里？通过错误信息，我们可以看到SSL认证错误，SSL认证是指客户端到服务器端的认证。一个非常简单的解决这个认证错误的方法就是设置requests.get()方法的verify参数。这个参数默认设置为True，也就是执行认证。我们将其设置为False，绕过认证不就可以了？</p><p><img src="https://img-blog.csdn.net/20170930125540248?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYzQwNjQ5NTc2Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p>有想法就要尝试，编写代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding:UTF-8 -*-</span><br><span class="line">import requests</span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">     target &#x3D; &#39;http:&#x2F;&#x2F;unsplash.com&#x2F;napi&#x2F;feeds&#x2F;home&#39;</span><br><span class="line">     req &#x3D; requests.get(url&#x3D;target, verify&#x3D;False)</span><br><span class="line">     print(req.text)</span><br><span class="line">123456</span><br></pre></td></tr></table></figure><p>认证问题解决了，又有新问题了：</p><p><img src="https://img-blog.csdn.net/20170930125626169?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYzQwNjQ5NTc2Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p>可以看到，我们GET请求又失败了，这是为什么？这个网站反爬虫的手段除了动态加载，还有一个反爬虫手段，那就是验证Request Headers。接下来，让我们分析下这个Requests Headers：</p><p><img src="https://img-blog.csdn.net/20170930125652596?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYzQwNjQ5NTc2Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p>我截取了Fiddler的抓包信息，可以看到Requests Headers里又很多参数，有Accept、Accept-Encoding、Accept-Language、DPR、User-Agent、Viewport-Width、accept-version、Referer、x-unsplash-client、authorization、Connection、Host。它们都是什么意思呢？</p><p>专业的解释能说的太多，我挑重点：</p><ul><li>User-Agent：这里面存放浏览器的信息。可以看到上图的参数值，它表示我是通过Windows的Chrome浏览器，访问的这个服务器。如果我们不设置这个参数，用Python程序直接发送GET请求，服务器接受到的User-Agent信息就会是一个包含python字样的User-Agent。如果后台设计者验证这个User-Agent参数是否合法，不让带Python字样的User-Agent访问，这样就起到了反爬虫的作用。这是一个最简单的，最常用的反爬虫手段。</li><li>Referer：这个参数也可以用于反爬虫，它表示这个请求是从哪发出的。可以看到我们通过浏览器访问网站，这个请求是从<a href="https://unsplash.com/，这个地址发出的。如果后台设计者，验证这个参数，对于不是从这个地址跳转过来的请求一律禁止访问，这样就也起到了反爬虫的作用。" target="_blank" rel="noopener">https://unsplash.com/，这个地址发出的。如果后台设计者，验证这个参数，对于不是从这个地址跳转过来的请求一律禁止访问，这样就也起到了反爬虫的作用。</a></li><li>authorization：这个参数是基于AAA模型中的身份验证信息允许访问一种资源的行为。在我们用浏览器访问的时候，服务器会为访问者分配这个用户ID。如果后台设计者，验证这个参数，对于没有用户ID的请求一律禁止访问，这样就又起到了反爬虫的作用。</li></ul><p>Unsplash是根据哪个参数反爬虫的呢？根据我的测试，是authorization。我们只要通过程序手动添加这个参数，然后再发送GET请求，就可以顺利访问了。怎么什么设置呢？还是requests.get()方法，我们只需要添加headers参数即可。编写代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding:UTF-8 -*-</span><br><span class="line">import requests</span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">     target &#x3D; &#39;http:&#x2F;&#x2F;unsplash.com&#x2F;napi&#x2F;feeds&#x2F;home&#39;</span><br><span class="line">     headers &#x3D; &#123;&#39;authorization&#39;:&#39;your Client-ID&#39;&#125;</span><br><span class="line">     req &#x3D; requests.get(url&#x3D;target, headers&#x3D;headers, verify&#x3D;False)</span><br><span class="line">     print(req.text)</span><br><span class="line">1234567</span><br></pre></td></tr></table></figure><p>headers参数值是通过字典传入的。记得将上述代码中your Client-ID换成诸位自己抓包获得的信息。代码运行结果如下：</p><p><img src="https://img-blog.csdn.net/20170930125810442?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYzQwNjQ5NTc2Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p>皇天不负有心人，可以看到我们已经顺利获得json数据了，里面有next_page和照片的id。接下来就是解析json数据。根据我们之前分析可知，next_page放在了json数据的最外侧，照片的id放在了photos-&gt;id里。我们使用json.load()方法解析数据，编写代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding:UTF-8 -*-</span><br><span class="line">import requests, json</span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">     target &#x3D; &#39;http:&#x2F;&#x2F;unsplash.com&#x2F;napi&#x2F;feeds&#x2F;home&#39;</span><br><span class="line">     headers &#x3D; &#123;&#39;authorization&#39;:&#39;your Client-ID&#39;&#125;</span><br><span class="line">     req &#x3D; requests.get(url&#x3D;target, headers&#x3D;headers, verify&#x3D;False)</span><br><span class="line">     html &#x3D; json.loads(req.text)</span><br><span class="line">     next_page &#x3D; html[&#39;next_page&#39;]</span><br><span class="line">     print(&#39;下一页地址:&#39;,next_page)</span><br><span class="line">     for each in html[&#39;photos&#39;]:</span><br><span class="line">          print(&#39;图片ID:&#39;,each[&#39;id&#39;])</span><br><span class="line">1234567891011</span><br></pre></td></tr></table></figure><p>解析json数据很简单，跟字典操作一样，就是字典套字典。json.load()里面的参数是原始的json格式的数据。程序运行结果如下：</p><p><img src="https://img-blog.csdn.net/20170930125850471?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYzQwNjQ5NTc2Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p>图片的ID已经获得了，再通过字符串处理一下，就生成了我们需要的图片下载请求地址。根据这个地址，我们就可以下载图片了。下载方式，使用直接写入文件的方法。</p><p>###（3）整合代码</p><p>每次获取链接加一个1s延时，因为人在浏览页面的时候，翻页的动作不可能太快。我们要让我们的爬虫尽量友好一些。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding:UTF-8 -*-</span><br><span class="line">import requests, json, time, sys</span><br><span class="line">from contextlib import closing</span><br><span class="line"></span><br><span class="line">class get_photos(object):</span><br><span class="line"></span><br><span class="line">    def __init__(self):</span><br><span class="line">        self.photos_id &#x3D; []</span><br><span class="line">        self.download_server &#x3D; &#39;https:&#x2F;&#x2F;unsplash.com&#x2F;photos&#x2F;xxx&#x2F;download?force&#x3D;trues&#39;</span><br><span class="line">        self.target &#x3D; &#39;http:&#x2F;&#x2F;unsplash.com&#x2F;napi&#x2F;feeds&#x2F;home&#39;</span><br><span class="line">        self.headers &#x3D; &#123;&#39;authorization&#39;:&#39;Client-ID c94869b36aa272dd62dfaeefed769d4115fb3189a9d1ec88ed457207747be626&#39;&#125;</span><br><span class="line"></span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    函数说明:获取图片ID</span><br><span class="line">    Parameters:</span><br><span class="line">        无</span><br><span class="line">    Returns:</span><br><span class="line">        无</span><br><span class="line">    Modify:</span><br><span class="line">        2017-09-13</span><br><span class="line">    &quot;&quot;&quot;   </span><br><span class="line">    def get_ids(self):</span><br><span class="line">        req &#x3D; requests.get(url&#x3D;self.target, headers&#x3D;self.headers, verify&#x3D;False)</span><br><span class="line">        html &#x3D; json.loads(req.text)</span><br><span class="line">        next_page &#x3D; html[&#39;next_page&#39;]</span><br><span class="line">        for each in html[&#39;photos&#39;]:</span><br><span class="line">            self.photos_id.append(each[&#39;id&#39;])</span><br><span class="line">        time.sleep(1)</span><br><span class="line">        for i in range(5):</span><br><span class="line">            req &#x3D; requests.get(url&#x3D;next_page, headers&#x3D;self.headers, verify&#x3D;False)</span><br><span class="line">            html &#x3D; json.loads(req.text)</span><br><span class="line">            next_page &#x3D; html[&#39;next_page&#39;]</span><br><span class="line">            for each in html[&#39;photos&#39;]:</span><br><span class="line">                self.photos_id.append(each[&#39;id&#39;])</span><br><span class="line">            time.sleep(1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    函数说明:图片下载</span><br><span class="line">    Parameters:</span><br><span class="line">        无</span><br><span class="line">    Returns:</span><br><span class="line">        无</span><br><span class="line">    Modify:</span><br><span class="line">        2017-09-13</span><br><span class="line">    &quot;&quot;&quot;   </span><br><span class="line">    def download(self, photo_id, filename):</span><br><span class="line">        headers &#x3D; &#123;&#39;User-Agent&#39;:&#39;Mozilla&#x2F;5.0 (Windows NT 6.1; WOW64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;61.0.3163.79 Safari&#x2F;537.36&#39;&#125;</span><br><span class="line">        target &#x3D; self.download_server.replace(&#39;xxx&#39;, photo_id)</span><br><span class="line">        with closing(requests.get(url&#x3D;target, stream&#x3D;True, verify &#x3D; False, headers &#x3D; self.headers)) as r:</span><br><span class="line">            with open(&#39;%d.jpg&#39; % filename, &#39;ab+&#39;) as f:</span><br><span class="line">                for chunk in r.iter_content(chunk_size &#x3D; 1024):</span><br><span class="line">                    if chunk:</span><br><span class="line">                        f.write(chunk)</span><br><span class="line">                        f.flush()</span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    gp &#x3D; get_photos()</span><br><span class="line">    print(&#39;获取图片连接中:&#39;)</span><br><span class="line">    gp.get_ids()</span><br><span class="line">    print(&#39;图片下载中:&#39;)</span><br><span class="line">    for i in range(len(gp.photos_id)):</span><br><span class="line">        print(&#39;  正在下载第%d张图片&#39; % (i+1))</span><br><span class="line">        gp.download(gp.photos_id[i], (i+1))</span><br><span class="line">12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364</span><br></pre></td></tr></table></figure><p>下载速度还行，有的图片下载慢是因为图片太大。可以看到右侧也打印了一些警报信息，这是因为我们没有进行SSL验证。</p><p><img src="https://img-blog.csdn.net/20170930130019403?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYzQwNjQ5NTc2Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p>学会了爬取图片，简单的动态加载的网站也难不倒你了。赶快试试国内的一些图片网站吧！</p><h2 id="3-视频下载"><a href="#3-视频下载" class="headerlink" title="3 视频下载"></a>3 视频下载</h2><p>视频下载教程，请到这里查看：</p><p><a href="https://cuijiahua.com/blog/2017/10/spider_tutorial_1.html" target="_blank" rel="noopener">https://cuijiahua.com/blog/2017/10/spider_tutorial_1.html</a></p><h1 id="四-总结"><a href="#四-总结" class="headerlink" title="四 总结"></a>四 总结</h1><ul><li>本次Chat讲解的实战内容，均仅用于学习交流，请勿用于任何商业用途！</li><li>爬虫时效性低，同样的思路过了一个月，甚至一周可能无法使用，但是爬取思路都是如此，完全可以自行分析。</li><li>本次实战代码，均已上传我的Github，欢迎Follow、Star：<a href="https://github.com/Jack-Cherish/python-spider" target="_blank" rel="noopener">https://github.com/Jack-Cherish/python-spider</a></li><li>如有问题，请留言。如有错误，还望指正，谢谢！</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python 爬虫（一）</title>
    <link href="http://yoursite.com/2020/06/13/Python-%E7%88%AC%E8%99%AB%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://yoursite.com/2020/06/13/Python-%E7%88%AC%E8%99%AB%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2020-06-13T11:58:05.000Z</published>
    <updated>2020-06-13T11:59:18.308Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p> 这是一篇详细介绍 <a href="http://c.biancheng.net/python/" target="_blank" rel="noopener">Python</a> 爬虫入门的教程，从实战出发，适合初学者。读者只需在阅读过程紧跟文章思路，理清相应的实现代码，30 分钟即可学会编写简单的 Python 爬虫。</p><p>这篇 Python 爬虫教程主要讲解以下 5 部分内容：</p><ol><li>了解网页；</li><li>使用 requests 库抓取网站数据；</li><li>使用 Beautiful Soup 解析网页；</li><li>清洗和组织数据；</li><li>爬虫攻防战；</li></ol><h2 id="了解网页"><a href="#了解网页" class="headerlink" title="了解网页"></a>了解网页</h2><p>以中国旅游网首页（<a href="http://www.cntour.cn/）为例，抓取中国旅游网首页首条信息（标题和链接），数据以明文的形式出面在源码中。在中国旅游网首页，按快捷键【Ctrl+U】打开源码页面，如图" target="_blank" rel="noopener">http://www.cntour.cn/）为例，抓取中国旅游网首页首条信息（标题和链接），数据以明文的形式出面在源码中。在中国旅游网首页，按快捷键【Ctrl+U】打开源码页面，如图</a> 1 所示。</p><p><img src="http://c.biancheng.net/uploads/allimg/190117/2-1Z11G63943S6.jpg" alt="img"><br>图 1 中国旅游网首页源码</p><h3 id="认识网页结构"><a href="#认识网页结构" class="headerlink" title="认识网页结构"></a>认识网页结构</h3><p>网页一般由三部分组成，分别是 HTML（超文本标记语言）、CSS（层叠样式表）和 JScript（活动脚本语言）。</p><h4 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h4><p>HTML 是整个网页的结构，相当于整个网站的框架。带“＜”、“＞”符号的都是属于 HTML 的标签，并且标签都是成对出现的。</p><p>常见的标签如下：</p><html>..</html> 表示标记中间的元素是网页<body>..</body> 表示用户可见的内容<div>..</div> 表示框架<p>..</p> 表示段落<li>..</li>表示列表<img>..</img>表示图片<h1>..</h1>表示标题<a href="">..</a>表示超链接<h4 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h4><p>CSS 表示样式，图 1 中第 13 行＜style type=＂text/css＂＞表示下面引用一个 CSS，在 CSS 中定义了外观。</p><h4 id="JScript"><a href="#JScript" class="headerlink" title="JScript"></a>JScript</h4><p>JScript 表示功能。交互的内容和各种特效都在 JScript 中，JScript 描述了网站中的各种功能。</p><p>如果用人体来比喻，HTML 是人的骨架，并且定义了人的嘴巴、眼睛、耳朵等要长在哪里。CSS 是人的外观细节，如嘴巴长什么样子，眼睛是双眼皮还是单眼皮，是大眼睛还是小眼睛，皮肤是黑色的还是白色的等。JScript 表示人的技能，例如跳舞、唱歌或者演奏乐器等。</p><h3 id="写一个简单的-HTML"><a href="#写一个简单的-HTML" class="headerlink" title="写一个简单的 HTML"></a>写一个简单的 HTML</h3><p>通过编写和修改 HTML，可以更好地理解 HTML。首先打开一个记事本，然后输入下面的内容：</p><html><head>    <title> Python 3 爬虫与数据清洗入门与实战</title>  <meta name="generator" content="hexo-theme-yilia-plus"><link rel="alternate" href="/atom.xml" title="广外编程社官网" type="application/atom+xml"></head><body>    <div>        <p>Python 3爬虫与数据清洗入门与实战</p>    </div>    <div>        <ul>            <li><a href="http://c.biancheng.net" target="_blank" rel="noopener">爬虫</a></li>            <li>数据清洗</li>        </ul>    </div><script src="/live2dw/lib/L2Dwidget.min.js?094cbace49a39548bed64abff5988b05"></script><script>L2Dwidget.init({"log":false,"pluginJsPath":"lib/","pluginModelPath":"assets/","pluginRootPath":"live2dw/","tagMode":false});</script></body><p>输入代码后，保存记事本，然后修改文件名和后缀名为”HTML.html”；</p><p>运行该文件后的效果，如图 2 所示。</p><p><img src="http://c.biancheng.net/uploads/allimg/190117/2-1Z11G64134V2.gif" alt="img"><br>图 2</p><p>这段代码只是用到了 HTML，读者可以自行修改代码中的中文，然后观察其变化。</p><h3 id="关于爬虫的合法性"><a href="#关于爬虫的合法性" class="headerlink" title="关于爬虫的合法性"></a>关于爬虫的合法性</h3><p>几乎每一个网站都有一个名为 robots.txt 的文档，当然也有部分网站没有设定 robots.txt。对于没有设定 robots.txt 的网站可以通过网络爬虫获取没有口令加密的数据，也就是该网站所有页面数据都可以爬取。如果网站有 robots.txt 文档，就要判断是否有禁止访客获取的数据。</p><p>以淘宝网为例，在浏览器中访问 <a href="https://www.taobao.com/robots.txt，如图" target="_blank" rel="noopener">https://www.taobao.com/robots.txt，如图</a> 3 所示。</p><p><img src="http://c.biancheng.net/uploads/allimg/190117/2-1Z11G6422Ub.gif" alt="img"><br>图 3 淘宝网的robots.txt文件内容</p><p>淘宝网允许部分爬虫访问它的部分路径，而对于没有得到允许的用户，则全部禁止爬取，代码如下：</p><p>User-Agent:*<br>Disallow:/</p><p>这一句代码的意思是除前面指定的爬虫外，不允许其他爬虫爬取任何数据。</p><h2 id="使用-requests-库请求网站"><a href="#使用-requests-库请求网站" class="headerlink" title="使用 requests 库请求网站"></a>使用 requests 库请求网站</h2><h3 id="安装-requests-库"><a href="#安装-requests-库" class="headerlink" title="安装 requests 库"></a>安装 requests 库</h3><p>首先在 PyCharm 中安装 requests 库，为此打开 PyCharm，单击“File”（文件）菜单，选择“Setting for New Projects…”命令，如图 4 所示。</p><p><img src="http://c.biancheng.net/uploads/allimg/190117/2-1Z11G64314Q6.jpg" alt="img"><br>图 4</p><p>选择“Project Interpreter”（项目编译器）命令，确认当前选择的编译器，然后单击右上角的加号，如图 5 所示。</p><p><img src="http://c.biancheng.net/uploads/allimg/190117/2-1Z11G64341W4.jpg" alt="img"><br>图 5</p><p>在搜索框输入：requests（注意，一定要输入完整，不然容易出错），然后单击左下角的“Install Package”（安装库）按钮。如图 6 所示：</p><p><img src="http://c.biancheng.net/uploads/allimg/190117/2-1Z11G64400193.jpg" alt="img"><br>图 6</p><p>安装完成后，会在 Install Package 上显示“Package‘requests’ installed successfully”（库的请求已成功安装），如图 7 所示；如果安装不成功将会显示提示信息。</p><p><img src="http://c.biancheng.net/uploads/allimg/190117/2-1Z11G644192R.jpg" alt="img"><br>图 7 安装成功</p><h3 id="爬虫的基本原理"><a href="#爬虫的基本原理" class="headerlink" title="爬虫的基本原理"></a>爬虫的基本原理</h3><p>网页请求的过程分为两个环节：</p><ol><li>Request （请求）：每一个展示在用户面前的网页都必须经过这一步，也就是向服务器发送访问请求。</li><li>Response（响应）：服务器在接收到用户的请求后，会验证请求的有效性，然后向用户（客户端）发送响应的内容，客户端接收服务器响应的内容，将内容展示出来，就是我们所熟悉的网页请求，如图 8 所示。</li></ol><p><img src="http://c.biancheng.net/uploads/allimg/190117/2-1Z11G6451I08.gif" alt="img"><br>图 8 Response相应</p><p>网页请求的方式也分为两种：</p><ol><li>GET：最常见的方式，一般用于获取或者查询资源信息，也是大多数网站使用的方式，响应速度快。</li><li>POST：相比 GET 方式，多了以表单形式上传参数的功能，因此除查询信息外，还可以修改信息。</li></ol><p>所以，在写爬虫前要先确定向谁发送请求，用什么方式发送。</p><h3 id="使用-GET-方式抓取数据"><a href="#使用-GET-方式抓取数据" class="headerlink" title="使用 GET 方式抓取数据"></a>使用 GET 方式抓取数据</h3><p>复制任意一条首页首条新闻的标题，在源码页面按【Ctrl+F】组合键调出搜索框，将标题粘贴在搜索框中，然后按【Enter】键。</p><p>如图 8 所示，标题可以在源码中搜索到，请求对象是<a href="http://www.cntour.cn，请求方式是GET（所有在源码中的数据请求方式都是GET），如图" target="_blank" rel="noopener">www.cntour.cn，请求方式是GET（所有在源码中的数据请求方式都是GET），如图</a> 9 所示。</p><p><img src="http://c.biancheng.net/uploads/allimg/190117/2-1Z11G64620C9.jpg" alt="img"><br>图 9（<a href="http://c.biancheng.net/uploads/allimg/190117/2-1Z11G6464b94.jpg" target="_blank" rel="noopener">点此查看高清大图</a>）</p><p>确定好请求对象和方式后，在 PyCharm 中输入以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import requests        #导入requests包url &#x3D; &#39;http:&#x2F;&#x2F;www.cntour.cn&#x2F;&#39;strhtml &#x3D; requests.get(url)        #Get方式获取网页数据print(strhtml.text)</span><br></pre></td></tr></table></figure><p>运行结果如图 10 所示：</p><p><img src="http://c.biancheng.net/uploads/allimg/190117/2-1Z11G64I4104.jpg" alt="img"><br>图 10 运行结果效果图（<a href="http://c.biancheng.net/uploads/allimg/190117/2-1Z11G64K5445.jpg" target="_blank" rel="noopener">点此查看高清大图</a>）</p><p>加载库使用的语句是 import+库的名字。在上述过程中，加载 requests 库的语句是：import requests。</p><p>用 GET 方式获取数据需要调用 requests 库中的 get 方法，使用方法是在 requests 后输入英文点号，如下所示：</p><p>requests.get</p><p>将获取到的数据存到 strhtml 变量中，代码如下：</p><p>strhtml = request.get(url)</p><p>这个时候 strhtml 是一个 URL 对象，它代表整个网页，但此时只需要网页中的源码，下面的语句表示网页源码：</p><p>strhtml.text</p><h3 id="使用-POST-方式抓取数据"><a href="#使用-POST-方式抓取数据" class="headerlink" title="使用 POST 方式抓取数据"></a>使用 POST 方式抓取数据</h3><p>首先输入有道翻译的网址：<a href="http://fanyi.youdao.com/，进入有道翻译页面。" target="_blank" rel="noopener">http://fanyi.youdao.com/，进入有道翻译页面。</a></p><p>按快捷键 F12，进入开发者模式，单击 Network，此时内容为空，如图 11 所示：</p><p><img src="http://c.biancheng.net/uploads/allimg/190117/2-1Z11G64ZU55.gif" alt="img"><br>图 11</p><p>在有道翻译中输入“我爱中国”，单击“翻译”按钮，如图 12 所示：</p><p><img src="http://c.biancheng.net/uploads/allimg/190117/2-1Z11G6492K96.gif" alt="img"><br>图 12</p><p>在开发者模式中，依次单击“Network”按钮和“XHR”按钮，找到翻译数据，如图 13 所示：</p><p><img src="http://c.biancheng.net/uploads/allimg/190117/2-1Z11G6494Y00.gif" alt="img"><br>图 13</p><p>单击 Headers，发现请求数据的方式为 POST。如图 14 所示：</p><p><img src="http://c.biancheng.net/uploads/allimg/190117/2-1Z11GA00I57.gif" alt="img"><br>图 14</p><p>找到数据所在之处并且明确请求方式之后，接下来开始撰写爬虫。</p><p>首先，将 Headers 中的 URL 复制出来，并赋值给 url，代码如下：</p><p>url = ‘<a href="http://fanyi.youdao.com/translate_o?smartresult=dict&amp;smartresult=rule&#39;" target="_blank" rel="noopener">http://fanyi.youdao.com/translate_o?smartresult=dict&amp;smartresult=rule&#39;</a></p><p>POST 的请求获取数据的方式不同于 GET，POST 请求数据必须构建请求头才可以。</p><p>Form Data 中的请求参数如图 15 所示：</p><p><img src="http://c.biancheng.net/uploads/allimg/190117/2-1Z11GA041451.gif" alt="img"><br>图 15</p><p>将其复制并构建一个新字典：</p><p>From_data={‘i’:’我愛中國’,’from’:’zh-CHS’,’to’:’en’,’smartresult’:’dict’,’client’:’fanyideskweb’,’salt’:’15477056211258’,’sign’:’b3589f32c38bc9e3876a570b8a992604’,’ts’:’1547705621125’,’bv’:’b33a2f3f9d09bde064c9275bcb33d94e’,’doctype’:’json’,’version’:’2.1’,’keyfrom’:’fanyi.web’,’action’:’FY_BY_REALTIME’,’typoResult’:’false’}</p><p>接下来使用 requests.post 方法请求表单数据，代码如下：</p><p>import requests    #导入requests包<br>response = requests.post(url,data=payload)</p><p>将字符串格式的数据转换成 JSON 格式数据，并根据<a href="http://c.biancheng.net/data_structure/" target="_blank" rel="noopener">数据结构</a>，提取数据，并将翻译结果打印出来，代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import jsoncontent &#x3D; json.loads(response.text)print(content[&#39;translateResult&#39;][0][0][&#39;tgt&#39;])</span><br></pre></td></tr></table></figure><p>使用 requests.post 方法抓取有道翻译结果的完整代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import requests        #导入requests包import jsondef get_translate_date(word&#x3D;None):    url &#x3D; &#39;http:&#x2F;&#x2F;fanyi.youdao.com&#x2F;translate_o?smartresult&#x3D;dict&amp;smartresult&#x3D;rule&#39;    From_data&#x3D;&#123;&#39;i&#39;:word,&#39;from&#39;:&#39;zh-CHS&#39;,&#39;to&#39;:&#39;en&#39;,&#39;smartresult&#39;:&#39;dict&#39;,&#39;client&#39;:&#39;fanyideskweb&#39;,&#39;salt&#39;:&#39;15477056211258&#39;,&#39;sign&#39;:&#39;b3589f32c38bc9e3876a570b8a992604&#39;,&#39;ts&#39;:&#39;1547705621125&#39;,&#39;bv&#39;:&#39;b33a2f3f9d09bde064c9275bcb33d94e&#39;,&#39;doctype&#39;:&#39;json&#39;,&#39;version&#39;:&#39;2.1&#39;,&#39;keyfrom&#39;:&#39;fanyi.web&#39;,&#39;action&#39;:&#39;FY_BY_REALTIME&#39;,&#39;typoResult&#39;:&#39;false&#39;&#125;    #请求表单数据    response &#x3D; requests.post(url,data&#x3D;From_data)    #将Json格式字符串转字典    content &#x3D; json.loads(response.text)    print(content)    #打印翻译后的数据    #print(content[&#39;translateResult&#39;][0][0][&#39;tgt&#39;])if __name__&#x3D;&#x3D;&#39;__main__&#39;:    get_translate_date(&#39;我爱中国&#39;)</span><br></pre></td></tr></table></figure><h2 id="使用-Beautiful-Soup-解析网页"><a href="#使用-Beautiful-Soup-解析网页" class="headerlink" title="使用 Beautiful Soup 解析网页"></a>使用 Beautiful Soup 解析网页</h2><p>通过 requests 库已经可以抓到网页源码，接下来要从源码中找到并提取数据。Beautiful Soup 是 python 的一个库，其最主要的功能是从网页中抓取数据。Beautiful Soup 目前已经被移植到 bs4 库中，也就是说在导入 Beautiful Soup 时需要先安装 bs4 库。</p><p>安装 bs4 库的方式如图 16 所示:</p><p><img src="http://c.biancheng.net/uploads/allimg/190117/2-1Z11GA15bD.gif" alt="img"><br>图 16</p><p>安装好 bs4 库以后，还需安装 lxml 库。如果我们不安装 lxml 库，就会使用 Python 默认的解析器。尽管 Beautiful Soup 既支持 Python 标准库中的 HTML 解析器又支持一些第三方解析器，但是 lxml 库具有功能更加强大、速度更快的特点，因此笔者推荐安装 lxml 库。</p><p>安装 Python 第三方库后，输入下面的代码，即可开启 Beautiful Soup 之旅：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import requests        #导入requests包from bs4 import    BeautifulSoupurl&#x3D;&#39;http:&#x2F;&#x2F;www.cntour.cn&#x2F;&#39;strhtml&#x3D;requests.get(url)soup&#x3D;BeautifulSoup(strhtml.text,&#39;lxml&#39;)data &#x3D; soup.select(&#39;#main&gt;div&gt;div.mtop.firstMod.clearfix&gt;div.centerBox&gt;ul.newsList&gt;li&gt;a&#39;)print(data)</span><br></pre></td></tr></table></figure><p>代码运行结果如图 17 所示。</p><p><img src="http://c.biancheng.net/uploads/allimg/190117/2-1Z11GA244Q8.jpg" alt="img"><br>图 17（<a href="http://c.biancheng.net/uploads/allimg/190117/2-1Z11GA30cY.jpg" target="_blank" rel="noopener">点此查看高清大图</a>）</p><p>Beautiful Soup 库能够轻松解析网页信息，它被集成在 bs4 库中，需要时可以从 bs4 库中调用。其表达语句如下：</p><p>from bs4 import BeautifulSoup</p><p>首先，HTML 文档将被转换成 Unicode 编码格式，然后 Beautiful Soup 选择最合适的解析器来解析这段文档，此处指定 lxml 解析器进行解析。解析后便将复杂的 HTML 文档转换成树形结构，并且每个节点都是 Python 对象。这里将解析后的文档存储到新建的变量 soup 中，代码如下：</p><p>soup=BeautifulSoup(strhtml.text,’lxml’)</p><p>接下来用 select（选择器）定位数据，定位数据时需要使用浏览器的开发者模式，将鼠标光标停留在对应的数据位置并右击，然后在快捷菜单中选择“检查”命令，如图 18 所示：</p><p><img src="http://c.biancheng.net/uploads/allimg/190117/2-1Z11GA40T17.gif" alt="img"><br>图 18</p><p>随后在浏览器右侧会弹出开发者界面，右侧高亮的代码（参见图 19(b)）对应着左侧高亮的数据文本（参见图 19(a)）。右击右侧高亮数据，在弹出的快捷菜单中选择“Copy”➔“Copy Selector”命令，便可以自动复制路径。</p><p><img src="http://c.biancheng.net/uploads/allimg/190117/2-1Z11GA45JN.gif" alt="img"><br>图 19 复制路径</p><p>将路径粘贴在文档中，代码如下:</p><p>#main &gt; div &gt; div.mtop.firstMod.clearfix &gt; div.centerBox &gt; ul.newsList &gt; li:nth-child(1) &gt; a</p><p>由于这条路径是选中的第一条的路径，而我们需要获取所有的头条新闻，因此将 li：nth-child（1）中冒号（包含冒号）后面的部分删掉，代码如下：</p><p>#main &gt; div &gt; div.mtop.firstMod.clearfix &gt; div.centerBox &gt; ul.newsList &gt; li &gt; a</p><p>使用 soup.select 引用这个路径，代码如下：</p><p>data = soup.select(‘#main &gt; div &gt; div.mtop.firstMod.clearfix &gt; div.centerBox &gt; ul.newsList &gt; li &gt; a’)</p><h2 id="清洗和组织数据"><a href="#清洗和组织数据" class="headerlink" title="清洗和组织数据"></a>清洗和组织数据</h2><p>至此，获得了一段目标的 HTML 代码，但还没有把数据提取出来，接下来在 PyCharm 中输入以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for item in data:    result&#x3D;&#123;        &#39;title&#39;:item.get_text(),        &#39;link&#39;:item.get(&#39;href&#39;)    &#125;print(result)</span><br></pre></td></tr></table></figure><p>代码运行结果如图 20 所示：</p><p><img src="http://c.biancheng.net/uploads/allimg/190117/2-1Z11GA60R06.gif" alt="img"><br>图 20（<a href="http://c.biancheng.net/uploads/allimg/190117/2-1Z11GA629403.jpg" target="_blank" rel="noopener">点此查看高清大图</a>）</p><p>首先明确要提取的数据是标题和链接，标题在＜a＞标签中，提取标签的正文用 get_text() 方法。链接在＜a＞标签的 href 属性中，提取标签中的 href 属性用 get() 方法，在括号中指定要提取的属性数据，即 get(＇href＇)。</p><p>从图 20 中可以发现，文章的链接中有一个数字 ID。下面用正则表达式提取这个 ID。需要使用的正则符号如下:</p><p>\d匹配数字<br>+匹配前一个字符1次或多次</p><p>在 Python 中调用正则表达式时使用 re 库，这个库不用安装，可以直接调用。在 PyCharm 中输入以下代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import refor item in data:    result&#x3D;&#123;        &quot;title&quot;:item.get_text(),        &quot;link&quot;:item.get(&#39;href&#39;),        &#39;ID&#39;:re.findall(&#39;\d+&#39;,item.get(&#39;href&#39;))    &#125;print(result)</span><br></pre></td></tr></table></figure><p>运行结果如图 21 所示：</p><p><img src="http://c.biancheng.net/uploads/allimg/190117/2-1Z11GAHKD.jpg" alt="img"><br>图 21</p><p>这里使用 re 库的 findall 方法，第一个参数表示正则表达式，第二个参数表示要提取的文本。</p><h2 id="爬虫攻防战"><a href="#爬虫攻防战" class="headerlink" title="爬虫攻防战"></a>爬虫攻防战</h2><p>爬虫是模拟人的浏览访问行为，进行数据的批量抓取。当抓取的数据量逐渐增大时，会给被访问的服务器造成很大的压力，甚至有可能崩溃。换句话就是说，服务器是不喜欢有人抓取自己的数据的。那么，网站方面就会针对这些爬虫者，采取一些反爬策略。</p><p>服务器第一种识别爬虫的方式就是通过检查连接的 useragent 来识别到底是浏览器访问，还是代码访问的。如果是代码访问的话，访问量增大时，服务器会直接封掉来访 IP。</p><p>那么应对这种初级的反爬机制，我们应该采取何种举措？</p><p>还是以前面创建好的爬虫为例。在进行访问时，我们在开发者环境下不仅可以找到 URL、Form Data，还可以在 Request headers 中构造浏览器的请求头，封装自己。服务器识别浏览器访问的方法就是判断 keyword 是否为 Request headers 下的 User-Agent，如图 22 所示。</p><p><img src="http://c.biancheng.net/uploads/allimg/190117/2-1Z11GAR3P1.jpg" alt="img"><br>图 22</p><p>因此，我们只需要构造这个请求头的参数。创建请求头部信息即可，代码如下：</p><p>headers={‘User-Agent’:’Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.110 Safari/537.36’}<br>response = request.get(url,headers=headers)</p><p>写到这里，很多读者会认为修改 User-Agent 很太简单。确实很简单，但是正常人1秒看一个图，而个爬虫1秒可以抓取好多张图，比如 1 秒抓取上百张图，那么服务器的压力必然会增大。也就是说，如果在一个 IP 下批量访问下载图片，这个行为不符合正常人类的行为，肯定要被封 IP。</p><p>其原理也很简单，就是统计每个IP的访问频率，该频率超过阈值，就会返回一个验证码，如果真的是用户访问的话，用户就会填写，然后继续访问，如果是代码访问的话，就会被封 IP。</p><p>这个问题的解决方案有两个，第一个就是常用的增设延时，每 3 秒钟抓取一次，代码如下：</p><p>import time<br>time.sleep(3)</p><p>但是，我们写爬虫的目的是为了高效批量抓取数据，这里设置 3 秒钟抓取一次，效率未免太低。其实，还有一个更重要的解决办法，那就是从本质上解决问题。</p><p>不管如何访问，服务器的目的就是查出哪些为代码访问，然后封锁 IP。解决办法：为避免被封 IP，在数据采集时经常会使用代理。当然，requests 也有相应的 proxies 属性。</p><p>首先，构建自己的代理 IP 池，将其以字典的形式赋值给 proxies，然后传输给 requests，代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxies&#x3D;&#123;    &quot;http&quot;:&quot;http:&#x2F;&#x2F;10.10.1.10:3128&quot;,    &quot;https&quot;:&quot;http:&#x2F;&#x2F;10.10.1.10:1080&quot;,&#125;response &#x3D; requests.get(url, proxies&#x3D;proxies)</span><br></pre></td></tr></table></figure><h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><p>本文仅对 Python 爬虫及实现过程做了简明扼要地介绍，仅能使初学者对 python 爬虫有一个浅显的认识，并不能让你完全掌握 Python 爬虫。</p><p>如果你想对 Python 爬虫有更深入的了解，我推荐你阅读：</p><ul><li><a href="https://www.cnblogs.com/Albert-Lee/p/6226699.html" target="_blank" rel="noopener">Python爬虫入门教程 </a></li><li><a href="https://blog.csdn.net/c406495762/article/details/78123502" target="_blank" rel="noopener">Python3网络爬虫入门教程</a></li><li><a href="http://www.imooc.com/learn/563" target="_blank" rel="noopener">Python爬虫教程——慕课网</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python pip</title>
    <link href="http://yoursite.com/2020/06/13/Python-pip/"/>
    <id>http://yoursite.com/2020/06/13/Python-pip/</id>
    <published>2020-06-13T11:56:46.000Z</published>
    <updated>2020-06-13T11:57:22.897Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p> pip 是 Python 包管理工具，该工具提供了对Python 包的查找、下载、安装、卸载的功能。</p><p>目前如果你在 <a href="https://www.python.org/" target="_blank" rel="noopener">python.org</a> 下载最新版本的安装包，则是已经自带了该工具。</p><p>Python 2.7.9 + 或 Python 3.4+ 以上版本都自带 pip 工具。</p><p>pip 官网：<a href="https://pypi.org/project/pip/" target="_blank" rel="noopener">https://pypi.org/project/pip/</a></p><p>你可以通过以下命令来判断是否已安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip --version</span><br></pre></td></tr></table></figure><p>如果你还未安装，则可以使用以下方法来安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ curl https:&#x2F;&#x2F;bootstrap.pypa.io&#x2F;get-pip.py -o get-pip.py   # 下载安装脚本</span><br><span class="line">$ sudo python get-pip.py    # 运行安装脚本</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：</strong>用哪个版本的 Python 运行安装脚本，pip 就被关联到哪个版本，如果是 Python3 则执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo python3 get-pip.py    # 运行安装脚本。</span><br></pre></td></tr></table></figure><p>一般情况 pip 对应的是 Python 2.7，pip3 对应的是 Python 3.x。</p></blockquote><p>部分 Linux 发行版可直接用包管理器安装 pip，如 Debian 和 Ubuntu：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python-pip</span><br></pre></td></tr></table></figure><h3 id="pip-最常用命令"><a href="#pip-最常用命令" class="headerlink" title="pip 最常用命令"></a>pip 最常用命令</h3><p><strong>显示版本和路径</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip --version</span><br></pre></td></tr></table></figure><p><strong>获取帮助</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip --help</span><br></pre></td></tr></table></figure><p><strong>升级 pip</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -U pip</span><br></pre></td></tr></table></figure><blockquote><p>如果这个升级命令出现问题 ，可以使用以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo easy_install --upgrade pip</span><br></pre></td></tr></table></figure></blockquote><p><strong>安装包</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install SomePackage              # 最新版本</span><br><span class="line">pip install SomePackage&#x3D;&#x3D;1.0.4       # 指定版本</span><br><span class="line">pip install &#39;SomePackage&gt;&#x3D;1.0.4&#39;     # 最小版本</span><br></pre></td></tr></table></figure><p>比如我要安装 Django。用以下的一条命令就可以，方便快捷。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install Django&#x3D;&#x3D;1.7</span><br></pre></td></tr></table></figure><p><strong>升级包</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install --upgrade SomePackage</span><br></pre></td></tr></table></figure><p>升级指定的包，通过使用==, &gt;=, &lt;=, &gt;, &lt; 来指定一个版本号。</p><p><strong>卸载包</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip uninstall SomePackage</span><br></pre></td></tr></table></figure><p><strong>搜索包</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip search SomePackage</span><br></pre></td></tr></table></figure><p><strong>显示安装包信息</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip show</span><br></pre></td></tr></table></figure><p><strong>查看指定包的详细信息</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip show -f SomePackage</span><br></pre></td></tr></table></figure><p><strong>列出已安装的包</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip list</span><br></pre></td></tr></table></figure><p><strong>查看可升级的包</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip list -o</span><br></pre></td></tr></table></figure><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>如果 Python2 和 Python3 同时有 pip，则使用方法如下：</p><p>Python2：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 -m pip install XXX</span><br></pre></td></tr></table></figure><p>Python3:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m pip install XXX</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python PyInstaller</title>
    <link href="http://yoursite.com/2020/06/13/Python-PyInstaller/"/>
    <id>http://yoursite.com/2020/06/13/Python-PyInstaller/</id>
    <published>2020-06-13T11:55:39.000Z</published>
    <updated>2020-06-13T11:56:14.005Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p> 在创建了独立应用（自包含该应用的依赖包）之后，还可以使用 PyInstaller 将 <a href="http://c.biancheng.net/python/" target="_blank" rel="noopener">Python</a> 程序生成可直接运行的程序，这个程序就可以被分发到对应的 Windows 或 Mac OS X 平台上运行。</p><h2 id="安装-PyInstalle"><a href="#安装-PyInstalle" class="headerlink" title="安装 PyInstalle"></a>安装 PyInstalle</h2><p>Python 默认并不包含 PyInstaller 模块，因此需要自行安装 PyInstaller 模块。</p><p>安装 PyInstaller 模块与安装其他 Python 模块一样，使用 pip 命令安装即可。在命令行输入如下命令：</p><p>pip install pyinstaller</p><p>强烈建议使用 pip 在线安装的方式来安装 PyInstaller 模块，不要使用离线包的方式来安装，因为 PyInstaller 模块还依赖其他模块，pip 在安装 PyInstaller 模块时会先安装它的依赖模块。</p><p>运行上面命令，应该看到如下输出结果：</p><p>Successfully installed pyinstaller-x.x.x</p><p>其中的 x.x.x 代表 PyInstaller 的版本。</p><p>在 PyInstaller 模块安装成功之后，在 Python 的安装目录下的 <code>Scripts(D:\Python\Python36\Scripts)</code> 目录下会增加一个 pyinstaller.exe 程序，接下来就可以使用该工具将 Python 程序生成 EXE 程序了。</p><h2 id="PyInstaller生成可执行程序"><a href="#PyInstaller生成可执行程序" class="headerlink" title="PyInstaller生成可执行程序"></a>PyInstaller生成可执行程序</h2><p>PyInstaller 工具的命令语法如下：</p><p>pyinstaller 选项 Python 源文件</p><p>不管这个 Python 应用是单文件的应用，还是多文件的应用，只要在使用 pyinstaller 命令时编译作为程序入口的 Python 程序即可。</p><p>PyInstaller工具是跨平台的，它既可以在 Windows平台上使用，也可以在 Mac OS X 平台上运行。在不同的平台上使用 PyInstaller 工具的方法是一样的，它们支持的选项也是一样的。</p><p>下面先创建一个 app 目录，在该目录下创建一个 app.py 文件，文件中包含如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">from say_hello import *def main():    print(&#39;程序开始执行&#39;)    print(say_hello(&#39;孙悟空&#39;))# 增加调用main()函数if __name__ &#x3D;&#x3D; &#39;__main__&#39;:    main()</span><br></pre></td></tr></table></figure><p>接下来使用命令行工具进入到此 app 目录下，执行如下命令：</p><p>pyinstaller -F app.py</p><p>执行上面命令，将看到详细的生成过程。当生成完成后，将会在此 app 目录下看到多了一个 dist 目录，并在该目录下看到有一个 app.exe 文件，这就是使用 PyInstaller 工具生成的 EXE 程序。</p><p>在命令行窗口中进入 dist 目录下，在该目录执行 app.exe ，将会看到该程序生成如下输出结果：</p><p>程序开始执行<br>孙悟空，您好！</p><p>由于该程序没有图形用户界面，因此如果读者试图通过双击来运行该程序，则只能看到程序窗口一闪就消失了，这样将无法看到该程序的输出结果。</p><p>在上面命令中使用了-F 选项，该选项指定生成单独的 EXE 文件，因此，在 dist 目录下生成了一个单独的大约为 6MB 的 app.exe 文件（在 Mac OS X 平台上生成的文件就叫 app，没有后缀）；与 -F 选项对应的是 -D 选项（默认选项），该选项指定生成一个目录（包含多个文件）来作为程序。</p><p>下面先将 PyInstaller 工具在 app 目录下生成的 build、dist 目录删除，并将 app.spec 文件也删除，然后使用如下命令来生成 EXE 文件。</p><p>pyinstaller -D app.py</p><p>执行上面命令，将看到详细的生成过程。当生成完成后，将会在 app 目录下看到多了一个 dist 目录，并在该目录下看到有一个 app 子目录，在该子目录下包含了大量 .dll 文件和 .pyz 文件，它们都是 app.exe 程序的支撑文件。在命令行窗口中运行该 app.exe 程序，同样可以看到与前一个 app.exe 程序相同的输出结果。</p><p>PyInstaller 不仅支持 -F、-D 选项，而且也支持如表 1 所示的常用选项。</p><table><thead><tr><th>-h，–help</th><th>查看该模块的帮助信息</th></tr></thead><tbody><tr><td>-F，-onefile</td><td>产生单个的可执行文件</td></tr><tr><td>-D，–onedir</td><td>产生一个目录（包含多个文件）作为可执行程序</td></tr><tr><td>-a，–ascii</td><td>不包含 Unicode 字符集支持</td></tr><tr><td>-d，–debug</td><td>产生 debug 版本的可执行文件</td></tr><tr><td>-w，–windowed，–noconsolc</td><td>指定程序运行时不显示命令行窗口（仅对 Windows 有效）</td></tr><tr><td>-c，–nowindowed，–console</td><td>指定使用命令行窗口运行程序（仅对 Windows 有效）</td></tr><tr><td>-o DIR，–out=DIR</td><td>指定 spec 文件的生成目录。如果没有指定，则默认使用当前目录来生成 spec 文件</td></tr><tr><td>-p DIR，–path=DIR</td><td>设置 Python 导入模块的路径（和设置 PYTHONPATH 环境变量的作用相似）。也可使用路径分隔符（Windows 使用分号，Linux 使用冒号）来分隔多个路径</td></tr><tr><td>-n NAME，–name=NAME</td><td>指定项目（产生的 spec）名字。如果省略该选项，那么第一个脚本的主文件名将作为 spec 的名字</td></tr></tbody></table><p>在表 1 中列出的只是 PyInstaller 模块所支持的常用选项，如果需要了解 PyInstaller 选项的详细信息，则可通过 pyinstaller -h 来查看。</p><p>下面再创建一个带图形用户界面，可以访问 <a href="http://c.biancheng.net/mysql/" target="_blank" rel="noopener">MySQL</a> 数据库的应用程序。</p><p>在 app 当前所在目录再创建一个 dbapp 目录，并在该目录下创建 Python 程序，其中 exec_select.py 程序负责查询数据，main.py 程序负责创建图形用户界面来显示查询结果。</p><p>exec_select.py 文件包含的代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 导入访问MySQL的模块import mysql.connectordef query_db():    # ①、连接数据库    conn &#x3D; conn &#x3D; mysql.connector.connect(user&#x3D;&#39;root&#39;, password&#x3D;&#39;32147&#39;,        host&#x3D;&#39;localhost&#39;, port&#x3D;&#39;3306&#39;,        database&#x3D;&#39;python&#39;, use_unicode&#x3D;True)    # ②、获取游标    c &#x3D; conn.cursor()    # ③、调用执行select语句查询数据    c.execute(&#39;select * from user_tb where user_id &gt; %s&#39;, (2,))    # 通过游标的description属性获取列信息    description &#x3D; c.description    # 使用fetchall获取游标中的所有结果集    rows &#x3D; c.fetchall()    # ④、关闭游标    c.close()    # ⑤、关闭连接    conn.close()    return description, rows</span><br></pre></td></tr></table></figure><p>mian.py 文件包含的代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">from exec_select import *from tkinter import *def main():    description, rows &#x3D; query_db()    # 创建窗口    win &#x3D; Tk()    win.title(&#39;数据库查询&#39;)    # 通过description获取列信息    for i, col in enumerate(description):        lb &#x3D; Button(win, text&#x3D;col[0], padx&#x3D;50, pady&#x3D;6)        lb.grid(row&#x3D;0, column&#x3D;i)    # 直接使用for循环查询得到的结果集    for i, row in enumerate(rows):        for j in range(len(row)):            en &#x3D; Label(win, text&#x3D;row[j])            en.grid(row&#x3D;i+1, column&#x3D;j)    win.mainloop()if __name__ &#x3D;&#x3D; &#39;__main__&#39;:    main()</span><br></pre></td></tr></table></figure><p>通过命令行工具进入 dbapp 目录下，在该目录下执行如下命令：</p><p>Pyinstaller -F -w main.py</p><p>上面命令中的 -F 选项指定生成单个的可执行程序，-w 选项指定生成图形用户界面程序（不需要命令行界面）。运行上面命令，该工具同样在 dbapp 目录下生成了一个 dist 子目录，并在该子目录下生成了一个 main.exe 文件。</p><p>直接双击运行 main.exe 程序（该程序有图形用户界面，因此可以双击运行），读者可自行查看运行结果。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python爬虫爬取小姐姐图片</title>
    <link href="http://yoursite.com/2020/06/13/python%E7%88%AC%E8%99%AB%E7%88%AC%E5%8F%96%E5%B0%8F%E5%A7%90%E5%A7%90%E5%9B%BE%E7%89%87/"/>
    <id>http://yoursite.com/2020/06/13/python%E7%88%AC%E8%99%AB%E7%88%AC%E5%8F%96%E5%B0%8F%E5%A7%90%E5%A7%90%E5%9B%BE%E7%89%87/</id>
    <published>2020-06-13T11:29:49.000Z</published>
    <updated>2020-06-13T11:54:01.011Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p> 接触爬虫的第一天<br>第一步：现将python环境搭建好，工欲利其事必先利其器！<br>第二步：寻找目标网站，我选择的网站是<a href="http://www.win4000.com，里面有一个美女板块，里面有各种小姐姐的照片（你懂的）" target="_blank" rel="noopener">http://www.win4000.com，里面有一个美女板块，里面有各种小姐姐的照片（你懂的）</a><br><img src="https://img-blog.csdnimg.cn/20190328090620771.?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI0ODEwOTkx,size_16,color_FFFFFF,t_70" alt="网站部分截图"></p><p>第三步：分析目标网站的html源码及网页规则<br>通过分析我发现，该网页每个人物的每个图片都是<br><a href="http://www.win4000.com/meinv1_2.html" target="_blank" rel="noopener">http://www.win4000.com/meinv1_2.html</a><br><a href="http://www.win4000.com/meinv1_3.html" target="_blank" rel="noopener">http://www.win4000.com/meinv1_3.html</a><br><a href="http://www.win4000.com/meinv2_1.html" target="_blank" rel="noopener">http://www.win4000.com/meinv2_1.html</a><br><a href="http://www.win4000.com/meinv2_2.html" target="_blank" rel="noopener">http://www.win4000.com/meinv2_2.html</a><br>并且所有图片地址都存放在一个<img src="" alt="img">中<br><img src="https://img-blog.csdnimg.cn/201903280950561.?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI0ODEwOTkx,size_16,color_FFFFFF,t_70" alt="网页分析"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup   <span class="comment">#引用BeautifulSoup库</span></span><br><span class="line"><span class="keyword">import</span> requests                 <span class="comment">#引用requests</span></span><br><span class="line"><span class="keyword">import</span> os                       <span class="comment">#os</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">os.system (<span class="string">"title Py爬取小姐姐，李天行版权所有"</span>)</span><br><span class="line"><span class="keyword">print</span> (<span class="string">"爬取的图片都在D:/img文件夹下"</span>)</span><br><span class="line">root = <span class="string">'D://img//'</span>              <span class="comment">#配置存储路径，我配置的是自己电脑中的D:/img文件夹</span></span><br><span class="line"><span class="keyword">for</span> page <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">1000</span>):      <span class="comment">#配置爬取页码，我这边配置的是1000个人的图片</span></span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">20</span>):       <span class="comment">#配置爬取每个人多少张的参数，我这边配置的是每个人20张</span></span><br><span class="line">        url = <span class="string">'http://www.win4000.com/meinv'</span>+str(page)+<span class="string">'_'</span>+str(p)+<span class="string">'.html'</span></span><br><span class="line">        r = requests.get(url)                       <span class="comment">#使用requests中的get方法获取整个网页</span></span><br><span class="line">        r.encoding=<span class="string">'utf-8'</span>                          <span class="comment">#设定网页所使用的编码方式，错误的编码方式会导致乱码</span></span><br><span class="line">        <span class="keyword">if</span> r.status_code!=<span class="number">404</span>:                      <span class="comment">#判断生成后的链接是不是能访问，只有能访问才能爬取下载</span></span><br><span class="line">            demo = r.text                           <span class="comment">#将爬取后的对象通过text方法提取出所有的html</span></span><br><span class="line">            soup = BeautifulSoup(demo, <span class="string">"html.parser"</span>)<span class="comment">#使用BeautifulSoup库进行整合，第二个参数使用lxml一样的，lxml兼容性好较好，速度较快</span></span><br><span class="line">            text = soup.find_all(<span class="string">'img'</span>,class_ = <span class="string">'pic-large'</span>)<span class="comment">#选取整合后我们需要的部分内容，选取后的数据为list数组</span></span><br><span class="line">            <span class="keyword">for</span> img <span class="keyword">in</span> text:</span><br><span class="line">                imagr_url = img.get(<span class="string">'data-original'</span>)        <span class="comment">#取出img标签中data-original中的值</span></span><br><span class="line">                file_name = root + imagr_url.split(<span class="string">'/'</span>)[<span class="number">-1</span>] <span class="comment">#取出图片地址中文件及文件扩展名与本地存储路径进行拼接</span></span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(root):            <span class="comment">#判断文件夹是否存在，不存在则创建文件夹</span></span><br><span class="line">                        os.mkdir(root)</span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(file_name):       <span class="comment">#判断图片文件是否存在，存在则进行提示</span></span><br><span class="line">                        s = requests.get(imagr_url)         <span class="comment">#通过requests.get方式获取文件</span></span><br><span class="line">                        <span class="comment"># 使用with语句可以不用自己手动关闭已经打开的文件流</span></span><br><span class="line">                        <span class="keyword">with</span> open(file_name, <span class="string">"wb"</span>) <span class="keyword">as</span> f:  <span class="comment"># 开始写文件，wb代表写二进制文件</span></span><br><span class="line">                            f.write(s.content)</span><br><span class="line">                        print(<span class="string">"爬取完成"</span>)</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        print(<span class="string">"文件已存在"</span>)</span><br><span class="line">                <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                    print(<span class="string">"爬取失败:"</span> + str(e))</span><br></pre></td></tr></table></figure><p>哈哈哈哈大功告成，以下是成果展示<br><img src="https://img-blog.csdnimg.cn/20190328101902716.?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI0ODEwOTkx,size_16,color_FFFFFF,t_70" alt="成果"></p><p>总结：<br>1、该方式爬取为单进程爬取，只能一张一张爬取<br>2、进行图片请求时一定要注意不要使用之前使用过的变量<br>3、细心、认真、不浮躁</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python爬取你想要的小姐姐</title>
    <link href="http://yoursite.com/2020/06/13/Python%E7%88%AC%E5%8F%96%E4%BD%A0%E6%83%B3%E8%A6%81%E7%9A%84%E5%B0%8F%E5%A7%90%E5%A7%90/"/>
    <id>http://yoursite.com/2020/06/13/Python%E7%88%AC%E5%8F%96%E4%BD%A0%E6%83%B3%E8%A6%81%E7%9A%84%E5%B0%8F%E5%A7%90%E5%A7%90/</id>
    <published>2020-06-13T10:57:41.000Z</published>
    <updated>2020-06-13T11:23:39.013Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p> 一、准备</p><p>\1. 原地址</p><p><img src="https://img2018.cnblogs.com/blog/1165798/201907/1165798-20190729104958421-1351663805.png" alt="img"></p><p>\2. 检查html发现，网页是有规则的分页, 最大图片的class为pic-large</p><p>二、代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"> 1 import requests</span><br><span class="line"> 2 import os</span><br><span class="line"> 3 from bs4 import BeautifulSoup</span><br><span class="line"> 4 </span><br><span class="line"> 5 url &#x3D; &#39;http:&#x2F;&#x2F;www.win4000.com&#x2F;wallpaper_detail_157712.html&#39;</span><br><span class="line"> 6 imgmkdir &#x3D; &#39;D:&#x2F;&#x2F;Download&#x2F;&#x2F;ghost_1&#x2F;&#x2F;&#39;</span><br><span class="line"> 7 </span><br><span class="line"> 8 </span><br><span class="line"> 9 # 获取网页url</span><br><span class="line">10 def getUrlList():</span><br><span class="line">11     imgUrlList &#x3D; []</span><br><span class="line">12     for i in range(0, 10):</span><br><span class="line">13         imgUrl &#x3D; &#39;&#39;</span><br><span class="line">14         url_split &#x3D; url.split(&#39;.html&#39;)</span><br><span class="line">15         if not i &#x3D;&#x3D; 0:</span><br><span class="line">16             imgUrl +&#x3D; url_split[0] + &#39;_&#39; + str(i) + &#39;.html&#39;</span><br><span class="line">17             # print(imgUrl)</span><br><span class="line">18             imgUrlList.append(imgUrl)</span><br><span class="line">19 </span><br><span class="line">20     return imgUrlList</span><br><span class="line">21 </span><br><span class="line">22 </span><br><span class="line">23 # 下载图片</span><br><span class="line">24 def downImg(imgUrl):</span><br><span class="line">25     try:</span><br><span class="line">26         if not os.path.exists(imgmkdir):</span><br><span class="line">27             os.mkdir(imgmkdir)</span><br><span class="line">28         if not os.path.exists(imgUrl):</span><br><span class="line">29             r &#x3D; requests.get(imgUrl)</span><br><span class="line">30             r.raise_for_status()</span><br><span class="line">31             # 使用with语句可以不用自己手动关闭已经打开的文件流</span><br><span class="line">32             imgpath &#x3D; imgmkdir + imgUrl.split(&#39;&#x2F;&#39;)[-1]</span><br><span class="line">33             # 开始写文件, wb表示写二进制文件</span><br><span class="line">34             with open(imgpath, &#39;wb&#39;) as f:</span><br><span class="line">35                 f.write(r.content)</span><br><span class="line">36             print(imgUrl + &#39;【爬取完成】&#39;)</span><br><span class="line">37         else:</span><br><span class="line">38             print(imgUrl.split(&#39;&#x2F;&#39;)[-1] + &#39;【文件已存在】&#39;)</span><br><span class="line">39     except Exception as e:</span><br><span class="line">40         print(&quot;爬取失败&quot; + str(e))</span><br><span class="line">41 </span><br><span class="line">42 </span><br><span class="line">43 # 获取imgHtml标签</span><br><span class="line">44 def getcontent(soup):</span><br><span class="line">45     for i in soup.find_all(&#39;img&#39;, class_&#x3D;&#39;pic-large&#39;):</span><br><span class="line">46         imgsrc &#x3D; i[&#39;src&#39;]</span><br><span class="line">47         if imgsrc.find(&#39;http&#39;) &gt;&#x3D; 0 or imgsrc.find(&#39;https&#39;) &gt;&#x3D; 0:</span><br><span class="line">48             # 下载图片</span><br><span class="line">49             downImg(imgsrc)</span><br><span class="line">50 </span><br><span class="line">51 </span><br><span class="line">52 # 根据url获取html源码</span><br><span class="line">53 def getHtmlByUrl(htmlUrl):</span><br><span class="line">54     htmlText &#x3D; requests.get(htmlUrl).content</span><br><span class="line">55     # 使用beautifulSoup解析html</span><br><span class="line">56     soup &#x3D; BeautifulSoup(htmlText, &#39;lxml&#39;)</span><br><span class="line">57 </span><br><span class="line">58     return soup</span><br><span class="line">59 </span><br><span class="line">60 </span><br><span class="line">61 def main():</span><br><span class="line">62     htmlUrlList &#x3D; getUrlList()</span><br><span class="line">63     for url in htmlUrlList:</span><br><span class="line">64         htmltext &#x3D; getHtmlByUrl(url)</span><br><span class="line">65         getcontent(htmltext)</span><br><span class="line">66 </span><br><span class="line">67 </span><br><span class="line">68 if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">69     main()</span><br></pre></td></tr></table></figure><p>三、结果</p><p><img src="https://img2018.cnblogs.com/blog/1165798/201907/1165798-20190729105255294-118786208.png" alt="img"></p><p>四、总结</p><p>　　代码用比较笨的方法来获取，先试水</p><p>五、本人（副社长）升级的代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*-coding:utf-8-*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://www.win4000.com/wallpaper_detail_157712.html'</span></span><br><span class="line">a=<span class="number">0</span></span><br><span class="line">imgmkdir = <span class="string">'D://迅雷下载//'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取网页url</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getUrlList</span><span class="params">()</span>:</span></span><br><span class="line">    imgUrlList = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">10</span>):</span><br><span class="line">        imgUrl = <span class="string">''</span></span><br><span class="line">        url_split = url.split(<span class="string">'.html'</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> i == <span class="number">0</span>:</span><br><span class="line">            imgUrl += url_split[<span class="number">0</span>] + <span class="string">'_'</span> + str(i) + <span class="string">'.html'</span></span><br><span class="line">            <span class="comment"># print(imgUrl)</span></span><br><span class="line">            imgUrlList.append(imgUrl)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> imgUrlList</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载图片</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">downImg</span><span class="params">(imgUrl)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(imgmkdir):</span><br><span class="line">            os.mkdir(imgmkdir)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(imgUrl):</span><br><span class="line">            r = requests.get(imgUrl)</span><br><span class="line">            r.raise_for_status()</span><br><span class="line">            <span class="comment"># 使用with语句可以不用自己手动关闭已经打开的文件流</span></span><br><span class="line">            imgpath = imgmkdir + imgUrl.split(<span class="string">'/'</span>)[<span class="number">-1</span>]</span><br><span class="line">            <span class="comment"># 开始写文件, wb表示写二进制文件</span></span><br><span class="line">            <span class="keyword">with</span> open(imgpath, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(r.content)</span><br><span class="line">            print(imgUrl + <span class="string">'【爬取完成】'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(imgUrl.split(<span class="string">'/'</span>)[<span class="number">-1</span>] + <span class="string">'【文件已存在】'</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">"爬取失败"</span> + str(e))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取imgHtml标签</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getcontent</span><span class="params">(soup)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> soup.find_all(<span class="string">'img'</span>, class_=<span class="string">'pic-large'</span>):</span><br><span class="line">        imgsrc = i[<span class="string">'src'</span>]</span><br><span class="line">        <span class="keyword">if</span> imgsrc.find(<span class="string">'http'</span>) &gt;= <span class="number">0</span> <span class="keyword">or</span> imgsrc.find(<span class="string">'https'</span>) &gt;= <span class="number">0</span>:</span><br><span class="line">            <span class="comment"># 下载图片</span></span><br><span class="line">            downImg(imgsrc)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据url获取html源码</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getHtmlByUrl</span><span class="params">(htmlUrl)</span>:</span></span><br><span class="line">    htmlText = requests.get(htmlUrl).content</span><br><span class="line">    <span class="comment"># 使用beautifulSoup解析html</span></span><br><span class="line">    soup = BeautifulSoup(htmlText, <span class="string">'lxml'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> soup</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    htmlUrlList = getUrlList()</span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> htmlUrlList:</span><br><span class="line">        htmltext = getHtmlByUrl(url)</span><br><span class="line">        getcontent(htmltext)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">main()</span><br><span class="line"><span class="keyword">if</span> a==<span class="number">0</span>:</span><br><span class="line">a=<span class="number">0</span></span><br><span class="line"><span class="keyword">if</span> a==<span class="number">1</span>:</span><br><span class="line">url = <span class="string">'http://www.win4000.com/wallpaper_detail_169808.html'</span></span><br><span class="line"><span class="keyword">if</span> a==<span class="number">2</span>:</span><br><span class="line">url = <span class="string">'http://www.win4000.com/wallpaper_detail_169594.html'</span></span><br><span class="line"><span class="keyword">if</span> a==<span class="number">3</span>:</span><br><span class="line">url = <span class="string">'http://www.win4000.com/wallpaper_detail_169553.html'</span></span><br><span class="line"><span class="keyword">if</span> a==<span class="number">4</span>:</span><br><span class="line">url = <span class="string">'http://www.win4000.com/wallpaper_detail_169629.html'</span></span><br><span class="line"><span class="keyword">if</span> a==<span class="number">5</span>:</span><br><span class="line">url = <span class="string">'http://www.win4000.com/wallpaper_detail_169317.html'</span></span><br><span class="line"><span class="keyword">if</span> a==<span class="number">6</span>:</span><br><span class="line">url = <span class="string">'http://www.win4000.com/wallpaper_detail_169116.html'</span></span><br><span class="line"><span class="keyword">if</span> a==<span class="number">7</span>:</span><br><span class="line">url = <span class="string">'http://www.win4000.com/wallpaper_detail_169163.html'</span></span><br><span class="line"><span class="keyword">if</span> a==<span class="number">8</span>:</span><br><span class="line">url = <span class="string">'http://www.win4000.com/wallpaper_detail_168984.html'</span></span><br><span class="line"><span class="keyword">if</span> a==<span class="number">9</span>:</span><br><span class="line">url = <span class="string">'http://www.win4000.com/wallpaper_detail_168684.html'</span></span><br><span class="line"><span class="keyword">if</span> a==<span class="number">10</span>:</span><br><span class="line">url = <span class="string">'http://www.win4000.com/wallpaper_detail_168524.html'</span></span><br><span class="line">a=a+<span class="number">1</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python如何脱单（四）</title>
    <link href="http://yoursite.com/2020/06/13/Python%E5%A6%82%E4%BD%95%E8%84%B1%E5%8D%95%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
    <id>http://yoursite.com/2020/06/13/Python%E5%A6%82%E4%BD%95%E8%84%B1%E5%8D%95%EF%BC%88%E5%9B%9B%EF%BC%89/</id>
    <published>2020-06-13T10:55:46.000Z</published>
    <updated>2020-06-13T10:56:28.585Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p> 哄女朋友最高的境界是什么？</p><p>除了用心之外，每天不重复的甜言蜜语必然是少不了的。虽然语文老师上学的时候也教了一些东西，但是日子长了必然“江郎才尽”。</p><p>大家都是混科技圈的，借助自动化的手段能不能一次性的解决问题呢？</p><p>嗯，显然是可以的。Github作为全球最大的同性交友网站，小伙伴们不仅可以在上面交流编程技巧，还能学到如何开发一个自动哄女友神器。</p><p><img src="https://img1.tuicool.com/2mQvmmR.png!web" alt="img"></p><p>先附上Github地址：</p><p><a href="https://github.com/sfyc23/EverydayWechat" target="_blank" rel="noopener">https://github.com/sfyc23/EverydayWechat</a></p><p>这个自动给女友发送微信暖心话的项目，已经连续霸榜Github趋势榜好几天了。作者用Python3和Itchat微信接口开发了一款小工具，可以定时给朋友发送每日天气、提醒、每日一句。通过调用图灵机器人，也可以智能自动回复信息。</p><p>操作简单且容易上手，即使是小白，只要配置好了Python环境，安装好必要的Python库，代码下载之后，只要CMD一下即可实现。</p><p>在手把手教大家操作之前，文摘菌先带大家看下效果~</p><p><img src="https://img2.tuicool.com/niMfArM.jpg!web" alt="img"></p><p>首先，我定的时间是22:20，一到时间文摘菌的账号就收到了发送的信息，包括英文和中文情话。北京的天气以及在一起的多少天。</p><p>调用图灵机器人之后，两个账号便可以对话，图灵机器人还算强大，当我发送：这是个测试之后，图灵机器人回复：你不放心我吗？☹☹☹☹</p><p>注：这个小工具的项目中的天气信息来自SOJSON API接口，暖心情话来自金山词霸上面的每日一句，带英文的哟~图灵机器人使用需要申请密钥，每天免费数量只有100条。如果使用超了。可使用青云客智能聊天机器人，这个不限制次数。</p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><p>手把手教学实现哄女友神器</p><p>来吧，先视频演示一下使用教程~</p><p>首先，把Python安装好，并配置好环境，个人建议新手安装anaconda，具体安装教程，可自行谷歌搜索~</p><p>然后安装必要的Python库，环境配置好的同学可以直接用pip install +库名 进行安装。必须安装的库为：requests、beautifulsoup4、itchat、apscheduler、pyyaml、lxml、simplejson。记住了，小伙伴，一个库都不能少哟~</p><p>然后进入Github地址下载项目的全部文件（就是这么简单粗暴），解压过后，找到 _config.yaml 用Python IDE打开。然后进行一系列的配置~</p><p><img src="https://img1.tuicool.com/UZzUFzN.jpg!web" alt="img"></p><p>就是这个文件</p><h3 id="-1"><a href="#-1" class="headerlink" title=""></a></h3><p>一、配置自动回复机器人。</p><p>1.开启自动回复：</p><p><img src="https://img2.tuicool.com/IrYzAvq.png!web" alt="img"></p><p>将 is_auto_relay 设置为：True。</p><p>2.配置图灵机器人:</p><p><img src="https://img2.tuicool.com/3IBFNri.png!web" alt="img"></p><p>打开图灵机器人官网：<a href="http://www.turingapi.com" target="_blank" rel="noopener">http://www.turingapi.com</a> 进行注册。</p><p>创建机器人，得到 apikey，userid。</p><p>将 apikey，userid 填入到 _config.yaml 文件中的：</p><p>turing_conf:</p><p>apiKey: ‘你所获取apiKey’</p><p>userId: ‘你所获取的userId’</p><p>\3. 指定自动回复的好友名单:</p><p><img src="https://img1.tuicool.com/aeqqAzZ.png!web" alt="img"></p><p># 指定自动回复的好友名单。</p><p>auto_reply_names:</p><p>- ‘好友1’</p><p>- ‘好友2’</p><p>注意：</p><ol><li>只能自动回复文字类消息；</li><li>群消息自动回复还未现实。（待完成）；</li><li>如果消息发送太频繁，微信会限制登录网页端登录。放心，并不会封号；</li><li>并不是对所有人自动回复，只是回复auto_reply_names中的人。</li><li>当没有图灵机器人 apikey 与 UserId，或者数量超出时。会使用备用的青云客智能聊天机器人获取数据。</li></ol><h3 id="-2"><a href="#-2" class="headerlink" title=""></a></h3><p>二、配置定时提醒</p><p>1.开启并设置提醒时间：</p><p><img src="https://img2.tuicool.com/NNbeUb3.png!web" alt="img"></p><p>如：</p><p>alarm_info:</p><p>is_alarm: True</p><p>#定时发送时间</p><p>alarm_timed: ‘9:30’</p><p>2.填写需要发送的好友。.</p><p><img src="https://img0.tuicool.com/Mni6R3Y.jpg!web" alt="img"></p><p>如：</p><p>girlfriend_infos:</p><p>- #女友微信昵称或者备注名，不能输入微信号。</p><p>wechat_name: ‘文摘菌’</p><p>#女友所在城市，用于发送天气。（可空）</p><p>city_name: ‘北京’</p><p># 从那天开始勾搭的（可空）(最终效果为：宝贝这是我们在一起的第 111 天)</p><p>start_date: ‘2019-06-13’</p><p># 后缀（可空）</p><p>sweet_words: ‘来自最爱你的我。’</p><p>#如果你有多个人需要发送，则参照这个样式，复制即可</p><p>#如不需要，则删除或注解下面所有的数据</p><p>- wechat_name: ‘happy’</p><p>city_name: ‘朝阳区’</p><p>start_date: ‘2018-11-11’</p><p>sweet_words: ‘来自你俊美的老公。’</p><p>然后，直接将run.py文件直接拖到命令窗口界面（视频中有演示），会出现二维码，扫描之后，实现网页登录。如下☟</p><p><img src="https://img1.tuicool.com/QZBV7fF.png!web" alt="img"></p><p>发送成功如下☟</p><p><img src="https://img1.tuicool.com/MRbIBny.png!web" alt="img"></p><p>自动回复成功如下☟</p><p><img src="https://img0.tuicool.com/3YNjUry.png!web" alt="img"></p><p>注意事项：</p><ul><li>检查是否是最新的代码，检查是否是 Python3.5+，检查依赖有没有安装完整。</li><li>先检查微信是否可登录 微信网页版，如网页端不能用，此项目也不能用。</li><li>请更新你的 itchat 为最新版本。</li><li>与微信相关的可以先去 itchat issues 是否有相似问题。</li><li>微信名只能是昵称或者备注名，不能输入微信号。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python如何脱单（三）</title>
    <link href="http://yoursite.com/2020/06/13/Python%E5%A6%82%E4%BD%95%E8%84%B1%E5%8D%95%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>http://yoursite.com/2020/06/13/Python%E5%A6%82%E4%BD%95%E8%84%B1%E5%8D%95%EF%BC%88%E4%B8%89%EF%BC%89/</id>
    <published>2020-06-13T10:54:28.000Z</published>
    <updated>2020-06-13T10:55:16.909Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p> 用 Python 制作的给父母天气预报提醒的小工具<a href="https://mp.weixin.qq.com/s/GrWQN6-gK49L8l0u37Tr7g" target="_blank" rel="noopener">天气变冷了，给父母制作一个天气提醒小助手</a>，这篇文章我同步到博客上之后，有读者在评论区留言，对于部分微信没有网页版接口，导致无法实现这个功能，这位读者建议，建议用发短信的方式，这样，就不会受限于微信的限制。</p><p><img src="https://img2018.cnblogs.com/blog/1229977/201911/1229977-20191104092934144-479241373.png" alt="img"></p><p>这是一个好方法，今天的教程就是教大家怎么发送免费短信给女朋友。</p><p>发送短信接口，我知道的常见的有两个平台，一个是 twilio，可以免费发短信 500 条，可发任意信息，一个是腾讯云，可以免费发短信 100 条，需要申请短信发送内容模板。</p><p>鉴于 twilio 免费次数多一些，所以，这次我们就 twilio来发送当天的天气信息给爸妈了。</p><h2 id="twilio注册"><a href="#twilio注册" class="headerlink" title="twilio注册"></a>twilio注册</h2><p>要发送短信，我们需要现在 twilio 官网注册一个账号。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.twilio.com&#x2F;</span><br></pre></td></tr></table></figure><p>点击 Sign Up 注册一个账号。</p><p><img src="https://img2018.cnblogs.com/blog/1229977/201911/1229977-20191104092934627-158366549.png" alt="img"></p><p>填写邮箱和密码等资料，提交后会有一个判断是否为机器人的验证，点击左右箭头使图案显示为正图就可以了。</p><p>再到刚才填写的邮箱中去验证下，需要填入手机号验证。</p><p><img src="https://img2018.cnblogs.com/blog/1229977/201911/1229977-20191104092934900-495766124.png" alt="img"></p><p>刚开始用了移动号发了两次都没有收到验证码，不知道什么原因，之后换了电信后就收到了验证码。</p><p>验证成功后会提示选择是否通过代码调用。</p><p><img src="https://img2018.cnblogs.com/blog/1229977/201911/1229977-20191104092935164-1675521922.png" alt="img"></p><p>选择 yes 后再选择对应的语言，我们当然是选择 Python 了。</p><p><img src="https://img2018.cnblogs.com/blog/1229977/201911/1229977-20191104092935397-521182981.png" alt="img"></p><h2 id="获取试用号"><a href="#获取试用号" class="headerlink" title="获取试用号"></a>获取试用号</h2><p>选择使用用途后，可以就可以获取一个试用的号码了，点击 Get a Trial Number 按钮。</p><p><img src="https://img2018.cnblogs.com/blog/1229977/201911/1229977-20191104092936849-343851043.jpg" alt="img"></p><p>我们可以看到系统给我提供的这个号码。</p><p><img src="https://img2018.cnblogs.com/blog/1229977/201911/1229977-20191104092938940-2049808357.png" alt="img"></p><p>点击确定后就会出现成功的页面，显示 Twilio 提供的号码，这个号码就是用来发送短信的。</p><p><img src="https://img2018.cnblogs.com/blog/1229977/201911/1229977-20191104092940255-380574474.png" alt="img"></p><p>获取号码成功后自动跳回到主页，下方有 Python 调用短信接口的示例。</p><p><img src="https://img2018.cnblogs.com/blog/1229977/201911/1229977-20191104092941497-621131960.png" alt="img"></p><p>进入接口调用说明后，我们看到右边直接由 Python 调用接口发短信的示例。</p><p><img src="https://img2018.cnblogs.com/blog/1229977/201911/1229977-20191104092943670-1408192322.png" alt="img"></p><p>我们直接拿来用即可，把代码中 account_sid 和 auth_token 替换成自己的，这个两个值在刚才显示号码那个页面。</p><p><img src="https://img2018.cnblogs.com/blog/1229977/201911/1229977-20191104092944969-887141862.png" alt="img"></p><p>再把 message 中的 body 换成你自己的文本，把发送信息的号码换成刚官方提供的号码。</p><h2 id="接收号验证"><a href="#接收号验证" class="headerlink" title="接收号验证"></a>接收号验证</h2><p>接收号码在使用前，需要在 Twilio 上验证下，点击右侧的 verified numbers 进入，添加号码。</p><p><img src="https://img2018.cnblogs.com/blog/1229977/201911/1229977-20191104092945492-369628442.png" alt="img"></p><p>因为这是免费版，所以只支持一个号码，如果之前有验证号码的话，我们需要点击右侧的 X 把这个号码号码删除才能添加新的号码。</p><p><img src="https://img2018.cnblogs.com/blog/1229977/201911/1229977-20191104092946052-463940193.png" alt="img"></p><p>点击验证号码的按钮后，在弹出的页面选择左下方的 text you instead，也就是用短信验证码来验证新添加的号码，你要发给女朋友，当然，这个接收的号码都填女朋友的了。</p><p><img src="https://img2018.cnblogs.com/blog/1229977/201911/1229977-20191104092947015-693148001.png" alt="img"></p><p>填入号码后，点击验证，等待验证码。</p><p><img src="https://img2018.cnblogs.com/blog/1229977/201911/1229977-20191104092947533-22826922.png" alt="img"></p><p>我分别试了移动号、联通号、电信号，发现电信号和联通卡能正常收到验证码通过验证，移动号发了几次都收不到验证码，卡里是有余额的，可能是移动卡不支持这个接口，大家可以试试。</p><h2 id="代码调试"><a href="#代码调试" class="headerlink" title="代码调试"></a>代码调试</h2><p>运行代码前，不要忘了把 twilio 库用 pip 命令安装下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install twilio</span><br></pre></td></tr></table></figure><p>然后把代码中的几个值替换成自己的。</p><p><img src="https://img2018.cnblogs.com/blog/1229977/201911/1229977-20191104092949694-647622674.png" alt="img"></p><p>把刚才验证成功的号添加到代码中，运行代码，成功后就会收到发送的短信。</p><p><img src="https://img2018.cnblogs.com/blog/1229977/201911/1229977-20191104092951954-397835924.png" alt="img"></p><p>然后我们把之前的天气信息用短信发出去，当然你可以发送其他信息。这里我用之前的天气信息。</p><p>之前的代码中把微信相关的去掉，天气接口部分保留。</p><p><img src="https://img2018.cnblogs.com/blog/1229977/201911/1229977-20191104092952874-582747103.png" alt="img"></p><p>把其中的 key 换成自己的，具体操作详见这篇文章<a href="https://mp.weixin.qq.com/s/GrWQN6-gK49L8l0u37Tr7g" target="_blank" rel="noopener">天气变冷了，给父母制作一个天气提醒小助手</a>。</p><p>把刚才发送短信的内容替换成天气接口返回的信息 msg，定时操作的代码和之前一样。</p><p><img src="https://img2018.cnblogs.com/blog/1229977/201911/1229977-20191104092956985-1819179876.png" alt="img"></p><p>运行代码后的效果如下：<br><img src="https://img2018.cnblogs.com/blog/1229977/201911/1229977-20191104093000037-2038518608.png" alt="img"></p><p>同样，我还是把程序放在服务器上，第二天同一时间会继续发送当天的天气信息，我设置的是相隔 24 小时，当然，你可以改变相隔时间。</p><p>没有服务器的小伙伴可以看看腾讯云的双十一活动价了，88元一年，平时用来放放小工具，做个人网站是非常划算的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python如何脱单（二）</title>
    <link href="http://yoursite.com/2020/06/13/Python%E5%A6%82%E4%BD%95%E8%84%B1%E5%8D%95%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://yoursite.com/2020/06/13/Python%E5%A6%82%E4%BD%95%E8%84%B1%E5%8D%95%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2020-06-13T10:52:40.000Z</published>
    <updated>2020-06-13T10:53:21.524Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p> 七夕就要到了，在这个有情人终成眷属的好日子里，小安在这里给大家带来Python的小福利，在七夕利用Python制造两个人之间的甜蜜。二人世界里少不了属于两个人之间的甜言蜜语，而这些悄悄话也是记录了两个人从相识到相知再到在一起的甜蜜。</p><p>如果我们把这些甜言蜜语都收集起来，做成一个心爱的甜心，在七夕节的当天送给自己的另一半。这样既用心，而且还很甜蜜的操作，是不是很酷！说干就干，接下来，小安就带领大家，从数据的收集，再到数据的预处理，最终形成一个爱心展示，为大家制作一个七夕节的小惊喜。</p><p><strong><img src="https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_png/1hReHaqafafJYoFH7OAhmUdTjo35vvJTvLpCGfzzK1PyqhibaFBFxKyrzAicHWibLWAuNXTESdJ0PKghyml9PqXjQ/640?wx_fmt=png" alt="640?wx_fmt=png">***</strong>*数据的准备****</p><p>首先，小安由于平时玩QQ比较多，所以决定以QQ来为大家做展示。这里小安怕会泄露个人的隐私，索性就以平时交流比较多的群聊天记录作为数据材料，大家只需要按照步骤来操作即可。</p><p>数据的获取，大家直接按照上图所示，找到自己的“目标”，然后右键，点击保存聊天记录即可，小安这里呢，将数据保存为txt文件，方便后续的操作。(因为小安是单身，没有mm跟我聊天，每天都是数据分析、机器学习研究和数据挖掘，所以只有技术的聊天）</p><p><img src="https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_png/1hReHaqafadUaDa5ibORBZ0jj1XCw78rQJ1ghUqNwlpPeRJ0h3US8AvK28gbic3DwSPPVROVicibMhFnSIUHia16ypA/640?wx_fmt=png" alt="640?wx_fmt=png"></p><p>保存的数据如下图所示：</p><p><img src="https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_png/1hReHaqafadUaDa5ibORBZ0jj1XCw78rQgs1EyDS9edbgqeibZg1Um4ke4o9JbSFEkWQmxFppjNicFk6BIfgxOEVA/640?wx_fmt=png" alt="640?wx_fmt=png"></p><p><strong><img src="https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_png/1hReHaqafafJYoFH7OAhmUdTjo35vvJT7KxibNiadbBJJYibrjeic9Us7ZEficc1xuic28F0nnicicEoqQcB6k5CsMpU7w/640?wx_fmt=png" alt="640?wx_fmt=png"></strong></p><p><strong><em>\</em>数据的处理**</strong></p><p>数据获取完毕之后，接下来就是数据的预处理了，上面大家可以发现，数据中充斥着大量的数字、标点符号、字母等干扰因素，而我们平时都是以中文交流，所以在进行数据处理的时候，直接选择匹配中文是一个非常高效而且明智的选择。数据处理的代码如下图所示：</p><p><img src="https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_png/1hReHaqafadUaDa5ibORBZ0jj1XCw78rQW00icHTuTkJdIfY1BV2qV1niaA3dlK1b11eHEcSf272Z8remrt75lRXg/640?wx_fmt=png" alt="640?wx_fmt=png"></p><p>我们将处理好的数据放到新的文件夹里，以方便后续操作。接下来，就是定制特定爱心的时间了，我们利用的是jieba分词和WordCloud的词云制作，代码如下图所示:</p><p><img src="https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_png/1hReHaqafadUaDa5ibORBZ0jj1XCw78rQ7YdTeiaPgortNSpsOlmzWotGRQtmltOicMhobarxRuxWea8N37GyNP1Q/640?wx_fmt=png" alt="640?wx_fmt=png"></p><p>产生的效果如下图所示：</p><p><img src="https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_jpg/1hReHaqafadUaDa5ibORBZ0jj1XCw78rQiaFQTic7z8ibUvnTqOIEKoKDAzpvibUuRgS5mTEfUmLN7QTQsyFsEQm1ibg/640?wx_fmt=jpeg" alt="640?wx_fmt=jpeg"></p><p>到了这里，就结束了吗？No,No,No怎么可能，七夕节的礼物就要付出更多的精力！</p><p><strong><em>\</em>在线词云做爱心**</strong></p><p>下面小安为大家安利一个在线的词云制作，定制出更加完美的词云。在线词云制作的链接为：<a href="http://yciyun.com/，界面如下图所示：" target="_blank" rel="noopener">http://yciyun.com/，界面如下图所示：</a></p><p><img src="https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_png/1hReHaqafadUaDa5ibORBZ0jj1XCw78rQP7k3DdLP3BDgeRl5Ez61xMsqL5umU4JqM4icrANQicvYDpfjvHQ5KaOg/640?wx_fmt=png" alt="640?wx_fmt=png"></p><p>在模板模块里，大家可以选择是心形还是其他形状。在配置里大家可以选择更改背景的颜色。最重要的是数据模块，大家需要注册，然后才能在自定义编辑里更改数值，而且由于其字体限制为3号到9号。</p><p>可能大家会想，这个多的数值要更改到什么时候为止呢，别担心，小安已经帮大家写好程序了，大家只需要运行程序中的online_wordcloud函数即可。</p><p><img src="https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_png/1hReHaqafadUaDa5ibORBZ0jj1XCw78rQTCtba16MlNTq1N5b3wn5FQmM6pPgSfDzX2bUFtnRibUGNjFvbicnX3Lg/640?wx_fmt=png" alt="640?wx_fmt=png"></p><p>最后，为大家展示的经过在线词云制作的爱心图片：</p><p><img src="https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_png/1hReHaqafadUaDa5ibORBZ0jj1XCw78rQXmgrKTgRPgFfnawoqfvzibls2m5KqcrfZn4sXWDxZuTZokTibBk6EfmA/640?wx_fmt=png" alt="640?wx_fmt=png"></p><p>大家如果想让背景透明的话，需要开通会员，大家喜欢的话，可以直接开通。将上面的爱心图制作成大幅图画，在周围点缀上两人的甜蜜照片，做成画框，这样的一副作品简直是七夕节最美的礼物了，大家赶快动手做起来吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python—如何脱单（一）</title>
    <link href="http://yoursite.com/2020/06/13/Python%E2%80%94%E5%A6%82%E4%BD%95%E8%84%B1%E5%8D%95%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://yoursite.com/2020/06/13/Python%E2%80%94%E5%A6%82%E4%BD%95%E8%84%B1%E5%8D%95%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2020-06-13T10:48:06.000Z</published>
    <updated>2020-06-13T10:50:30.909Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>学习一门语言最好的方式就是有项目驱动，或者说你得有目的的去学，这样你才能学的更快。作为一个小白，我的出发点就是利用Python哄女朋友开心啦。今天给大家介绍两个Python人专属的撩妹技巧。</p><h3 id="1-用Python画玫瑰花"><a href="#1-用Python画玫瑰花" class="headerlink" title="1.用Python画玫瑰花"></a>1.用Python画玫瑰花</h3><h4 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h4><hr><p>#!/usr/bin/env python</p><p># -<em>- coding:utf-8 -</em>-</p><p>‘’’</p><p>Created on sep 20, 2018</p><p>@author: stormwen</p><p>‘’’</p><p>import turtle</p><p># 设置初始位置</p><p>turtle.penup()</p><p>turtle.left(90)</p><p>turtle.fd(200)</p><p>turtle.pendown()</p><p>turtle.right(90)</p><p># 花蕊</p><p>turtle.fillcolor(“red”)</p><p>turtle.begin_fill()</p><p>turtle.circle(10, 180)</p><p>turtle.circle(25, 110)</p><p>turtle.left(50)</p><p>turtle.circle(60, 45)</p><p>turtle.circle(20, 170)</p><p>turtle.right(24)</p><p>turtle.fd(30)</p><p>turtle.left(10)</p><p>turtle.circle(30, 110)</p><p>turtle.fd(20)</p><p>turtle.left(40)</p><p>turtle.circle(90, 70)</p><p>turtle.circle(30, 150)</p><p>turtle.right(30)</p><p>turtle.fd(15)</p><p>turtle.circle(80, 90)</p><p>turtle.left(15)</p><p>turtle.fd(45)</p><p>turtle.right(165)</p><p>turtle.fd(20)</p><p>turtle.left(155)</p><p>turtle.circle(150, 80)</p><p>turtle.left(50)</p><p>turtle.circle(150, 90)</p><p>turtle.end_fill()</p><p># 花瓣1</p><p>turtle.left(150)</p><p>turtle.circle(-90, 70)</p><p>turtle.left(20)</p><p>turtle.circle(75, 105)</p><p>turtle.setheading(60)</p><p>turtle.circle(80, 98)</p><p>turtle.circle(-90, 40)</p><p># 花瓣2</p><p>turtle.left(180)</p><p>turtle.circle(90, 40)</p><p>turtle.circle(-80, 98)</p><p>turtle.setheading(-83)</p><p># 叶子1</p><p>turtle.fd(30)</p><p>turtle.left(90)</p><p>turtle.fd(25)</p><p>turtle.left(45)</p><p>turtle.fillcolor(“green”)</p><p>turtle.begin_fill()</p><p>turtle.circle(-80, 90)</p><p>turtle.right(90)</p><p>turtle.circle(-80, 90)</p><p>turtle.end_fill()</p><p>turtle.right(135)</p><p>turtle.fd(60)</p><p>turtle.left(180)</p><p>turtle.fd(85)</p><p>turtle.left(90)</p><p>turtle.fd(80)</p><p># 叶子2</p><p>turtle.right(90)</p><p>turtle.right(45)</p><p>turtle.fillcolor(“green”)</p><p>turtle.begin_fill()</p><p>turtle.circle(80, 90)</p><p>turtle.left(90)</p><p>turtle.circle(80, 90)</p><p>turtle.end_fill()</p><p>turtle.left(135)</p><p>turtle.fd(60)</p><p>turtle.left(180)</p><p>turtle.fd(60)</p><p>turtle.right(90)</p><p>turtle.circle(200, 60)</p><p>turtle.done()</p><hr><h4 id="可以根据女朋友喜欢的颜色，进行调试哦。"><a href="#可以根据女朋友喜欢的颜色，进行调试哦。" class="headerlink" title="可以根据女朋友喜欢的颜色，进行调试哦。"></a>可以根据女朋友喜欢的颜色，进行调试哦。</h4><h4 id="效果展示："><a href="#效果展示：" class="headerlink" title="效果展示："></a>效果展示：</h4><p><img src="https:////upload-images.jianshu.io/upload_images/13914403-e4e3b7d035def1bc.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p><img src="https:////upload-images.jianshu.io/upload_images/13914403-a495544a4f4e7d78.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p><img src="https:////upload-images.jianshu.io/upload_images/13914403-6704d3dff612c3d9.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p><img src="https:////upload-images.jianshu.io/upload_images/13914403-42fad2faf4c5dc0a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><h2 id="2-一行代码画心："><a href="#2-一行代码画心：" class="headerlink" title="2.一行代码画心："></a>2.一行代码画心：</h2><h4 id="代码：-1"><a href="#代码：-1" class="headerlink" title="代码："></a>代码：</h4><hr><p>#!/usr/bin/env python</p><p># -<em>- coding:utf-8 -</em>-</p><p>#@Time :2018/9/20 1:00pm</p><p>#@Author:stormwen</p><p>#Software:Pycharm</p><p>print(‘\n’.join([‘’.join([(‘Miss u’[(x-y)% len(‘Miss u’)]if ((x<em>0.05)<strong>2+(y*0.1)</strong>2-1)<strong>3-(x*0.05)</strong>2</em>(y<em>0.1)*</em>3 &lt;= 0 else ‘ ‘)for xin range(-30, 30)])for yin range(30, -30, -1)]))</p><hr><h4 id="结果展示："><a href="#结果展示：" class="headerlink" title="结果展示："></a>结果展示：</h4><p><img src="https:////upload-images.jianshu.io/upload_images/13914403-d8e1122a118fafc6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><hr><p>好啦，今天的Python就学到这啦，如果你有更好的图形，欢迎交流呀。</p><p>作者：叫我小包总<br>链接：<a href="https://www.jianshu.com/p/7d7966ad4d4a" target="_blank" rel="noopener">https://www.jianshu.com/p/7d7966ad4d4a</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python语法大全</title>
    <link href="http://yoursite.com/2020/06/13/Python%E8%AF%AD%E6%B3%95%E5%A4%A7%E7%BA%B2/"/>
    <id>http://yoursite.com/2020/06/13/Python%E8%AF%AD%E6%B3%95%E5%A4%A7%E7%BA%B2/</id>
    <published>2020-06-13T10:41:15.000Z</published>
    <updated>2020-06-13T10:41:15.764Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Python语法大纲(部分)</title>
    <link href="http://yoursite.com/2020/06/13/Python%E8%AF%AD%E6%B3%95%E5%A4%A7%E5%85%A8%EF%BC%88%E9%83%A8%E5%88%86%EF%BC%89/"/>
    <id>http://yoursite.com/2020/06/13/Python%E8%AF%AD%E6%B3%95%E5%A4%A7%E5%85%A8%EF%BC%88%E9%83%A8%E5%88%86%EF%BC%89/</id>
    <published>2020-06-13T10:41:15.000Z</published>
    <updated>2020-06-13T10:46:09.833Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>  <strong><em>本文章包含了Python一系列基本知识，其中包括：基本数据类型（整数，浮点数，复数，字符串）；分支语句；异常处理；函数；局部变量与全局变量；递归；组合数据类型（集合，元组，列表，字典）；文件基本操作</em></strong></p><ul><li><strong><em>\</em>基本数据类型**</strong></li></ul><p>一，数字类型及操作</p><p>​    （1）整数类型</p><p> 可正可负，无取值范围限制</p><ol><li><p>pow（x，y）：计算x^y</p><p>（2）浮点数类型</p></li><li><p>存在不确定尾数</p></li><li><p>round(x,d)：对x四舍五入，d为小数截取位数</p></li><li><p><a>e/E<b>：a*10^b</p><p>（3）复数类型</p></li><li><p>z=a+bj</p></li><li><p>z.real=a   z.imag=b</p></li></ol><p>二，数值运算操作符</p><p>eg：x//y :整数除 10//3=3 x%y :求模  10%3=1 x**y=x^y</p><p>三,数值运算函数</p><ol><li>abs(x) :绝对值  abs(-10)=10</li><li>divmod(x,y) :商余  divmod(10,3)=(3,1)</li><li>pow(x,y,z) :幂余，（x**y）%z</li><li>max(x1,x2,…xn) :求最大值 min(x1,x2,…xn) :求最小值</li><li>int(x) ：将x变成整数 float(x) :将x变成浮点数</li><li>comlex(x) :将x变成浮点数</li></ol><p>四，字符串类型的表示（由一对单引号或双引号表示的字符有序序列）</p><ol><li>&lt;字符串&gt;[M:N:K], 根据步长K对字符串进行切片</li><li>特殊字符：”\b”:回退  “\n”:换行（光标移到下行首） “\r”:回车（光标移到本行首</li></ol><p>​           </p><p>五，字符串处理函数</p><ol><li>len(x) :长度 str(x) :任意类型x所对应的字符串形式</li><li>chr(x) :x为Unicode编码，返回其对应的字符 ord（x）：相反</li></ol><p>六，字符串处理方法</p><ol><li>str.lower/upper() :返回全部字符的小/大写      “ABc”.lower()=”abc”</li><li>str.split(sep) :返回一个列表，由str根据sep被分割的部分组成       “A,B,C”.split(“,”)=[‘A’,’B’,’C’]</li><li>str.count(sub) :返回子串sub在str出现的次数       “a apple a day”.count(a)=4</li><li>str.replace(old,new) :将所有的old子串被替换为new       python”.replace(“n”,”.i”)=”pytho.i”</li><li>str.center(width,char) :字符串根据宽度width居中       “python”.center(8,”=”)= ’=python=’ </li><li>str.strip(chars) :从str中去掉其左侧和右侧chars列出的字符      “python”.strip(“pn”)=”ytho”</li><li>str.join(iter) :在iter变量除最后元素外每个元素加一个str        “,”.join(“12345”)=”1,2,3,4,5”</li></ol><p>七，字符串类型的格式化</p><p><img src="https://img-blog.csdn.net/20180803102657205?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNzM1NjMx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img">      <img src="https://img-blog.csdn.net/20180803102728945?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNzM1NjMx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p><hr><hr><hr><ul><li><strong>程序的控制结构</strong></li></ul><p>一，程序的分支结构</p><p>​    （1）单分支结构：</p><p>​       if（条件）：</p><p>​          &lt;语句块&gt;</p><p>​    （2）二分支结构：</p><p>​          if（条件）：       紧凑形式：</p><p>​            &lt;语句块1&gt;       &lt;表达式1&gt; if &lt;条件&gt; else &lt;表达式2&gt;</p><p>​         else:</p><p>​            &lt;语句块2&gt;</p><p>​    （3）多分支结构：</p><p>​      if（条件1）：</p><p>​        &lt;语句块1&gt;</p><p>​     elif（条件2）：</p><p>​       &lt;语句块2&gt;</p><p>​    ……</p><p>​     else:</p><p>​       &lt;语句块N&gt;</p><p>二,程序的异常处理</p><p>（1）异常处理的基本使用：</p><p>   try：            </p><p>&lt;语句块1&gt;</p><p>   except:</p><p> &lt;语句块2&gt;</p><p>（2）异常处理的高级使用：</p><p>   try:</p><p>​    &lt;语句块1&gt;</p><p>   except:</p><p>​    &lt;语句块2&gt;</p><p>   else:</p><p>​    &lt;语句块3&gt;     #在不发生异常时执行</p><p>   finally:</p><p>.   &lt;语句块4&gt;     #一定执行</p><p>三，程序的循环结构</p><p>  （1）遍历循环：</p><p>​    for &lt;循环变量&gt; in &lt;遍历结构&gt;:</p><p>​      &lt;语句块&gt;</p><p>（2）无限循环：</p><p>​    while&lt;条件&gt;:</p><p>​      &lt;语句块&gt;</p><p>（3）循环控制保留字</p><p>​    break：跳出并结束当前整个循环</p><p>​    continue：结束当次循环</p><hr><hr><hr><ul><li><strong>函数和代码复用</strong></li></ul><p>一，函数的定义和使用</p><p>（1）函数的定义：</p><p>​    a， 一般函数</p><p>​     def&lt;函数名&gt;(参数（0个或多个）):</p><p>​        &lt;函数体&gt;</p><p>​        return &lt;返回值&gt;</p><p>   b， lambda函数</p><p>​    &lt;函数名&gt;=lambda&lt;参数&gt;:&lt;表达式&gt;</p><p>（2）函数的返回值</p><p>​    函数可以返回0个或多个结果</p><p>（3）局部变量和全局变量</p><p>   #1：局部变量和全局变量是不同变量。可重名；函数运算结束后，局部变量被释放；可通过global保留字在函数内使用全局变量</p><p>  #2：局部变量为组合数据类型且未被创建，等于全局变量</p><p>二，代码复用和函数递归</p><p>（1）递归的定义：（数学归纳法的编程体现）</p><p>​    链条：计算过程存在递归链条</p><p>   基例：存在一个或多个不需要再次递归的基例</p><p>（2）递归的实现</p><p>   函数+分支语句</p><hr><hr><hr><ul><li><strong>组合数据类型</strong></li></ul><p>一，集合类型及操作</p><p>（1）集合类型的定义（多个 元素[唯一，不可更改] 的无序组合）</p><p>​    集合用{}表示，元素间用，分隔</p><p>​    建立集合类型用{}或set（）</p><p>（2）集合操作符</p><p><img src="https://img-blog.csdn.net/20180803111727885?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNzM1NjMx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p><p>（3）集合处理方法</p><p><img src="https://img-blog.csdn.net/20180803111937554?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNzM1NjMx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img">     <img src="https://img-blog.csdn.net/20180803112008637?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNzM1NjMx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p><p>二，序列类型及操作</p><p>（1）元组类型：</p><p>  #1   元组是一种序列类型，一旦创建就不能修改</p><p>  #2  使用（）或tuple（）创建，元素间用，分隔。可以使用或不使用()</p><p>  #3  元组继承了序列的全部操作，因为不难修改，所以没有特殊操作</p><p><img src="https://img-blog.csdn.net/20180803112940676?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNzM1NjMx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"> <img src="https://img-blog.csdn.net/2018080311295768?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNzM1NjMx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p><p>（2）列表类型</p><p>#1  列表是一种序列类型，创建后可以被修改</p><p>#2  使用[ ]或list（）创建，元素间用，分隔。各元素类型可以不同</p><p>#3  列表操作：</p><p><img src="https://img-blog.csdn.net/20180803113609247?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNzM1NjMx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p><p><img src="https://img-blog.csdn.net/20180803113627845?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNzM1NjMx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p><p>（3）字典类型（映射的体现）</p><p> #1  键值对的集合，键值对之间无序</p><p> #2  采用{}和dict（）创建，键值对用：表示</p><p> #3  字典操作：</p><p><img src="https://img-blog.csdn.net/20180803211259243?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNzM1NjMx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img">    <img src="https://img-blog.csdn.net/20180803211313739?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNzM1NjMx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p><hr><hr><hr><ul><li><strong>文件处理</strong></li></ul><p>一，文件的使用</p><p>（1）文件的打开和关闭</p><p><img src="https://img-blog.csdn.net/20180803114238106?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNzM1NjMx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img">      <img src="https://img-blog.csdn.net/20180803114322350?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNzM1NjMx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p><p><img src="https://img-blog.csdn.net/20180803114414415?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNzM1NjMx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img">      <img src="https://img-blog.csdn.net/20180803114507512?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNzM1NjMx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p><p>（2）文件内容的读取</p><p><img src="https://img-blog.csdn.net/20180803115043494?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNzM1NjMx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img">   <img src="https://img-blog.csdn.net/20180803115059241?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNzM1NjMx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p><p>（3）数据文件的写入</p><p><img src="https://img-blog.csdn.net/2018080311535729?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNzM1NjMx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img">   <img src="https://img-blog.csdn.net/20180803115418582?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNzM1NjMx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python 练习100例</title>
    <link href="http://yoursite.com/2020/06/13/Python-%E7%BB%83%E4%B9%A0100%E4%BE%8B/"/>
    <id>http://yoursite.com/2020/06/13/Python-%E7%BB%83%E4%B9%A0100%E4%BE%8B/</id>
    <published>2020-06-13T10:32:00.000Z</published>
    <updated>2020-06-13T10:32:21.607Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>  以下实例在Python2.7下测试通过：</p><ul><li><a href="https://www.runoob.com/python/python-exercise-example1.html" target="_blank" rel="noopener">Python 练习实例1</a></li><li><a href="https://www.runoob.com/python/python-exercise-example2.html" target="_blank" rel="noopener">Python 练习实例2</a></li><li><a href="https://www.runoob.com/python/python-exercise-example3.html" target="_blank" rel="noopener">Python 练习实例3</a></li><li><a href="https://www.runoob.com/python/python-exercise-example4.html" target="_blank" rel="noopener">Python 练习实例4</a></li><li><a href="https://www.runoob.com/python/python-exercise-example5.html" target="_blank" rel="noopener">Python 练习实例5</a></li><li><a href="https://www.runoob.com/python/python-exercise-example6.html" target="_blank" rel="noopener">Python 练习实例6</a></li><li><a href="https://www.runoob.com/python/python-exercise-example7.html" target="_blank" rel="noopener">Python 练习实例7</a></li><li><a href="https://www.runoob.com/python/python-exercise-example8.html" target="_blank" rel="noopener">Python 练习实例8</a></li><li><a href="https://www.runoob.com/python/python-exercise-example9.html" target="_blank" rel="noopener">Python 练习实例9</a></li><li><a href="https://www.runoob.com/python/python-exercise-example10.html" target="_blank" rel="noopener">Python 练习实例10</a></li><li><a href="https://www.runoob.com/python/python-exercise-example11.html" target="_blank" rel="noopener">Python 练习实例11</a></li><li><a href="https://www.runoob.com/python/python-exercise-example12.html" target="_blank" rel="noopener">Python 练习实例12</a></li><li><a href="https://www.runoob.com/python/python-exercise-example13.html" target="_blank" rel="noopener">Python 练习实例13</a></li><li><a href="https://www.runoob.com/python/python-exercise-example14.html" target="_blank" rel="noopener">Python 练习实例14</a></li><li><a href="https://www.runoob.com/python/python-exercise-example15.html" target="_blank" rel="noopener">Python 练习实例15</a></li><li><a href="https://www.runoob.com/python/python-exercise-example16.html" target="_blank" rel="noopener">Python 练习实例16</a></li><li><a href="https://www.runoob.com/python/python-exercise-example17.html" target="_blank" rel="noopener">Python 练习实例17</a></li><li><a href="https://www.runoob.com/python/python-exercise-example18.html" target="_blank" rel="noopener">Python 练习实例18</a></li><li><a href="https://www.runoob.com/python/python-exercise-example19.html" target="_blank" rel="noopener">Python 练习实例19</a></li><li><a href="https://www.runoob.com/python/python-exercise-example20.html" target="_blank" rel="noopener">Python 练习实例20</a></li><li><a href="https://www.runoob.com/python/python-exercise-example21.html" target="_blank" rel="noopener">Python 练习实例21</a></li><li><a href="https://www.runoob.com/python/python-exercise-example22.html" target="_blank" rel="noopener">Python 练习实例22</a></li><li><a href="https://www.runoob.com/python/python-exercise-example23.html" target="_blank" rel="noopener">Python 练习实例23</a></li><li><a href="https://www.runoob.com/python/python-exercise-example24.html" target="_blank" rel="noopener">Python 练习实例24</a></li><li><a href="https://www.runoob.com/python/python-exercise-example25.html" target="_blank" rel="noopener">Python 练习实例25</a></li><li><a href="https://www.runoob.com/python/python-exercise-example26.html" target="_blank" rel="noopener">Python 练习实例26</a></li><li><a href="https://www.runoob.com/python/python-exercise-example27.html" target="_blank" rel="noopener">Python 练习实例27</a></li><li><a href="https://www.runoob.com/python/python-exercise-example28.html" target="_blank" rel="noopener">Python 练习实例28</a></li><li><a href="https://www.runoob.com/python/python-exercise-example29.html" target="_blank" rel="noopener">Python 练习实例29</a></li><li><a href="https://www.runoob.com/python/python-exercise-example30.html" target="_blank" rel="noopener">Python 练习实例30</a></li><li><a href="https://www.runoob.com/python/python-exercise-example31.html" target="_blank" rel="noopener">Python 练习实例31</a></li><li><a href="https://www.runoob.com/python/python-exercise-example32.html" target="_blank" rel="noopener">Python 练习实例32</a></li><li><a href="https://www.runoob.com/python/python-exercise-example33.html" target="_blank" rel="noopener">Python 练习实例33</a></li><li><a href="https://www.runoob.com/python/python-exercise-example34.html" target="_blank" rel="noopener">Python 练习实例34</a></li><li><a href="https://www.runoob.com/python/python-exercise-example35.html" target="_blank" rel="noopener">Python 练习实例35</a></li><li><a href="https://www.runoob.com/python/python-exercise-example36.html" target="_blank" rel="noopener">Python 练习实例36</a></li><li><a href="https://www.runoob.com/python/python-exercise-example37.html" target="_blank" rel="noopener">Python 练习实例37</a></li><li><a href="https://www.runoob.com/python/python-exercise-example38.html" target="_blank" rel="noopener">Python 练习实例38</a></li><li><a href="https://www.runoob.com/python/python-exercise-example39.html" target="_blank" rel="noopener">Python 练习实例39</a></li><li><a href="https://www.runoob.com/python/python-exercise-example40.html" target="_blank" rel="noopener">Python 练习实例40</a></li><li><a href="https://www.runoob.com/python/python-exercise-example41.html" target="_blank" rel="noopener">Python 练习实例41</a></li><li><a href="https://www.runoob.com/python/python-exercise-example42.html" target="_blank" rel="noopener">Python 练习实例42</a></li><li><a href="https://www.runoob.com/python/python-exercise-example43.html" target="_blank" rel="noopener">Python 练习实例43</a></li><li><a href="https://www.runoob.com/python/python-exercise-example44.html" target="_blank" rel="noopener">Python 练习实例44</a></li><li><a href="https://www.runoob.com/python/python-exercise-example45.html" target="_blank" rel="noopener">Python 练习实例45</a></li><li><a href="https://www.runoob.com/python/python-exercise-example46.html" target="_blank" rel="noopener">Python 练习实例46</a></li><li><a href="https://www.runoob.com/python/python-exercise-example47.html" target="_blank" rel="noopener">Python 练习实例47</a></li><li><a href="https://www.runoob.com/python/python-exercise-example48.html" target="_blank" rel="noopener">Python 练习实例48</a></li><li><a href="https://www.runoob.com/python/python-exercise-example49.html" target="_blank" rel="noopener">Python 练习实例49</a></li><li><a href="https://www.runoob.com/python/python-exercise-example50.html" target="_blank" rel="noopener">Python 练习实例50</a></li><li><a href="https://www.runoob.com/python/python-exercise-example51.html" target="_blank" rel="noopener">Python 练习实例51</a></li><li><a href="https://www.runoob.com/python/python-exercise-example52.html" target="_blank" rel="noopener">Python 练习实例52</a></li><li><a href="https://www.runoob.com/python/python-exercise-example53.html" target="_blank" rel="noopener">Python 练习实例53</a></li><li><a href="https://www.runoob.com/python/python-exercise-example54.html" target="_blank" rel="noopener">Python 练习实例54</a></li><li><a href="https://www.runoob.com/python/python-exercise-example55.html" target="_blank" rel="noopener">Python 练习实例55</a></li><li><a href="https://www.runoob.com/python/python-exercise-example56.html" target="_blank" rel="noopener">Python 练习实例56</a></li><li><a href="https://www.runoob.com/python/python-exercise-example57.html" target="_blank" rel="noopener">Python 练习实例57</a></li><li><a href="https://www.runoob.com/python/python-exercise-example58.html" target="_blank" rel="noopener">Python 练习实例58</a></li><li><a href="https://www.runoob.com/python/python-exercise-example59.html" target="_blank" rel="noopener">Python 练习实例59</a></li><li><a href="https://www.runoob.com/python/python-exercise-example60.html" target="_blank" rel="noopener">Python 练习实例60</a></li><li><a href="https://www.runoob.com/python/python-exercise-example61.html" target="_blank" rel="noopener">Python 练习实例61</a></li><li><a href="https://www.runoob.com/python/python-exercise-example62.html" target="_blank" rel="noopener">Python 练习实例62</a></li><li><a href="https://www.runoob.com/python/python-exercise-example63.html" target="_blank" rel="noopener">Python 练习实例63</a></li><li><a href="https://www.runoob.com/python/python-exercise-example64.html" target="_blank" rel="noopener">Python 练习实例64</a></li><li><a href="https://www.runoob.com/python/python-exercise-example65.html" target="_blank" rel="noopener">Python 练习实例65</a></li><li><a href="https://www.runoob.com/python/python-exercise-example66.html" target="_blank" rel="noopener">Python 练习实例66</a></li><li><a href="https://www.runoob.com/python/python-exercise-example67.html" target="_blank" rel="noopener">Python 练习实例67</a></li><li><a href="https://www.runoob.com/python/python-exercise-example68.html" target="_blank" rel="noopener">Python 练习实例68</a></li><li><a href="https://www.runoob.com/python/python-exercise-example69.html" target="_blank" rel="noopener">Python 练习实例69</a></li><li><a href="https://www.runoob.com/python/python-exercise-example70.html" target="_blank" rel="noopener">Python 练习实例70</a></li><li><a href="https://www.runoob.com/python/python-exercise-example71.html" target="_blank" rel="noopener">Python 练习实例71</a></li><li><a href="https://www.runoob.com/python/python-exercise-example72.html" target="_blank" rel="noopener">Python 练习实例72</a></li><li><a href="https://www.runoob.com/python/python-exercise-example73.html" target="_blank" rel="noopener">Python 练习实例73</a></li><li><a href="https://www.runoob.com/python/python-exercise-example74.html" target="_blank" rel="noopener">Python 练习实例74</a></li><li><a href="https://www.runoob.com/python/python-exercise-example75.html" target="_blank" rel="noopener">Python 练习实例75</a></li><li><a href="https://www.runoob.com/python/python-exercise-example76.html" target="_blank" rel="noopener">Python 练习实例76</a></li><li><a href="https://www.runoob.com/python/python-exercise-example77.html" target="_blank" rel="noopener">Python 练习实例77</a></li><li><a href="https://www.runoob.com/python/python-exercise-example78.html" target="_blank" rel="noopener">Python 练习实例78</a></li><li><a href="https://www.runoob.com/python/python-exercise-example79.html" target="_blank" rel="noopener">Python 练习实例79</a></li><li><a href="https://www.runoob.com/python/python-exercise-example80.html" target="_blank" rel="noopener">Python 练习实例80</a></li><li><a href="https://www.runoob.com/python/python-exercise-example81.html" target="_blank" rel="noopener">Python 练习实例81</a></li><li><a href="https://www.runoob.com/python/python-exercise-example82.html" target="_blank" rel="noopener">Python 练习实例82</a></li><li><a href="https://www.runoob.com/python/python-exercise-example83.html" target="_blank" rel="noopener">Python 练习实例83</a></li><li><a href="https://www.runoob.com/python/python-exercise-example84.html" target="_blank" rel="noopener">Python 练习实例84</a></li><li><a href="https://www.runoob.com/python/python-exercise-example85.html" target="_blank" rel="noopener">Python 练习实例85</a></li><li><a href="https://www.runoob.com/python/python-exercise-example86.html" target="_blank" rel="noopener">Python 练习实例86</a></li><li><a href="https://www.runoob.com/python/python-exercise-example87.html" target="_blank" rel="noopener">Python 练习实例87</a></li><li><a href="https://www.runoob.com/python/python-exercise-example88.html" target="_blank" rel="noopener">Python 练习实例88</a></li><li><a href="https://www.runoob.com/python/python-exercise-example89.html" target="_blank" rel="noopener">Python 练习实例89</a></li><li><a href="https://www.runoob.com/python/python-exercise-example90.html" target="_blank" rel="noopener">Python 练习实例90</a></li><li><a href="https://www.runoob.com/python/python-exercise-example91.html" target="_blank" rel="noopener">Python 练习实例91</a></li><li><a href="https://www.runoob.com/python/python-exercise-example92.html" target="_blank" rel="noopener">Python 练习实例92</a></li><li><a href="https://www.runoob.com/python/python-exercise-example93.html" target="_blank" rel="noopener">Python 练习实例93</a></li><li><a href="https://www.runoob.com/python/python-exercise-example94.html" target="_blank" rel="noopener">Python 练习实例94</a></li><li><a href="https://www.runoob.com/python/python-exercise-example95.html" target="_blank" rel="noopener">Python 练习实例95</a></li><li><a href="https://www.runoob.com/python/python-exercise-example96.html" target="_blank" rel="noopener">Python 练习实例96</a></li><li><a href="https://www.runoob.com/python/python-exercise-example97.html" target="_blank" rel="noopener">Python 练习实例97</a></li><li><a href="https://www.runoob.com/python/python-exercise-example98.html" target="_blank" rel="noopener">Python 练习实例98</a></li><li><a href="https://www.runoob.com/python/python-exercise-example99.html" target="_blank" rel="noopener">Python 练习实例99</a></li><li><a href="https://www.runoob.com/python/python-exercise-example100.html" target="_blank" rel="noopener">Python 练习实例100</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python SMTP发送邮件</title>
    <link href="http://yoursite.com/2020/06/13/Python-SMTP%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/"/>
    <id>http://yoursite.com/2020/06/13/Python-SMTP%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/</id>
    <published>2020-06-13T10:30:35.000Z</published>
    <updated>2020-06-13T10:30:59.830Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>  SMTP（Simple Mail Transfer Protocol）即简单邮件传输协议,它是一组用于由源地址到目的地址传送邮件的规则，由它来控制信件的中转方式。</p><p>python的smtplib提供了一种很方便的途径发送电子邮件。它对smtp协议进行了简单的封装。</p><p>Python创建 SMTP 对象语法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import smtplib</span><br><span class="line"></span><br><span class="line">smtpObj &#x3D; smtplib.SMTP( [host [, port [, local_hostname]]] )</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li>host: SMTP 服务器主机。 你可以指定主机的ip地址或者域名如: runoob.com，这个是可选参数。</li><li>port: 如果你提供了 host 参数, 你需要指定 SMTP 服务使用的端口号，一般情况下 SMTP 端口号为25。</li><li>local_hostname: 如果 SMTP 在你的本机上，你只需要指定服务器地址为 localhost 即可。</li></ul><p>Python SMTP 对象使用 sendmail 方法发送邮件，语法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SMTP.sendmail(from_addr, to_addrs, msg[, mail_options, rcpt_options])</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li>from_addr: 邮件发送者地址。</li><li>to_addrs: 字符串列表，邮件发送地址。</li><li>msg: 发送消息</li></ul><p>这里要注意一下第三个参数，msg 是字符串，表示邮件。我们知道邮件一般由标题，发信人，收件人，邮件内容，附件等构成，发送邮件的时候，要注意 msg 的格式。这个格式就是 smtp 协议中定义的格式。</p><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>以下执行实例需要你本机已安装了支持 SMTP 的服务，如：sendmail。</p><p>以下是一个使用 Python 发送邮件简单的实例：</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><p>#!/usr/bin/python # -<em>- coding: UTF-8 -</em>-  import smtplib from email.mime.text import MIMEText from email.header import Header  sender = ‘from@runoob.com’ receivers = [‘429240967@qq.com’]  # 接收邮件，可设置为你的QQ邮箱或者其他邮箱  # 三个参数：第一个为文本内容，第二个 plain 设置文本格式，第三个 utf-8 设置编码 message = MIMEText(‘Python 邮件发送测试…’, ‘plain’, ‘utf-8’) message[‘From’] = Header(“菜鸟教程”, ‘utf-8’)   # 发送者 message[‘To’] =  Header(“测试”, ‘utf-8’)        # 接收者  subject = ‘Python SMTP 邮件测试’ message[‘Subject’] = Header(subject, ‘utf-8’)   try:    smtpObj = smtplib.SMTP(‘localhost’)    smtpObj.sendmail(sender, receivers, message.as_string())    print “邮件发送成功” except smtplib.SMTPException:    print “Error: 无法发送邮件”</p><p>我们使用三个引号来设置邮件信息，标准邮件需要三个头部信息： <strong>From</strong>, <strong>To</strong>, 和 <strong>Subject</strong> ，每个信息直接使用空行分割。</p><p>我们通过实例化 smtplib 模块的 SMTP 对象 <em>smtpObj</em> 来连接到 SMTP 访问，并使用 <em>sendmail</em> 方法来发送信息。</p><p>执行以上程序，如果你本机安装 <strong>sendmail（邮件传输代理程序）</strong>，就会输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python test.py </span><br><span class="line">邮件发送成功</span><br></pre></td></tr></table></figure><p>查看我们的收件箱(一般在垃圾箱)，就可以查看到邮件信息：</p><p><img src="https://www.runoob.com/wp-content/uploads/2016/04/smtp1.jpg" alt="img"></p><p>如果我们本机没有 sendmail 访问，也可以使用其他邮件服务商的 SMTP 访问（QQ、网易、Google等）。</p><h2 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h2><p>#!/usr/bin/python # -<em>- coding: UTF-8 -</em>-  import smtplib from email.mime.text import MIMEText from email.header import Header  # 第三方 SMTP 服务 mail_host=”smtp.XXX.com”  #设置服务器 mail_user=”XXXX”    #用户名 mail_pass=”XXXXXX”   #口令    sender = ‘from@runoob.com’ receivers = [‘429240967@qq.com’]  # 接收邮件，可设置为你的QQ邮箱或者其他邮箱  message = MIMEText(‘Python 邮件发送测试…’, ‘plain’, ‘utf-8’) message[‘From’] = Header(“菜鸟教程”, ‘utf-8’) message[‘To’] =  Header(“测试”, ‘utf-8’)  subject = ‘Python SMTP 邮件测试’ message[‘Subject’] = Header(subject, ‘utf-8’)   try:    smtpObj = smtplib.SMTP()     smtpObj.connect(mail_host, 25)    # 25 为 SMTP 端口号    smtpObj.login(mail_user,mail_pass)      smtpObj.sendmail(sender, receivers, message.as_string())    print “邮件发送成功” except smtplib.SMTPException:    print “Error: 无法发送邮件”</p><hr><h2 id="使用Python发送HTML格式的邮件"><a href="#使用Python发送HTML格式的邮件" class="headerlink" title="使用Python发送HTML格式的邮件"></a>使用Python发送HTML格式的邮件</h2><p>Python发送HTML格式的邮件与发送纯文本消息的邮件不同之处就是将MIMEText中_subtype设置为html。具体代码如下：</p><h2 id="实例-3"><a href="#实例-3" class="headerlink" title="实例"></a>实例</h2><p>#!/usr/bin/python # -<em>- coding: UTF-8 -</em>-  import smtplib from email.mime.text import MIMEText from email.header import Header  sender = ‘from@runoob.com’ receivers = [‘429240967@qq.com’]  # 接收邮件，可设置为你的QQ邮箱或者其他邮箱  mail_msg = “”” <p>Python 邮件发送测试…</p> <p><a href="http://www.runoob.com" target="_blank" rel="noopener">这是一个链接</a></p> “”” message = MIMEText(mail_msg, ‘html’, ‘utf-8’) message[‘From’] = Header(“菜鸟教程”, ‘utf-8’) message[‘To’] =  Header(“测试”, ‘utf-8’)  subject = ‘Python SMTP 邮件测试’ message[‘Subject’] = Header(subject, ‘utf-8’)   try:    smtpObj = smtplib.SMTP(‘localhost’)    smtpObj.sendmail(sender, receivers, message.as_string())    print “邮件发送成功” except smtplib.SMTPException:    print “Error: 无法发送邮件”</p><p>执行以上程序，如果你本机安装sendmail，就会输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python test.py </span><br><span class="line">邮件发送成功</span><br></pre></td></tr></table></figure><p>查看我们的收件箱(一般在垃圾箱)，就可以查看到邮件信息：</p><p><img src="https://www.runoob.com/wp-content/uploads/2016/04/smtp2.jpg" alt="img"></p><hr><h2 id="Python-发送带附件的邮件"><a href="#Python-发送带附件的邮件" class="headerlink" title="Python 发送带附件的邮件"></a>Python 发送带附件的邮件</h2><p>发送带附件的邮件，首先要创建MIMEMultipart()实例，然后构造附件，如果有多个附件，可依次构造，最后利用smtplib.smtp发送。</p><h2 id="实例-4"><a href="#实例-4" class="headerlink" title="实例"></a>实例</h2><p>#!/usr/bin/python # -<em>- coding: UTF-8 -</em>-  import smtplib from email.mime.text import MIMEText from email.mime.multipart import MIMEMultipart from email.header import Header  sender = ‘from@runoob.com’ receivers = [‘429240967@qq.com’]  # 接收邮件，可设置为你的QQ邮箱或者其他邮箱  #创建一个带附件的实例 message = MIMEMultipart() message[‘From’] = Header(“菜鸟教程”, ‘utf-8’) message[‘To’] =  Header(“测试”, ‘utf-8’) subject = ‘Python SMTP 邮件测试’ message[‘Subject’] = Header(subject, ‘utf-8’)  #邮件正文内容 message.attach(MIMEText(‘这是菜鸟教程Python 邮件发送测试……’, ‘plain’, ‘utf-8’))  # 构造附件1，传送当前目录下的 test.txt 文件 att1 = MIMEText(open(‘test.txt’, ‘rb’).read(), ‘base64’, ‘utf-8’) att1[“Content-Type”] = ‘application/octet-stream’ # 这里的filename可以任意写，写什么名字，邮件中显示什么名字 att1[“Content-Disposition”] = ‘attachment; filename=”test.txt”‘ message.attach(att1)  # 构造附件2，传送当前目录下的 runoob.txt 文件 att2 = MIMEText(open(‘runoob.txt’, ‘rb’).read(), ‘base64’, ‘utf-8’) att2[“Content-Type”] = ‘application/octet-stream’ att2[“Content-Disposition”] = ‘attachment; filename=”runoob.txt”‘ message.attach(att2)  try:    smtpObj = smtplib.SMTP(‘localhost’)    smtpObj.sendmail(sender, receivers, message.as_string())    print “邮件发送成功” except smtplib.SMTPException:    print “Error: 无法发送邮件”</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python test.py </span><br><span class="line">邮件发送成功</span><br></pre></td></tr></table></figure><p>查看我们的收件箱(一般在垃圾箱)，就可以查看到邮件信息：</p><p><img src="https://www.runoob.com/wp-content/uploads/2013/11/smtp3.jpg" alt="img"></p><hr><h2 id="在-HTML-文本中添加图片"><a href="#在-HTML-文本中添加图片" class="headerlink" title="在 HTML 文本中添加图片"></a>在 HTML 文本中添加图片</h2><p>邮件的 HTML 文本中一般邮件服务商添加外链是无效的，正确添加图片的实例如下所示：</p><h2 id="实例-5"><a href="#实例-5" class="headerlink" title="实例"></a>实例</h2><p>#!/usr/bin/python # -<em>- coding: UTF-8 -</em>-  import smtplib from email.mime.image import MIMEImage from email.mime.multipart import MIMEMultipart from email.mime.text import MIMEText from email.header import Header  sender = ‘from@runoob.com’ receivers = [‘429240967@qq.com’]  # 接收邮件，可设置为你的QQ邮箱或者其他邮箱  msgRoot = MIMEMultipart(‘related’) msgRoot[‘From’] = Header(“菜鸟教程”, ‘utf-8’) msgRoot[‘To’] =  Header(“测试”, ‘utf-8’) subject = ‘Python SMTP 邮件测试’ msgRoot[‘Subject’] = Header(subject, ‘utf-8’)  msgAlternative = MIMEMultipart(‘alternative’) msgRoot.attach(msgAlternative)   mail_msg = “”” <p>Python 邮件发送测试…</p> <p><a href="http://www.runoob.com" target="_blank" rel="noopener">菜鸟教程链接</a></p> <p>图片演示：</p> <p><img src="cid:image1"></p> “”” msgAlternative.attach(MIMEText(mail_msg, ‘html’, ‘utf-8’))  # 指定图片为当前目录 fp = open(‘test.png’, ‘rb’) msgImage = MIMEImage(fp.read()) fp.close()  # 定义图片 ID，在 HTML 文本中引用 msgImage.add_header(‘Content-ID’, ‘<image1>‘) msgRoot.attach(msgImage)  try:    smtpObj = smtplib.SMTP(‘localhost’)    smtpObj.sendmail(sender, receivers, msgRoot.as_string())    print “邮件发送成功” except smtplib.SMTPException:    print “Error: 无法发送邮件”</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python test.py </span><br><span class="line">邮件发送成功</span><br></pre></td></tr></table></figure><p>查看我们的收件箱(如果在垃圾箱可能需要移动到收件箱才可正常显示)，就可以查看到邮件信息：</p><p><img src="https://www.runoob.com/wp-content/uploads/2016/04/smtp4.jpg" alt="img"></p><hr><h2 id="使用第三方-SMTP-服务发送"><a href="#使用第三方-SMTP-服务发送" class="headerlink" title="使用第三方 SMTP 服务发送"></a>使用第三方 SMTP 服务发送</h2><p>这里使用了 QQ 邮箱(你也可以使用 163，Gmail等)的 SMTP 服务，需要做以下配置：</p><p><img src="https://www.runoob.com/wp-content/uploads/2014/01/qqmail-set2.jpg" alt="img"></p><p>QQ 邮箱通过生成授权码来设置密码：</p><p><img src="https://www.runoob.com/wp-content/uploads/2014/01/qqmail-set.jpg" alt="img"></p><p>QQ 邮箱 SMTP 服务器地址：smtp.qq.com，ssl 端口：465。</p><p>以下实例你需要修改：发件人邮箱（你的QQ邮箱），密码，收件人邮箱（可发给自己）。</p><h2 id="QQ-SMTP"><a href="#QQ-SMTP" class="headerlink" title="QQ SMTP"></a>QQ SMTP</h2><p>#!/usr/bin/python # -<em>- coding: UTF-8 -</em>-  import smtplib from email.mime.text import MIMEText from email.utils import formataddr  my_sender=’429240967@qq.com’    # 发件人邮箱账号 my_pass = ‘xxxxxxxxxx’              # 发件人邮箱密码 my_user=’429240967@qq.com’      # 收件人邮箱账号，我这边发送给自己 def mail():    ret=True    try:        msg=MIMEText(‘填写邮件内容’,’plain’,’utf-8’)        msg[‘From’]=formataddr([“FromRunoob”,my_sender])  # 括号里的对应发件人邮箱昵称、发件人邮箱账号        msg[‘To’]=formataddr([“FK”,my_user])              # 括号里的对应收件人邮箱昵称、收件人邮箱账号        msg[‘Subject’]=”菜鸟教程发送邮件测试”                # 邮件的主题，也可以说是标题         server=smtplib.SMTP_SSL(“smtp.qq.com”, 465)  # 发件人邮箱中的SMTP服务器，端口是25        server.login(my_sender, my_pass)  # 括号中对应的是发件人邮箱账号、邮箱密码        server.sendmail(my_sender,[my_user,],msg.as_string())  # 括号中对应的是发件人邮箱账号、收件人邮箱账号、发送邮件        server.quit()  # 关闭连接    except Exception:  # 如果 try 中的语句没有执行，则会执行下面的 ret=False        ret=False    return ret  ret=mail() if ret:    print(“邮件发送成功”) else:    print(“邮件发送失败”)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python test.py </span><br><span class="line">邮件发送成功</span><br></pre></td></tr></table></figure><p>发送成功后，登陆收件人邮箱即可查看：</p><p><img src="https://www.runoob.com/wp-content/uploads/2013/11/423C9FDF-EBC5-4115-8D16-0046B5E05DBC.jpg" alt="img"></p><p>更多内容请参阅：<a href="https://docs.python.org/2/library/email-examples.html。" target="_blank" rel="noopener">https://docs.python.org/2/library/email-examples.html。</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python 网络编程</title>
    <link href="http://yoursite.com/2020/06/13/Python-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    <id>http://yoursite.com/2020/06/13/Python-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/</id>
    <published>2020-06-13T10:29:04.000Z</published>
    <updated>2020-06-13T10:29:35.261Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>  Python 提供了两个级别访问的网络服务。：</p><ul><li>低级别的网络服务支持基本的 Socket，它提供了标准的 BSD Sockets API，可以访问底层操作系统Socket接口的全部方法。</li><li>高级别的网络服务模块 SocketServer， 它提供了服务器中心类，可以简化网络服务器的开发。</li></ul><hr><h2 id="什么是-Socket"><a href="#什么是-Socket" class="headerlink" title="什么是 Socket?"></a>什么是 Socket?</h2><p>Socket又称”套接字”，应用程序通常通过”套接字”向网络发出请求或者应答网络请求，使主机间或者一台计算机上的进程间可以通讯。</p><hr><h2 id="socket-函数"><a href="#socket-函数" class="headerlink" title="socket()函数"></a>socket()函数</h2><p>Python 中，我们用 socket（）函数来创建套接字，语法格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">socket.socket([family[, type[, proto]]])</span><br></pre></td></tr></table></figure><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><ul><li>family: 套接字家族可以使AF_UNIX或者AF_INET</li><li>type: 套接字类型可以根据是面向连接的还是非连接分为<code>SOCK_STREAM</code>或<code>SOCK_DGRAM</code></li><li>protocol: 一般不填默认为0.</li></ul><h3 id="Socket-对象-内建-方法"><a href="#Socket-对象-内建-方法" class="headerlink" title="Socket 对象(内建)方法"></a>Socket 对象(内建)方法</h3><table><thead><tr><th align="left">函数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">服务器端套接字</td><td align="left"></td></tr><tr><td align="left">s.bind()</td><td align="left">绑定地址（host,port）到套接字， 在AF_INET下,以元组（host,port）的形式表示地址。</td></tr><tr><td align="left">s.listen()</td><td align="left">开始TCP监听。backlog指定在拒绝连接之前，操作系统可以挂起的最大连接数量。该值至少为1，大部分应用程序设为5就可以了。</td></tr><tr><td align="left">s.accept()</td><td align="left">被动接受TCP客户端连接,(阻塞式)等待连接的到来</td></tr><tr><td align="left">客户端套接字</td><td align="left"></td></tr><tr><td align="left">s.connect()</td><td align="left">主动初始化TCP服务器连接，。一般address的格式为元组（hostname,port），如果连接出错，返回socket.error错误。</td></tr><tr><td align="left">s.connect_ex()</td><td align="left">connect()函数的扩展版本,出错时返回出错码,而不是抛出异常</td></tr><tr><td align="left">公共用途的套接字函数</td><td align="left"></td></tr><tr><td align="left">s.recv()</td><td align="left">接收TCP数据，数据以字符串形式返回，bufsize指定要接收的最大数据量。flag提供有关消息的其他信息，通常可以忽略。</td></tr><tr><td align="left">s.send()</td><td align="left">发送TCP数据，将string中的数据发送到连接的套接字。返回值是要发送的字节数量，该数量可能小于string的字节大小。</td></tr><tr><td align="left">s.sendall()</td><td align="left">完整发送TCP数据，完整发送TCP数据。将string中的数据发送到连接的套接字，但在返回之前会尝试发送所有数据。成功返回None，失败则抛出异常。</td></tr><tr><td align="left">s.recvfrom()</td><td align="left">接收UDP数据，与recv()类似，但返回值是（data,address）。其中data是包含接收数据的字符串，address是发送数据的套接字地址。</td></tr><tr><td align="left">s.sendto()</td><td align="left">发送UDP数据，将数据发送到套接字，address是形式为（ipaddr，port）的元组，指定远程地址。返回值是发送的字节数。</td></tr><tr><td align="left">s.close()</td><td align="left">关闭套接字</td></tr><tr><td align="left">s.getpeername()</td><td align="left">返回连接套接字的远程地址。返回值通常是元组（ipaddr,port）。</td></tr><tr><td align="left">s.getsockname()</td><td align="left">返回套接字自己的地址。通常是一个元组(ipaddr,port)</td></tr><tr><td align="left">s.setsockopt(level,optname,value)</td><td align="left">设置给定套接字选项的值。</td></tr><tr><td align="left">s.getsockopt(level,optname[.buflen])</td><td align="left">返回套接字选项的值。</td></tr><tr><td align="left">s.settimeout(timeout)</td><td align="left">设置套接字操作的超时期，timeout是一个浮点数，单位是秒。值为None表示没有超时期。一般，超时期应该在刚创建套接字时设置，因为它们可能用于连接的操作（如connect()）</td></tr><tr><td align="left">s.gettimeout()</td><td align="left">返回当前超时期的值，单位是秒，如果没有设置超时期，则返回None。</td></tr><tr><td align="left">s.fileno()</td><td align="left">返回套接字的文件描述符。</td></tr><tr><td align="left">s.setblocking(flag)</td><td align="left">如果flag为0，则将套接字设为非阻塞模式，否则将套接字设为阻塞模式（默认值）。非阻塞模式下，如果调用recv()没有发现任何数据，或send()调用无法立即发送数据，那么将引起socket.error异常。</td></tr><tr><td align="left">s.makefile()</td><td align="left">创建一个与该套接字相关连的文件</td></tr></tbody></table><hr><h2 id="简单实例"><a href="#简单实例" class="headerlink" title="简单实例"></a>简单实例</h2><h3 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h3><p>我们使用 socket 模块的 <strong>socket</strong> 函数来创建一个 socket 对象。socket 对象可以通过调用其他函数来设置一个 socket 服务。</p><p>现在我们可以通过调用 <strong>bind(hostname, port)</strong> 函数来指定服务的 <em>port(端口)</em>。</p><p>接着，我们调用 socket 对象的 <em>accept</em> 方法。该方法等待客户端的连接，并返回 <em>connection</em> 对象，表示已连接到客户端。</p><p>完整代码如下：</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>#!/usr/bin/python # -<em>- coding: UTF-8 -</em>- # 文件名：server.py  import socket               # 导入 socket 模块  s = socket.socket()         # 创建 socket 对象 host = socket.gethostname() # 获取本地主机名 port = 12345                # 设置端口 s.bind((host, port))        # 绑定端口  s.listen(5)                 # 等待客户端连接 while True:    c,addr = s.accept()     # 建立客户端连接    print ‘连接地址：’, addr    c.send(‘欢迎访问菜鸟教程！’)    c.close()                # 关闭连接</p><h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h3><p>接下来我们写一个简单的客户端实例连接到以上创建的服务。端口号为 12345。</p><p><strong>socket.connect(hosname, port )</strong> 方法打开一个 TCP 连接到主机为 <em>hostname</em> 端口为 <em>port</em> 的服务商。连接后我们就可以从服务端获取数据，记住，操作完成后需要关闭连接。</p><p>完整代码如下：</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><p>#!/usr/bin/python # -<em>- coding: UTF-8 -</em>- # 文件名：client.py  import socket               # 导入 socket 模块  s = socket.socket()         # 创建 socket 对象 host = socket.gethostname() # 获取本地主机名 port = 12345                # 设置端口号  s.connect((host, port)) print s.recv(1024) s.close()</p><p>现在我们打开两个终端，第一个终端执行 server.py 文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python server.py</span><br></pre></td></tr></table></figure><p>第二个终端执行 client.py 文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python client.py </span><br><span class="line">欢迎访问菜鸟教程！</span><br></pre></td></tr></table></figure><p>这时我们再打开第一个终端，就会看到有以下信息输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">连接地址： (&#39;192.168.0.118&#39;, 62461)</span><br></pre></td></tr></table></figure><hr><h2 id="Python-Internet-模块"><a href="#Python-Internet-模块" class="headerlink" title="Python Internet 模块"></a>Python Internet 模块</h2><p>以下列出了 Python 网络编程的一些重要模块：</p><table><thead><tr><th align="left">协议</th><th align="left">功能用处</th><th align="left">端口号</th><th align="left">Python 模块</th></tr></thead><tbody><tr><td align="left">HTTP</td><td align="left">网页访问</td><td align="left">80</td><td align="left">httplib, urllib, xmlrpclib</td></tr><tr><td align="left">NNTP</td><td align="left">阅读和张贴新闻文章，俗称为”帖子”</td><td align="left">119</td><td align="left">nntplib</td></tr><tr><td align="left">FTP</td><td align="left">文件传输</td><td align="left">20</td><td align="left">ftplib, urllib</td></tr><tr><td align="left">SMTP</td><td align="left">发送邮件</td><td align="left">25</td><td align="left">smtplib</td></tr><tr><td align="left">POP3</td><td align="left">接收邮件</td><td align="left">110</td><td align="left">poplib</td></tr><tr><td align="left">IMAP4</td><td align="left">获取邮件</td><td align="left">143</td><td align="left">imaplib</td></tr><tr><td align="left">Telnet</td><td align="left">命令行</td><td align="left">23</td><td align="left">telnetlib</td></tr><tr><td align="left">Gopher</td><td align="left">信息查找</td><td align="left">70</td><td align="left">gopherlib, urllib</td></tr></tbody></table><p>更多内容可以参阅官网的 <a href="https://docs.python.org/2/library/socket.html" target="_blank" rel="noopener">Python Socket Library and Modules</a>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python 操作 MySQL 数据库</title>
    <link href="http://yoursite.com/2020/06/13/Python-%E6%93%8D%E4%BD%9C-MySQL-%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>http://yoursite.com/2020/06/13/Python-%E6%93%8D%E4%BD%9C-MySQL-%E6%95%B0%E6%8D%AE%E5%BA%93/</id>
    <published>2020-06-13T10:28:09.000Z</published>
    <updated>2020-06-13T10:28:37.510Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>  Python 标准数据库接口为 Python DB-API，Python DB-API为开发人员提供了数据库应用编程接口。</p><p>Python 数据库接口支持非常多的数据库，你可以选择适合你项目的数据库：</p><ul><li>GadFly</li><li>mSQL</li><li>MySQL</li><li>PostgreSQL</li><li>Microsoft SQL Server 2000</li><li>Informix</li><li>Interbase</li><li>Oracle</li><li>Sybase</li></ul><p>你可以访问<a href="https://wiki.python.org/moin/DatabaseInterfaces" target="_blank" rel="noopener">Python数据库接口及API</a>查看详细的支持数据库列表。</p><p>不同的数据库你需要下载不同的DB API模块，例如你需要访问Oracle数据库和Mysql数据，你需要下载Oracle和MySQL数据库模块。</p><p>DB-API 是一个规范. 它定义了一系列必须的对象和数据库存取方式, 以便为各种各样的底层数据库系统和多种多样的数据库接口程序提供一致的访问接口 。</p><p>Python的DB-API，为大多数的数据库实现了接口，使用它连接各数据库后，就可以用相同的方式操作各数据库。</p><p>Python DB-API使用流程：</p><ul><li>引入 API 模块。</li><li>获取与数据库的连接。</li><li>执行SQL语句和存储过程。</li><li>关闭数据库连接。</li></ul><hr><h2 id="什么是MySQLdb"><a href="#什么是MySQLdb" class="headerlink" title="什么是MySQLdb?"></a>什么是MySQLdb?</h2><p>MySQLdb 是用于Python链接Mysql数据库的接口，它实现了 Python 数据库 API 规范 V2.0，基于 MySQL C API 上建立的。</p><hr><h2 id="如何安装MySQLdb"><a href="#如何安装MySQLdb" class="headerlink" title="如何安装MySQLdb?"></a>如何安装MySQLdb?</h2><p>为了用DB-API编写MySQL脚本，必须确保已经安装了MySQL。复制以下代码，并执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python</span><br><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line"></span><br><span class="line">import MySQLdb</span><br></pre></td></tr></table></figure><p>如果执行后的输出结果如下所示，意味着你没有安装 MySQLdb 模块：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;test.py&quot;, line 3, in &lt;module&gt;</span><br><span class="line">    import MySQLdb</span><br><span class="line">ImportError: No module named MySQLdb</span><br></pre></td></tr></table></figure><p>安装MySQLdb，请访问 <a href="http://sourceforge.net/projects/mysql-python" target="_blank" rel="noopener">http://sourceforge.net/projects/mysql-python</a> ，(Linux平台可以访问：<a href="https://pypi.python.org/pypi/MySQL-python)从这里可选择适合您的平台的安装包，分为预编译的二进制文件和源代码安装包。" target="_blank" rel="noopener">https://pypi.python.org/pypi/MySQL-python)从这里可选择适合您的平台的安装包，分为预编译的二进制文件和源代码安装包。</a></p><p>如果您选择二进制文件发行版本的话，安装过程基本安装提示即可完成。如果从源代码进行安装的话，则需要切换到MySQLdb发行版本的顶级目录，并键入下列命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ gunzip MySQL-python-1.2.2.tar.gz</span><br><span class="line">$ tar -xvf MySQL-python-1.2.2.tar</span><br><span class="line">$ cd MySQL-python-1.2.2</span><br><span class="line">$ python setup.py build</span><br><span class="line">$ python setup.py install</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>请确保您有root权限来安装上述模块。</p><hr><h2 id="数据库连接"><a href="#数据库连接" class="headerlink" title="数据库连接"></a>数据库连接</h2><p>连接数据库前，请先确认以下事项：</p><ul><li>您已经创建了数据库 TESTDB.</li><li>在TESTDB数据库中您已经创建了表 EMPLOYEE</li><li>EMPLOYEE表字段为 FIRST_NAME, LAST_NAME, AGE, SEX 和 INCOME。</li><li>连接数据库TESTDB使用的用户名为 “testuser” ，密码为 “test123”,你可以可以自己设定或者直接使用root用户名及其密码，Mysql数据库用户授权请使用Grant命令。</li><li>在你的机子上已经安装了 Python MySQLdb 模块。</li><li>如果您对sql语句不熟悉，可以访问我们的 <a href="https://www.runoob.com/sql/sql-tutorial.html" target="_blank" rel="noopener">SQL基础教程</a></li></ul><h3 id="实例："><a href="#实例：" class="headerlink" title="实例："></a>实例：</h3><p>以下实例链接Mysql的TESTDB数据库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python</span><br><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line"></span><br><span class="line">import MySQLdb</span><br><span class="line"></span><br><span class="line"># 打开数据库连接</span><br><span class="line">db &#x3D; MySQLdb.connect(&quot;localhost&quot;, &quot;testuser&quot;, &quot;test123&quot;, &quot;TESTDB&quot;, charset&#x3D;&#39;utf8&#39; )</span><br><span class="line"></span><br><span class="line"># 使用cursor()方法获取操作游标 </span><br><span class="line">cursor &#x3D; db.cursor()</span><br><span class="line"></span><br><span class="line"># 使用execute方法执行SQL语句</span><br><span class="line">cursor.execute(&quot;SELECT VERSION()&quot;)</span><br><span class="line"></span><br><span class="line"># 使用 fetchone() 方法获取一条数据</span><br><span class="line">data &#x3D; cursor.fetchone()</span><br><span class="line"></span><br><span class="line">print &quot;Database version : %s &quot; % data</span><br><span class="line"></span><br><span class="line"># 关闭数据库连接</span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure><p>执行以上脚本输出结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Database version : 5.0.45</span><br></pre></td></tr></table></figure><hr><h2 id="创建数据库表"><a href="#创建数据库表" class="headerlink" title="创建数据库表"></a>创建数据库表</h2><p>如果数据库连接存在我们可以使用execute()方法来为数据库创建表，如下所示创建表EMPLOYEE：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python</span><br><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line"></span><br><span class="line">import MySQLdb</span><br><span class="line"></span><br><span class="line"># 打开数据库连接</span><br><span class="line">db &#x3D; MySQLdb.connect(&quot;localhost&quot;, &quot;testuser&quot;, &quot;test123&quot;, &quot;TESTDB&quot;, charset&#x3D;&#39;utf8&#39; )</span><br><span class="line"></span><br><span class="line"># 使用cursor()方法获取操作游标 </span><br><span class="line">cursor &#x3D; db.cursor()</span><br><span class="line"></span><br><span class="line"># 如果数据表已经存在使用 execute() 方法删除表。</span><br><span class="line">cursor.execute(&quot;DROP TABLE IF EXISTS EMPLOYEE&quot;)</span><br><span class="line"></span><br><span class="line"># 创建数据表SQL语句</span><br><span class="line">sql &#x3D; &quot;&quot;&quot;CREATE TABLE EMPLOYEE (</span><br><span class="line">         FIRST_NAME  CHAR(20) NOT NULL,</span><br><span class="line">         LAST_NAME  CHAR(20),</span><br><span class="line">         AGE INT,  </span><br><span class="line">         SEX CHAR(1),</span><br><span class="line">         INCOME FLOAT )&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">cursor.execute(sql)</span><br><span class="line"></span><br><span class="line"># 关闭数据库连接</span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure><hr><h2 id="数据库插入操作"><a href="#数据库插入操作" class="headerlink" title="数据库插入操作"></a>数据库插入操作</h2><p>以下实例使用执行 SQL INSERT 语句向表 EMPLOYEE 插入记录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python</span><br><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line"></span><br><span class="line">import MySQLdb</span><br><span class="line"></span><br><span class="line"># 打开数据库连接</span><br><span class="line">db &#x3D; MySQLdb.connect(&quot;localhost&quot;, &quot;testuser&quot;, &quot;test123&quot;, &quot;TESTDB&quot;, charset&#x3D;&#39;utf8&#39; )</span><br><span class="line"></span><br><span class="line"># 使用cursor()方法获取操作游标 </span><br><span class="line">cursor &#x3D; db.cursor()</span><br><span class="line"></span><br><span class="line"># SQL 插入语句</span><br><span class="line">sql &#x3D; &quot;&quot;&quot;INSERT INTO EMPLOYEE(FIRST_NAME,</span><br><span class="line">         LAST_NAME, AGE, SEX, INCOME)</span><br><span class="line">         VALUES (&#39;Mac&#39;, &#39;Mohan&#39;, 20, &#39;M&#39;, 2000)&quot;&quot;&quot;</span><br><span class="line">try:</span><br><span class="line">   # 执行sql语句</span><br><span class="line">   cursor.execute(sql)</span><br><span class="line">   # 提交到数据库执行</span><br><span class="line">   db.commit()</span><br><span class="line">except:</span><br><span class="line">   # Rollback in case there is any error</span><br><span class="line">   db.rollback()</span><br><span class="line"></span><br><span class="line"># 关闭数据库连接</span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure><p>以上例子也可以写成如下形式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python</span><br><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line"></span><br><span class="line">import MySQLdb</span><br><span class="line"></span><br><span class="line"># 打开数据库连接</span><br><span class="line">db &#x3D; MySQLdb.connect(&quot;localhost&quot;, &quot;testuser&quot;, &quot;test123&quot;, &quot;TESTDB&quot;, charset&#x3D;&#39;utf8&#39; )</span><br><span class="line"></span><br><span class="line"># 使用cursor()方法获取操作游标 </span><br><span class="line">cursor &#x3D; db.cursor()</span><br><span class="line"></span><br><span class="line"># SQL 插入语句</span><br><span class="line">sql &#x3D; &quot;INSERT INTO EMPLOYEE(FIRST_NAME, \</span><br><span class="line">       LAST_NAME, AGE, SEX, INCOME) \</span><br><span class="line">       VALUES (%s, %s, %s, %s, %s )&quot; % \</span><br><span class="line">       (&#39;Mac&#39;, &#39;Mohan&#39;, 20, &#39;M&#39;, 2000)</span><br><span class="line">try:</span><br><span class="line">   # 执行sql语句</span><br><span class="line">   cursor.execute(sql)</span><br><span class="line">   # 提交到数据库执行</span><br><span class="line">   db.commit()</span><br><span class="line">except:</span><br><span class="line">   # 发生错误时回滚</span><br><span class="line">   db.rollback()</span><br><span class="line"></span><br><span class="line"># 关闭数据库连接</span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure><h3 id="实例：-1"><a href="#实例：-1" class="headerlink" title="实例："></a>实例：</h3><p>以下代码使用变量向SQL语句中传递参数:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">..................................</span><br><span class="line">user_id &#x3D; &quot;test123&quot;</span><br><span class="line">password &#x3D; &quot;password&quot;</span><br><span class="line"></span><br><span class="line">con.execute(&#39;insert into Login values(%s, %s)&#39; % \</span><br><span class="line">             (user_id, password))</span><br><span class="line">..................................</span><br></pre></td></tr></table></figure><hr><h2 id="数据库查询操作"><a href="#数据库查询操作" class="headerlink" title="数据库查询操作"></a>数据库查询操作</h2><p>Python查询Mysql使用 fetchone() 方法获取单条数据, 使用fetchall() 方法获取多条数据。</p><ul><li><strong>fetchone():</strong> 该方法获取下一个查询结果集。结果集是一个对象</li><li><strong>fetchall():</strong>接收全部的返回结果行.</li><li><strong>rowcount:</strong> 这是一个只读属性，并返回执行execute()方法后影响的行数。</li></ul><h3 id="实例：-2"><a href="#实例：-2" class="headerlink" title="实例："></a>实例：</h3><p>查询EMPLOYEE表中salary（工资）字段大于1000的所有数据：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python</span><br><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line"></span><br><span class="line">import MySQLdb</span><br><span class="line"></span><br><span class="line"># 打开数据库连接</span><br><span class="line">db &#x3D; MySQLdb.connect(&quot;localhost&quot;, &quot;testuser&quot;, &quot;test123&quot;, &quot;TESTDB&quot;, charset&#x3D;&#39;utf8&#39; )</span><br><span class="line"></span><br><span class="line"># 使用cursor()方法获取操作游标 </span><br><span class="line">cursor &#x3D; db.cursor()</span><br><span class="line"></span><br><span class="line"># SQL 查询语句</span><br><span class="line">sql &#x3D; &quot;SELECT * FROM EMPLOYEE \</span><br><span class="line">       WHERE INCOME &gt; %s&quot; % (1000)</span><br><span class="line">try:</span><br><span class="line">   # 执行SQL语句</span><br><span class="line">   cursor.execute(sql)</span><br><span class="line">   # 获取所有记录列表</span><br><span class="line">   results &#x3D; cursor.fetchall()</span><br><span class="line">   for row in results:</span><br><span class="line">      fname &#x3D; row[0]</span><br><span class="line">      lname &#x3D; row[1]</span><br><span class="line">      age &#x3D; row[2]</span><br><span class="line">      sex &#x3D; row[3]</span><br><span class="line">      income &#x3D; row[4]</span><br><span class="line">      # 打印结果</span><br><span class="line">      print &quot;fname&#x3D;%s,lname&#x3D;%s,age&#x3D;%s,sex&#x3D;%s,income&#x3D;%s&quot; % \</span><br><span class="line">             (fname, lname, age, sex, income )</span><br><span class="line">except:</span><br><span class="line">   print &quot;Error: unable to fecth data&quot;</span><br><span class="line"></span><br><span class="line"># 关闭数据库连接</span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure><p>以上脚本执行结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fname&#x3D;Mac, lname&#x3D;Mohan, age&#x3D;20, sex&#x3D;M, income&#x3D;2000</span><br></pre></td></tr></table></figure><hr><h2 id="数据库更新操作"><a href="#数据库更新操作" class="headerlink" title="数据库更新操作"></a>数据库更新操作</h2><p>更新操作用于更新数据表的的数据，以下实例将 EMPLOYEE 表中的 SEX 字段为 ‘M’ 的 AGE 字段递增 1：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python</span><br><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line"></span><br><span class="line">import MySQLdb</span><br><span class="line"></span><br><span class="line"># 打开数据库连接</span><br><span class="line">db &#x3D; MySQLdb.connect(&quot;localhost&quot;, &quot;testuser&quot;, &quot;test123&quot;, &quot;TESTDB&quot;, charset&#x3D;&#39;utf8&#39; )</span><br><span class="line"></span><br><span class="line"># 使用cursor()方法获取操作游标 </span><br><span class="line">cursor &#x3D; db.cursor()</span><br><span class="line"></span><br><span class="line"># SQL 更新语句</span><br><span class="line">sql &#x3D; &quot;UPDATE EMPLOYEE SET AGE &#x3D; AGE + 1 WHERE SEX &#x3D; &#39;%c&#39;&quot; % (&#39;M&#39;)</span><br><span class="line">try:</span><br><span class="line">   # 执行SQL语句</span><br><span class="line">   cursor.execute(sql)</span><br><span class="line">   # 提交到数据库执行</span><br><span class="line">   db.commit()</span><br><span class="line">except:</span><br><span class="line">   # 发生错误时回滚</span><br><span class="line">   db.rollback()</span><br><span class="line"></span><br><span class="line"># 关闭数据库连接</span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure><hr><h2 id="删除操作"><a href="#删除操作" class="headerlink" title="删除操作"></a>删除操作</h2><h2 id="删除操作用于删除数据表中的数据，以下实例演示了删除数据表-EMPLOYEE-中-AGE-大于-20-的所有数据：-usr-bin-python-coding-UTF-8-import-MySQLdb-打开数据库连接-db-MySQLdb-connect-quot-localhost-quot-quot-testuser-quot-quot-test123-quot-quot-TESTDB-quot-charset-39-utf8-39-使用cursor-方法获取操作游标-cursor-db-cursor-SQL-删除语句-sql-quot-DELETE-FROM-EMPLOYEE-WHERE-AGE-gt-s-quot-20-try-执行SQL语句-cursor-execute-sql-提交修改-db-commit-except-发生错误时回滚-db-rollback-关闭连接-db-close"><a href="#删除操作用于删除数据表中的数据，以下实例演示了删除数据表-EMPLOYEE-中-AGE-大于-20-的所有数据：-usr-bin-python-coding-UTF-8-import-MySQLdb-打开数据库连接-db-MySQLdb-connect-quot-localhost-quot-quot-testuser-quot-quot-test123-quot-quot-TESTDB-quot-charset-39-utf8-39-使用cursor-方法获取操作游标-cursor-db-cursor-SQL-删除语句-sql-quot-DELETE-FROM-EMPLOYEE-WHERE-AGE-gt-s-quot-20-try-执行SQL语句-cursor-execute-sql-提交修改-db-commit-except-发生错误时回滚-db-rollback-关闭连接-db-close" class="headerlink" title="删除操作用于删除数据表中的数据，以下实例演示了删除数据表 EMPLOYEE 中 AGE 大于 20 的所有数据：#!/usr/bin/python # -*- coding: UTF-8 -*- import MySQLdb # 打开数据库连接 db = MySQLdb.connect(&quot;localhost&quot;, &quot;testuser&quot;, &quot;test123&quot;, &quot;TESTDB&quot;, charset=&#39;utf8&#39; ) # 使用cursor()方法获取操作游标  cursor = db.cursor() # SQL 删除语句 sql = &quot;DELETE FROM EMPLOYEE WHERE AGE &gt; %s&quot; % (20) try:   # 执行SQL语句   cursor.execute(sql)   # 提交修改   db.commit() except:   # 发生错误时回滚   db.rollback() # 关闭连接 db.close()"></a>删除操作用于删除数据表中的数据，以下实例演示了删除数据表 EMPLOYEE 中 AGE 大于 20 的所有数据：<code>#!/usr/bin/python # -*- coding: UTF-8 -*- import MySQLdb # 打开数据库连接 db = MySQLdb.connect(&quot;localhost&quot;, &quot;testuser&quot;, &quot;test123&quot;, &quot;TESTDB&quot;, charset=&#39;utf8&#39; ) # 使用cursor()方法获取操作游标  cursor = db.cursor() # SQL 删除语句 sql = &quot;DELETE FROM EMPLOYEE WHERE AGE &gt; %s&quot; % (20) try:   # 执行SQL语句   cursor.execute(sql)   # 提交修改   db.commit() except:   # 发生错误时回滚   db.rollback() # 关闭连接 db.close()</code></h2><h2 id="执行事务"><a href="#执行事务" class="headerlink" title="执行事务"></a>执行事务</h2><p>事务机制可以确保数据一致性。</p><p>事务应该具有4个属性：原子性、一致性、隔离性、持久性。这四个属性通常称为ACID特性。</p><ul><li>原子性（atomicity）。一个事务是一个不可分割的工作单位，事务中包括的诸操作要么都做，要么都不做。</li><li>一致性（consistency）。事务必须是使数据库从一个一致性状态变到另一个一致性状态。一致性与原子性是密切相关的。</li><li>隔离性（isolation）。一个事务的执行不能被其他事务干扰。即一个事务内部的操作及使用的数据对并发的其他事务是隔离的，并发执行的各个事务之间不能互相干扰。</li><li>持久性（durability）。持续性也称永久性（permanence），指一个事务一旦提交，它对数据库中数据的改变就应该是永久性的。接下来的其他操作或故障不应该对其有任何影响。</li></ul><p>Python DB API 2.0 的事务提供了两个方法 commit 或 rollback。</p><h3 id="实例：-3"><a href="#实例：-3" class="headerlink" title="实例："></a>实例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># SQL删除记录语句</span><br><span class="line">sql &#x3D; &quot;DELETE FROM EMPLOYEE WHERE AGE &gt; %s&quot; % (20)</span><br><span class="line">try:</span><br><span class="line">   # 执行SQL语句</span><br><span class="line">   cursor.execute(sql)</span><br><span class="line">   # 向数据库提交</span><br><span class="line">   db.commit()</span><br><span class="line">except:</span><br><span class="line">   # 发生错误时回滚</span><br><span class="line">   db.rollback()</span><br></pre></td></tr></table></figure><p>对于支持事务的数据库， 在Python数据库编程中，当游标建立之时，就自动开始了一个隐形的数据库事务。</p><p>commit()方法游标的所有更新操作，rollback（）方法回滚当前游标的所有操作。每一个方法都开始了一个新的事务。</p><hr><h2 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h2><p>DB API中定义了一些数据库操作的错误及异常，下表列出了这些错误和异常:</p><table><thead><tr><th align="left">异常</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">Warning</td><td align="left">当有严重警告时触发，例如插入数据是被截断等等。必须是 StandardError 的子类。</td></tr><tr><td align="left">Error</td><td align="left">警告以外所有其他错误类。必须是 StandardError 的子类。</td></tr><tr><td align="left">InterfaceError</td><td align="left">当有数据库接口模块本身的错误（而不是数据库的错误）发生时触发。 必须是Error的子类。</td></tr><tr><td align="left">DatabaseError</td><td align="left">和数据库有关的错误发生时触发。 必须是Error的子类。</td></tr><tr><td align="left">DataError</td><td align="left">当有数据处理时的错误发生时触发，例如：除零错误，数据超范围等等。 必须是DatabaseError的子类。</td></tr><tr><td align="left">OperationalError</td><td align="left">指非用户控制的，而是操作数据库时发生的错误。例如：连接意外断开、 数据库名未找到、事务处理失败、内存分配错误等等操作数据库是发生的错误。 必须是DatabaseError的子类。</td></tr><tr><td align="left">IntegrityError</td><td align="left">完整性相关的错误，例如外键检查失败等。必须是DatabaseError子类。</td></tr><tr><td align="left">InternalError</td><td align="left">数据库的内部错误，例如游标（cursor）失效了、事务同步失败等等。 必须是DatabaseError子类。</td></tr><tr><td align="left">ProgrammingError</td><td align="left">程序错误，例如数据表（table）没找到或已存在、SQL语句语法错误、 参数数量错误等等。必须是DatabaseError的子类。</td></tr><tr><td align="left">NotSupportedError</td><td align="left">不支持错误，指使用了数据库不支持的函数或API等。例如在连接对象上 使用.rollback()函数，然而数据库并不支持事务或者事务已关闭。 必须是DatabaseError的子类。</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python CGI编程</title>
    <link href="http://yoursite.com/2020/06/13/Python-CGI%E7%BC%96%E7%A8%8B/"/>
    <id>http://yoursite.com/2020/06/13/Python-CGI%E7%BC%96%E7%A8%8B/</id>
    <published>2020-06-13T10:27:18.000Z</published>
    <updated>2020-06-13T10:27:44.943Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p> 什么是 CGI</p><p>CGI 目前由 NCSA 维护，NCSA 定义 CGI 如下：</p><p>CGI(Common Gateway Interface)，通用网关接口，它是一段程序，运行在服务器上如：HTTP 服务器，提供同客户端 HTML 页面的接口。</p><hr><h2 id="网页浏览"><a href="#网页浏览" class="headerlink" title="网页浏览"></a>网页浏览</h2><p>为了更好的了解 CGI 是如何工作的，我们可以从在网页上点击一个链接或 URL 的流程：</p><ul><li>1、使用你的浏览器访问 URL 并连接到 HTTP web 服务器。</li><li>2、Web 服务器接收到请求信息后会解析 URL，并查找访问的文件在服务器上是否存在，如果存在返回文件的内容，否则返回错误信息。</li><li>3、浏览器从服务器上接收信息，并显示接收的文件或者错误信息。</li></ul><p>CGI 程序可以是 Python 脚本，PERL 脚本，SHELL 脚本，C 或者 C++ 程序等。</p><hr><h2 id="CGI架构图"><a href="#CGI架构图" class="headerlink" title="CGI架构图"></a>CGI架构图</h2><p><img src="https://www.runoob.com/wp-content/uploads/2013/11/Cgi01.png" alt="cgiarch"></p><hr><h2 id="Web-服务器支持及配置"><a href="#Web-服务器支持及配置" class="headerlink" title="Web 服务器支持及配置"></a>Web 服务器支持及配置</h2><p>在你进行 CGI 编程前，确保您的 Web 服务器支持 CGI 及已经配置了 CGI 的处理程序。</p><p>Apache 支持 CGI 配置：</p><p>设置好CGI目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ScriptAlias &#x2F;cgi-bin&#x2F; &#x2F;var&#x2F;www&#x2F;cgi-bin&#x2F;</span><br></pre></td></tr></table></figure><p>所有的HTTP服务器执行 CGI 程序都保存在一个预先配置的目录。这个目录被称为 CGI 目录，并按照惯例，它被命名为 /var/www/cgi-bin 目录。</p><p>CGI 文件的扩展名为 <strong>.cgi</strong>，python 也可以使用 <strong>.py</strong> 扩展名。</p><p>默认情况下，Linux 服务器配置运行的 cgi-bin 目录中为 /var/www。</p><p>如果你想指定其他运行 CGI 脚本的目录，可以修改 httpd.conf 配置文件，如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory &quot;&#x2F;var&#x2F;www&#x2F;cgi-bin&quot;&gt;</span><br><span class="line">   AllowOverride None</span><br><span class="line">   Options +ExecCGI</span><br><span class="line">   Order allow,deny</span><br><span class="line">   Allow from all</span><br><span class="line">&lt;&#x2F;Directory&gt;</span><br></pre></td></tr></table></figure><p>在 AddHandler 中添加 .py 后缀，这样我们就可以访问 .py 结尾的 python 脚本文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddHandler cgi-script .cgi .pl .py</span><br></pre></td></tr></table></figure><hr><h2 id="第一个CGI程序"><a href="#第一个CGI程序" class="headerlink" title="第一个CGI程序"></a>第一个CGI程序</h2><p>我们使用 Python 创建第一个 CGI 程序，文件名为 hello.py，文件位于 /var/www/cgi-bin 目录中，内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python</span><br><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line"></span><br><span class="line">print &quot;Content-type:text&#x2F;html&quot;</span><br><span class="line">print                               # 空行，告诉服务器结束头部</span><br><span class="line">print &#39;&lt;html&gt;&#39;</span><br><span class="line">print &#39;&lt;head&gt;&#39;</span><br><span class="line">print &#39;&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;&#39;</span><br><span class="line">print &#39;&lt;title&gt;Hello World - 我的第一个 CGI 程序！&lt;&#x2F;title&gt;&#39;</span><br><span class="line">print &#39;&lt;&#x2F;head&gt;&#39;</span><br><span class="line">print &#39;&lt;body&gt;&#39;</span><br><span class="line">print &#39;&lt;h2&gt;Hello World! 我是来自菜鸟教程的第一CGI程序&lt;&#x2F;h2&gt;&#39;</span><br><span class="line">print &#39;&lt;&#x2F;body&gt;&#39;</span><br><span class="line">print &#39;&lt;&#x2F;html&gt;&#39;</span><br></pre></td></tr></table></figure><p>文件保存后修改 hello.py，修改文件权限为 755：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 hello.py</span><br></pre></td></tr></table></figure><p>以上程序在浏览器访问 <strong><a href="http://localhost/cgi-bin/hello.py" target="_blank" rel="noopener">http://localhost/cgi-bin/hello.py</a></strong> 显示结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello World! 我是来自菜鸟教程的第一CGI程序</span><br></pre></td></tr></table></figure><p>这个的hello.py脚本是一个简单的Python脚本，脚本第一行的输出内容”Content-type:text/html”发送到浏览器并告知浏览器显示的内容类型为”text/html”。</p><p>用 print 输出一个空行用于告诉服务器结束头部信息。</p><hr><h2 id="HTTP头部"><a href="#HTTP头部" class="headerlink" title="HTTP头部"></a>HTTP头部</h2><p>hello.py文件内容中的” Content-type:text/html”即为HTTP头部的一部分，它会发送给浏览器告诉浏览器文件的内容类型。</p><p>HTTP头部的格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HTTP 字段名: 字段内容</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-type: text&#x2F;html</span><br></pre></td></tr></table></figure><p>以下表格介绍了CGI程序中HTTP头部经常使用的信息：</p><table><thead><tr><th align="left">头</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">Content-type:</td><td align="left">请求的与实体对应的MIME信息。例如: Content-type:text/html</td></tr><tr><td align="left">Expires: Date</td><td align="left">响应过期的日期和时间</td></tr><tr><td align="left">Location: URL</td><td align="left">用来重定向接收方到非请求URL的位置来完成请求或标识新的资源</td></tr><tr><td align="left">Last-modified: Date</td><td align="left">请求资源的最后修改时间</td></tr><tr><td align="left">Content-length: N</td><td align="left">请求的内容长度</td></tr><tr><td align="left">Set-Cookie: String</td><td align="left">设置Http Cookie</td></tr></tbody></table><hr><h2 id="CGI环境变量"><a href="#CGI环境变量" class="headerlink" title="CGI环境变量"></a>CGI环境变量</h2><p>所有的CGI程序都接收以下的环境变量，这些变量在CGI程序中发挥了重要的作用：</p><table><thead><tr><th align="left">变量名</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">CONTENT_TYPE</td><td align="left">这个环境变量的值指示所传递来的信息的MIME类型。目前，环境变量CONTENT_TYPE一般都是：application/x-www-form-urlencoded,他表示数据来自于HTML表单。</td></tr><tr><td align="left">CONTENT_LENGTH</td><td align="left">如果服务器与CGI程序信息的传递方式是POST，这个环境变量即使从标准输入STDIN中可以读到的有效数据的字节数。这个环境变量在读取所输入的数据时必须使用。</td></tr><tr><td align="left">HTTP_COOKIE</td><td align="left">客户机内的 COOKIE 内容。</td></tr><tr><td align="left">HTTP_USER_AGENT</td><td align="left">提供包含了版本数或其他专有数据的客户浏览器信息。</td></tr><tr><td align="left">PATH_INFO</td><td align="left">这个环境变量的值表示紧接在CGI程序名之后的其他路径信息。它常常作为CGI程序的参数出现。</td></tr><tr><td align="left">QUERY_STRING</td><td align="left">如果服务器与CGI程序信息的传递方式是GET，这个环境变量的值即使所传递的信息。这个信息经跟在CGI程序名的后面，两者中间用一个问号’?’分隔。</td></tr><tr><td align="left">REMOTE_ADDR</td><td align="left">这个环境变量的值是发送请求的客户机的IP地址，例如上面的192.168.1.67。这个值总是存在的。而且它是Web客户机需要提供给Web服务器的唯一标识，可以在CGI程序中用它来区分不同的Web客户机。</td></tr><tr><td align="left">REMOTE_HOST</td><td align="left">这个环境变量的值包含发送CGI请求的客户机的主机名。如果不支持你想查询，则无需定义此环境变量。</td></tr><tr><td align="left">REQUEST_METHOD</td><td align="left">提供脚本被调用的方法。对于使用 HTTP/1.0 协议的脚本，仅 GET 和 POST 有意义。</td></tr><tr><td align="left">SCRIPT_FILENAME</td><td align="left">CGI脚本的完整路径</td></tr><tr><td align="left">SCRIPT_NAME</td><td align="left">CGI脚本的的名称</td></tr><tr><td align="left">SERVER_NAME</td><td align="left">这是你的 WEB 服务器的主机名、别名或IP地址。</td></tr><tr><td align="left">SERVER_SOFTWARE</td><td align="left">这个环境变量的值包含了调用CGI程序的HTTP服务器的名称和版本号。例如，上面的值为Apache/2.2.14(Unix)</td></tr></tbody></table><p>以下是一个简单的CGI脚本输出CGI的环境变量：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python</span><br><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line"># filename:test.py</span><br><span class="line"></span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line">print &quot;Content-type: text&#x2F;html&quot;</span><br><span class="line">print</span><br><span class="line">print &quot;&lt;meta charset&#x3D;\&quot;utf-8\&quot;&gt;&quot;</span><br><span class="line">print &quot;&lt;b&gt;环境变量&lt;&#x2F;b&gt;&lt;br&gt;&quot;;</span><br><span class="line">print &quot;&lt;ul&gt;&quot;</span><br><span class="line">for key in os.environ.keys():</span><br><span class="line">    print &quot;&lt;li&gt;&lt;span style&#x3D;&#39;color:green&#39;&gt;%30s &lt;&#x2F;span&gt; : %s &lt;&#x2F;li&gt;&quot; % (key,os.environ[key])</span><br><span class="line">print &quot;&lt;&#x2F;ul&gt;&quot;</span><br></pre></td></tr></table></figure><p>将以上点保存为 test.py ,并修改文件权限为 755，执行结果如下：</p><p><img src="https://www.runoob.com/wp-content/uploads/2013/11/0B7EB575-8393-43A0-949A-E46DCFB840FE.jpg" alt="img"></p><hr><h2 id="GET和POST方法"><a href="#GET和POST方法" class="headerlink" title="GET和POST方法"></a>GET和POST方法</h2><p>浏览器客户端通过两种方法向服务器传递信息，这两种方法就是 GET 方法和 POST 方法。</p><h3 id="使用GET方法传输数据"><a href="#使用GET方法传输数据" class="headerlink" title="使用GET方法传输数据"></a>使用GET方法传输数据</h3><p>GET方法发送编码后的用户信息到服务端，数据信息包含在请求页面的URL上，以”?”号分割, 如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.test.com&#x2F;cgi-bin&#x2F;hello.py?key1&#x3D;value1&amp;key2&#x3D;value2</span><br></pre></td></tr></table></figure><p>有关 GET 请求的其他一些注释：</p><ul><li>GET 请求可被缓存</li><li>GET 请求保留在浏览器历史记录中</li><li>GET 请求可被收藏为书签</li><li>GET 请求不应在处理敏感数据时使用</li><li>GET 请求有长度限制</li><li>GET 请求只应当用于取回数据</li></ul><h3 id="简单的url实例：GET方法"><a href="#简单的url实例：GET方法" class="headerlink" title="简单的url实例：GET方法"></a>简单的url实例：GET方法</h3><p>以下是一个简单的URL，使用GET方法向hello_get.py程序发送两个参数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;cgi-bin&#x2F;test.py?name&#x3D;菜鸟教程&amp;url&#x3D;http:&#x2F;&#x2F;www.runoob.com</span><br></pre></td></tr></table></figure><p>以下为hello_get.py文件的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python</span><br><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line"></span><br><span class="line"># filename：test.py</span><br><span class="line"></span><br><span class="line"># CGI处理模块</span><br><span class="line">import cgi, cgitb </span><br><span class="line"></span><br><span class="line"># 创建 FieldStorage 的实例化</span><br><span class="line">form &#x3D; cgi.FieldStorage() </span><br><span class="line"></span><br><span class="line"># 获取数据</span><br><span class="line">site_name &#x3D; form.getvalue(&#39;name&#39;)</span><br><span class="line">site_url  &#x3D; form.getvalue(&#39;url&#39;)</span><br><span class="line"></span><br><span class="line">print &quot;Content-type:text&#x2F;html&quot;</span><br><span class="line">print</span><br><span class="line">print &quot;&lt;html&gt;&quot;</span><br><span class="line">print &quot;&lt;head&gt;&quot;</span><br><span class="line">print &quot;&lt;meta charset&#x3D;\&quot;utf-8\&quot;&gt;&quot;</span><br><span class="line">print &quot;&lt;title&gt;菜鸟教程 CGI 测试实例&lt;&#x2F;title&gt;&quot;</span><br><span class="line">print &quot;&lt;&#x2F;head&gt;&quot;</span><br><span class="line">print &quot;&lt;body&gt;&quot;</span><br><span class="line">print &quot;&lt;h2&gt;%s官网：%s&lt;&#x2F;h2&gt;&quot; % (site_name, site_url)</span><br><span class="line">print &quot;&lt;&#x2F;body&gt;&quot;</span><br><span class="line">print &quot;&lt;&#x2F;html&gt;&quot;</span><br></pre></td></tr></table></figure><p>文件保存后修改 hello_get.py，修改文件权限为 755：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 hello_get.py</span><br></pre></td></tr></table></figure><p>浏览器请求输出结果：</p><p><img src="https://www.runoob.com/wp-content/uploads/2013/11/4C034008-B0B0-452F-AC97-C2BE37B9C7AF.jpg" alt="img"></p><h3 id="简单的表单实例：GET方法"><a href="#简单的表单实例：GET方法" class="headerlink" title="简单的表单实例：GET方法"></a>简单的表单实例：GET方法</h3><p>以下是一个通过HTML的表单使用GET方法向服务器发送两个数据，提交的服务器脚本同样是hello_get.py文件，hello_get.html 代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt;菜鸟教程(runoob.com)&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action&#x3D;&quot;&#x2F;cgi-bin&#x2F;hello_get.py&quot; method&#x3D;&quot;get&quot;&gt;</span><br><span class="line">站点名称: &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;name&quot;&gt;  &lt;br &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">站点 URL: &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;url&quot; &#x2F;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;提交&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>默认情况下 cgi-bin 目录只能存放脚本文件，我们将 hello_get.html 存储在 test 目录下，修改文件权限为 755：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 hello_get.html</span><br></pre></td></tr></table></figure><p>Gif 演示如下所示：</p><p><img src="https://www.runoob.com/wp-content/uploads/2013/11/hello_get.gif" alt="img"></p><h3 id="使用POST方法传递数据"><a href="#使用POST方法传递数据" class="headerlink" title="使用POST方法传递数据"></a>使用POST方法传递数据</h3><p>使用POST方法向服务器传递数据是更安全可靠的，像一些敏感信息如用户密码等需要使用POST传输数据。</p><p>以下同样是hello_get.py ，它也可以处理浏览器提交的POST表单数据:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python</span><br><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line"></span><br><span class="line"># CGI处理模块</span><br><span class="line">import cgi, cgitb </span><br><span class="line"></span><br><span class="line"># 创建 FieldStorage 的实例化</span><br><span class="line">form &#x3D; cgi.FieldStorage() </span><br><span class="line"></span><br><span class="line"># 获取数据</span><br><span class="line">site_name &#x3D; form.getvalue(&#39;name&#39;)</span><br><span class="line">site_url  &#x3D; form.getvalue(&#39;url&#39;)</span><br><span class="line"></span><br><span class="line">print &quot;Content-type:text&#x2F;html&quot;</span><br><span class="line">print</span><br><span class="line">print &quot;&lt;html&gt;&quot;</span><br><span class="line">print &quot;&lt;head&gt;&quot;</span><br><span class="line">print &quot;&lt;meta charset&#x3D;\&quot;utf-8\&quot;&gt;&quot;</span><br><span class="line">print &quot;&lt;title&gt;菜鸟教程 CGI 测试实例&lt;&#x2F;title&gt;&quot;</span><br><span class="line">print &quot;&lt;&#x2F;head&gt;&quot;</span><br><span class="line">print &quot;&lt;body&gt;&quot;</span><br><span class="line">print &quot;&lt;h2&gt;%s官网：%s&lt;&#x2F;h2&gt;&quot; % (site_name, site_url)</span><br><span class="line">print &quot;&lt;&#x2F;body&gt;&quot;</span><br><span class="line">print &quot;&lt;&#x2F;html&gt;&quot;</span><br></pre></td></tr></table></figure><p>以下为表单通过POST方法（<strong>method=”post”</strong>）向服务器脚本 hello_get.py 提交数据:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt;菜鸟教程(runoob.com)&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action&#x3D;&quot;&#x2F;cgi-bin&#x2F;hello_get.py&quot; method&#x3D;&quot;post&quot;&gt;</span><br><span class="line">站点名称: &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;name&quot;&gt;  &lt;br &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">站点 URL: &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;url&quot; &#x2F;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;提交&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>Gif 演示如下所示：</p><p><img src="https://www.runoob.com/wp-content/uploads/2013/11/hello_post.gif" alt="img"></p><h3 id="通过CGI程序传递checkbox数据"><a href="#通过CGI程序传递checkbox数据" class="headerlink" title="通过CGI程序传递checkbox数据"></a>通过CGI程序传递checkbox数据</h3><p>checkbox用于提交一个或者多个选项数据，HTML代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt;菜鸟教程(runoob.com)&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action&#x3D;&quot;&#x2F;cgi-bin&#x2F;checkbox.py&quot; method&#x3D;&quot;POST&quot; target&#x3D;&quot;_blank&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;checkbox&quot; name&#x3D;&quot;runoob&quot; value&#x3D;&quot;on&quot; &#x2F;&gt; 菜鸟教程</span><br><span class="line">&lt;input type&#x3D;&quot;checkbox&quot; name&#x3D;&quot;google&quot; value&#x3D;&quot;on&quot; &#x2F;&gt; Google</span><br><span class="line">&lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;选择站点&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>以下为 checkbox.py 文件的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python</span><br><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line"></span><br><span class="line"># 引入 CGI 处理模块 </span><br><span class="line">import cgi, cgitb </span><br><span class="line"></span><br><span class="line"># 创建 FieldStorage的实例 </span><br><span class="line">form &#x3D; cgi.FieldStorage() </span><br><span class="line"></span><br><span class="line"># 接收字段数据</span><br><span class="line">if form.getvalue(&#39;google&#39;):</span><br><span class="line">   google_flag &#x3D; &quot;是&quot;</span><br><span class="line">else:</span><br><span class="line">   google_flag &#x3D; &quot;否&quot;</span><br><span class="line"></span><br><span class="line">if form.getvalue(&#39;runoob&#39;):</span><br><span class="line">   runoob_flag &#x3D; &quot;是&quot;</span><br><span class="line">else:</span><br><span class="line">   runoob_flag &#x3D; &quot;否&quot;</span><br><span class="line"></span><br><span class="line">print &quot;Content-type:text&#x2F;html&quot;</span><br><span class="line">print</span><br><span class="line">print &quot;&lt;html&gt;&quot;</span><br><span class="line">print &quot;&lt;head&gt;&quot;</span><br><span class="line">print &quot;&lt;meta charset&#x3D;\&quot;utf-8\&quot;&gt;&quot;</span><br><span class="line">print &quot;&lt;title&gt;菜鸟教程 CGI 测试实例&lt;&#x2F;title&gt;&quot;</span><br><span class="line">print &quot;&lt;&#x2F;head&gt;&quot;</span><br><span class="line">print &quot;&lt;body&gt;&quot;</span><br><span class="line">print &quot;&lt;h2&gt; 菜鸟教程是否选择了 : %s&lt;&#x2F;h2&gt;&quot; % runoob_flag</span><br><span class="line">print &quot;&lt;h2&gt; Google 是否选择了 : %s&lt;&#x2F;h2&gt;&quot; % google_flag</span><br><span class="line">print &quot;&lt;&#x2F;body&gt;&quot;</span><br><span class="line">print &quot;&lt;&#x2F;html&gt;&quot;</span><br></pre></td></tr></table></figure><p>修改 checkbox.py 权限：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 checkbox.py</span><br></pre></td></tr></table></figure><p>浏览器访问 Gif 演示图：</p><p><img src="https://www.runoob.com/wp-content/uploads/2013/11/checkbox.gif" alt="img"></p><h3 id="通过CGI程序传递Radio数据"><a href="#通过CGI程序传递Radio数据" class="headerlink" title="通过CGI程序传递Radio数据"></a>通过CGI程序传递Radio数据</h3><p>Radio 只向服务器传递一个数据，HTML代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt;菜鸟教程(runoob.com)&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action&#x3D;&quot;&#x2F;cgi-bin&#x2F;radiobutton.py&quot; method&#x3D;&quot;post&quot; target&#x3D;&quot;_blank&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;radio&quot; name&#x3D;&quot;site&quot; value&#x3D;&quot;runoob&quot; &#x2F;&gt; 菜鸟教程</span><br><span class="line">&lt;input type&#x3D;&quot;radio&quot; name&#x3D;&quot;site&quot; value&#x3D;&quot;google&quot; &#x2F;&gt; Google</span><br><span class="line">&lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;提交&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>radiobutton.py 脚本代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python</span><br><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line"></span><br><span class="line"># 引入 CGI 处理模块 </span><br><span class="line">import cgi, cgitb </span><br><span class="line"></span><br><span class="line"># 创建 FieldStorage的实例 </span><br><span class="line">form &#x3D; cgi.FieldStorage() </span><br><span class="line"></span><br><span class="line"># 接收字段数据</span><br><span class="line">if form.getvalue(&#39;site&#39;):</span><br><span class="line">   site &#x3D; form.getvalue(&#39;site&#39;)</span><br><span class="line">else:</span><br><span class="line">   site &#x3D; &quot;提交数据为空&quot;</span><br><span class="line"></span><br><span class="line">print &quot;Content-type:text&#x2F;html&quot;</span><br><span class="line">print</span><br><span class="line">print &quot;&lt;html&gt;&quot;</span><br><span class="line">print &quot;&lt;head&gt;&quot;</span><br><span class="line">print &quot;&lt;meta charset&#x3D;\&quot;utf-8\&quot;&gt;&quot;</span><br><span class="line">print &quot;&lt;title&gt;菜鸟教程 CGI 测试实例&lt;&#x2F;title&gt;&quot;</span><br><span class="line">print &quot;&lt;&#x2F;head&gt;&quot;</span><br><span class="line">print &quot;&lt;body&gt;&quot;</span><br><span class="line">print &quot;&lt;h2&gt; 选中的网站是 %s&lt;&#x2F;h2&gt;&quot; % site</span><br><span class="line">print &quot;&lt;&#x2F;body&gt;&quot;</span><br><span class="line">print &quot;&lt;&#x2F;html&gt;&quot;</span><br></pre></td></tr></table></figure><p>修改 radiobutton.py 权限：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 radiobutton.py</span><br></pre></td></tr></table></figure><p>浏览器访问 Gif 演示图：</p><p><img src="https://www.runoob.com/wp-content/uploads/2013/11/radiobutton.gif" alt="img"></p><h3 id="通过CGI程序传递-Textarea-数据"><a href="#通过CGI程序传递-Textarea-数据" class="headerlink" title="通过CGI程序传递 Textarea 数据"></a>通过CGI程序传递 Textarea 数据</h3><p>Textarea 向服务器传递多行数据，HTML代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt;菜鸟教程(runoob.com)&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action&#x3D;&quot;&#x2F;cgi-bin&#x2F;textarea.py&quot; method&#x3D;&quot;post&quot; target&#x3D;&quot;_blank&quot;&gt;</span><br><span class="line">&lt;textarea name&#x3D;&quot;textcontent&quot; cols&#x3D;&quot;40&quot; rows&#x3D;&quot;4&quot;&gt;</span><br><span class="line">在这里输入内容...</span><br><span class="line">&lt;&#x2F;textarea&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;提交&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>textarea.py 脚本代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python</span><br><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line"></span><br><span class="line"># 引入 CGI 处理模块 </span><br><span class="line">import cgi, cgitb </span><br><span class="line"></span><br><span class="line"># 创建 FieldStorage的实例 </span><br><span class="line">form &#x3D; cgi.FieldStorage() </span><br><span class="line"></span><br><span class="line"># 接收字段数据</span><br><span class="line">if form.getvalue(&#39;textcontent&#39;):</span><br><span class="line">   text_content &#x3D; form.getvalue(&#39;textcontent&#39;)</span><br><span class="line">else:</span><br><span class="line">   text_content &#x3D; &quot;没有内容&quot;</span><br><span class="line"></span><br><span class="line">print &quot;Content-type:text&#x2F;html&quot;</span><br><span class="line">print</span><br><span class="line">print &quot;&lt;html&gt;&quot;</span><br><span class="line">print &quot;&lt;head&gt;&quot;;</span><br><span class="line">print &quot;&lt;meta charset&#x3D;\&quot;utf-8\&quot;&gt;&quot;</span><br><span class="line">print &quot;&lt;title&gt;菜鸟教程 CGI 测试实例&lt;&#x2F;title&gt;&quot;</span><br><span class="line">print &quot;&lt;&#x2F;head&gt;&quot;</span><br><span class="line">print &quot;&lt;body&gt;&quot;</span><br><span class="line">print &quot;&lt;h2&gt; 输入的内容是：%s&lt;&#x2F;h2&gt;&quot; % text_content</span><br><span class="line">print &quot;&lt;&#x2F;body&gt;&quot;</span><br><span class="line">print &quot;&lt;&#x2F;html&gt;&quot;</span><br></pre></td></tr></table></figure><p>修改 textarea.py 权限：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 textarea.py</span><br></pre></td></tr></table></figure><p>浏览器访问 Gif 演示图：</p><p><img src="https://www.runoob.com/wp-content/uploads/2013/11/textarea.gif" alt="img"></p><h3 id="通过CGI程序传递下拉数据。"><a href="#通过CGI程序传递下拉数据。" class="headerlink" title="通过CGI程序传递下拉数据。"></a>通过CGI程序传递下拉数据。</h3><p>HTML 下拉框代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt;菜鸟教程(runoob.com)&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action&#x3D;&quot;&#x2F;cgi-bin&#x2F;dropdown.py&quot; method&#x3D;&quot;post&quot; target&#x3D;&quot;_blank&quot;&gt;</span><br><span class="line">&lt;select name&#x3D;&quot;dropdown&quot;&gt;</span><br><span class="line">&lt;option value&#x3D;&quot;runoob&quot; selected&gt;菜鸟教程&lt;&#x2F;option&gt;</span><br><span class="line">&lt;option value&#x3D;&quot;google&quot;&gt;Google&lt;&#x2F;option&gt;</span><br><span class="line">&lt;&#x2F;select&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;提交&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>dropdown.py 脚本代码如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python</span><br><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line"></span><br><span class="line"># 引入 CGI 处理模块 </span><br><span class="line">import cgi, cgitb </span><br><span class="line"></span><br><span class="line"># 创建 FieldStorage的实例 </span><br><span class="line">form &#x3D; cgi.FieldStorage() </span><br><span class="line"></span><br><span class="line"># 接收字段数据</span><br><span class="line">if form.getvalue(&#39;dropdown&#39;):</span><br><span class="line">   dropdown_value &#x3D; form.getvalue(&#39;dropdown&#39;)</span><br><span class="line">else:</span><br><span class="line">   dropdown_value &#x3D; &quot;没有内容&quot;</span><br><span class="line"></span><br><span class="line">print &quot;Content-type:text&#x2F;html&quot;</span><br><span class="line">print</span><br><span class="line">print &quot;&lt;html&gt;&quot;</span><br><span class="line">print &quot;&lt;head&gt;&quot;</span><br><span class="line">print &quot;&lt;meta charset&#x3D;\&quot;utf-8\&quot;&gt;&quot;</span><br><span class="line">print &quot;&lt;title&gt;菜鸟教程 CGI 测试实例&lt;&#x2F;title&gt;&quot;</span><br><span class="line">print &quot;&lt;&#x2F;head&gt;&quot;</span><br><span class="line">print &quot;&lt;body&gt;&quot;</span><br><span class="line">print &quot;&lt;h2&gt; 选中的选项是：%s&lt;&#x2F;h2&gt;&quot; % dropdown_value</span><br><span class="line">print &quot;&lt;&#x2F;body&gt;&quot;</span><br><span class="line">print &quot;&lt;&#x2F;html&gt;&quot;</span><br></pre></td></tr></table></figure><p>修改 dropdown.py 权限：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 dropdown.py</span><br></pre></td></tr></table></figure><p>浏览器访问 Gif 演示图：</p><p><img src="https://www.runoob.com/wp-content/uploads/2013/11/dropdown.gif" alt="img"></p><hr><h2 id="CGI中使用Cookie"><a href="#CGI中使用Cookie" class="headerlink" title="CGI中使用Cookie"></a>CGI中使用Cookie</h2><p>在 http 协议一个很大的缺点就是不对用户身份的进行判断，这样给编程人员带来很大的不便， 而 cookie 功能的出现弥补了这个不足。</p><p>cookie 就是在客户访问脚本的同时，通过客户的浏览器，在客户硬盘上写入纪录数据 ，当下次客户访问脚本时取回数据信息，从而达到身份判别的功能，cookie 常用在身份校验中。</p><p>　</p><h3 id="cookie的语法"><a href="#cookie的语法" class="headerlink" title="cookie的语法"></a>cookie的语法</h3><p>http cookie的发送是通过http头部来实现的，他早于文件的传递，头部set-cookie的语法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-cookie:name&#x3D;name;expires&#x3D;date;path&#x3D;path;domain&#x3D;domain;secure</span><br></pre></td></tr></table></figure><ul><li><strong>name=name:</strong> 需要设置cookie的值(name不能使用”<strong>;</strong>“和”<strong>,</strong>“号),有多个name值时用 “<strong>;</strong>“ 分隔，例如：<strong>name1=name1;name2=name2;name3=name3</strong>。</li><li><strong>expires=date:</strong> cookie的有效期限,格式： expires=”Wdy,DD-Mon-YYYY HH:MM:SS”</li><li></li><li><strong>path=path:</strong> 设置cookie支持的路径,如果path是一个路径，则cookie对这个目录下的所有文件及子目录生效，例如： path=”/cgi-bin/“，如果path是一个文件，则cookie指对这个文件生效，例如：path=”/cgi-bin/cookie.cgi”。</li><li><strong>domain=domain:</strong> 对cookie生效的域名，例如：domain=”<a href="http://www.runoob.com&quot;" target="_blank" rel="noopener">www.runoob.com&quot;</a></li><li><strong>secure:</strong> 如果给出此标志，表示cookie只能通过SSL协议的https服务器来传递。</li><li>cookie的接收是通过设置环境变量HTTP_COOKIE来实现的，CGI程序可以通过检索该变量获取cookie信息。</li></ul><hr><h2 id="Cookie设置"><a href="#Cookie设置" class="headerlink" title="Cookie设置"></a>Cookie设置</h2><p>Cookie的设置非常简单，cookie会在http头部单独发送。以下实例在cookie中设置了name 和 expires：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python</span><br><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line"># </span><br><span class="line">print &#39;Content-Type: text&#x2F;html&#39;</span><br><span class="line">print &#39;Set-Cookie: name&#x3D;&quot;菜鸟教程&quot;;expires&#x3D;Wed, 28 Aug 2016 18:30:00 GMT&#39;</span><br><span class="line">print</span><br><span class="line">print &quot;&quot;&quot;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">        &lt;title&gt;菜鸟教程(runoob.com)&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;&#x2F;head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;h1&gt;Cookie set OK!&lt;&#x2F;h1&gt;</span><br><span class="line">    &lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line">&quot;&quot;&quot;</span><br></pre></td></tr></table></figure><p>将以上代码保存到 cookie_set.py，并修改 cookie_set.py 权限：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 cookie_set.py</span><br></pre></td></tr></table></figure><p>以上实例使用了 Set-Cookie 头信息来设置Cookie信息，可选项中设置了Cookie的其他属性，如过期时间Expires，域名Domain，路径Path。这些信息设置在 “Content-type:text/html”之前。</p><hr><h2 id="检索Cookie信息"><a href="#检索Cookie信息" class="headerlink" title="检索Cookie信息"></a>检索Cookie信息</h2><p>Cookie信息检索页非常简单，Cookie信息存储在CGI的环境变量HTTP_COOKIE中，存储格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">key1&#x3D;value1;key2&#x3D;value2;key3&#x3D;value3....</span><br></pre></td></tr></table></figure><p>以下是一个简单的CGI检索cookie信息的程序：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python</span><br><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line"></span><br><span class="line"># 导入模块</span><br><span class="line">import os</span><br><span class="line">import Cookie</span><br><span class="line"></span><br><span class="line">print &quot;Content-type: text&#x2F;html&quot;</span><br><span class="line">print</span><br><span class="line"></span><br><span class="line">print &quot;&quot;&quot;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt;菜鸟教程(runoob.com)&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;读取cookie信息&lt;&#x2F;h1&gt;</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">if &#39;HTTP_COOKIE&#39; in os.environ:</span><br><span class="line">    cookie_string&#x3D;os.environ.get(&#39;HTTP_COOKIE&#39;)</span><br><span class="line">    c&#x3D;Cookie.SimpleCookie()</span><br><span class="line">    c.load(cookie_string)</span><br><span class="line"></span><br><span class="line">    try:</span><br><span class="line">        data&#x3D;c[&#39;name&#39;].value</span><br><span class="line">        print &quot;cookie data: &quot;+data+&quot;&lt;br&gt;&quot;</span><br><span class="line">    except KeyError:</span><br><span class="line">        print &quot;cookie 没有设置或者已过期&lt;br&gt;&quot;</span><br><span class="line">print &quot;&quot;&quot;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br></pre></td></tr></table></figure><p>将以上代码保存到 cookie_get.py，并修改 cookie_get.py 权限：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 cookie_get.py</span><br></pre></td></tr></table></figure><p>以上 cookie 设置颜色 Gif 如下所示：</p><p><img src="https://www.runoob.com/wp-content/uploads/2013/11/cookie.gif" alt="img"></p><h3 id="文件上传实例"><a href="#文件上传实例" class="headerlink" title="文件上传实例"></a>文件上传实例</h3><p>HTML设置上传文件的表单需要设置 <strong>enctype</strong> 属性为 <strong>multipart/form-data</strong>，代码如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt;菜鸟教程(runoob.com)&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"> &lt;form enctype&#x3D;&quot;multipart&#x2F;form-data&quot; </span><br><span class="line">                     action&#x3D;&quot;&#x2F;cgi-bin&#x2F;save_file.py&quot; method&#x3D;&quot;post&quot;&gt;</span><br><span class="line">   &lt;p&gt;选中文件: &lt;input type&#x3D;&quot;file&quot; name&#x3D;&quot;filename&quot; &#x2F;&gt;&lt;&#x2F;p&gt;</span><br><span class="line">   &lt;p&gt;&lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;上传&quot; &#x2F;&gt;&lt;&#x2F;p&gt;</span><br><span class="line">   &lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>save_file.py脚本文件代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python</span><br><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line"></span><br><span class="line">import cgi, os</span><br><span class="line">import cgitb; cgitb.enable()</span><br><span class="line"></span><br><span class="line">form &#x3D; cgi.FieldStorage()</span><br><span class="line"></span><br><span class="line"># 获取文件名</span><br><span class="line">fileitem &#x3D; form[&#39;filename&#39;]</span><br><span class="line"></span><br><span class="line"># 检测文件是否上传</span><br><span class="line">if fileitem.filename:</span><br><span class="line">   # 设置文件路径 </span><br><span class="line">   fn &#x3D; os.path.basename(fileitem.filename)</span><br><span class="line">   open(&#39;&#x2F;tmp&#x2F;&#39; + fn, &#39;wb&#39;).write(fileitem.file.read())</span><br><span class="line"></span><br><span class="line">   message &#x3D; &#39;文件 &quot;&#39; + fn + &#39;&quot; 上传成功&#39;</span><br><span class="line">   </span><br><span class="line">else:</span><br><span class="line">   message &#x3D; &#39;文件没有上传&#39;</span><br><span class="line">   </span><br><span class="line">print &quot;&quot;&quot;\</span><br><span class="line">Content-Type: text&#x2F;html\n</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt;菜鸟教程(runoob.com)&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">   &lt;p&gt;%s&lt;&#x2F;p&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line">&quot;&quot;&quot; % (message,)</span><br></pre></td></tr></table></figure><p>将以上代码保存到 save_file.py，并修改 save_file.py 权限：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 save_file.py</span><br></pre></td></tr></table></figure><p>以上 cookie 设置颜色 Gif 如下所示：</p><p><img src="https://www.runoob.com/wp-content/uploads/2013/11/savefile.gif" alt="img"></p><p>如果你使用的系统是Unix/Linux，你必须替换文件分隔符，在window下只需要使用open()语句即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fn &#x3D; os.path.basename(fileitem.filename.replace(&quot;\\&quot;, &quot;&#x2F;&quot; ))</span><br></pre></td></tr></table></figure><hr><h2 id="文件下载对话框"><a href="#文件下载对话框" class="headerlink" title="文件下载对话框"></a>文件下载对话框</h2><p>我们先在当前目录下创建 foo.txt 文件，用于程序的下载。</p><p>文件下载通过设置HTTP头信息来实现，功能代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python</span><br><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line"></span><br><span class="line"># HTTP 头部</span><br><span class="line">print &quot;Content-Disposition: attachment; filename&#x3D;\&quot;foo.txt\&quot;&quot;;</span><br><span class="line">print</span><br><span class="line"># 打开文件</span><br><span class="line">fo &#x3D; open(&quot;foo.txt&quot;, &quot;rb&quot;)</span><br><span class="line"></span><br><span class="line">str &#x3D; fo.read();</span><br><span class="line">print str</span><br><span class="line"></span><br><span class="line"># 关闭文件</span><br><span class="line">fo.close()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python 正则表达式</title>
    <link href="http://yoursite.com/2020/06/13/Python-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://yoursite.com/2020/06/13/Python-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</id>
    <published>2020-06-13T10:26:07.000Z</published>
    <updated>2020-06-13T10:26:52.173Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p> 正则表达式是一个特殊的字符序列，它能帮助你方便的检查一个字符串是否与某种模式匹配。</p><p>Python 自1.5版本起增加了re 模块，它提供 Perl 风格的正则表达式模式。</p><p>re 模块使 Python 语言拥有全部的正则表达式功能。</p><p>compile 函数根据一个模式字符串和可选的标志参数生成一个正则表达式对象。该对象拥有一系列方法用于正则表达式匹配和替换。</p><p>re 模块也提供了与这些方法功能完全一致的函数，这些函数使用一个模式字符串做为它们的第一个参数。</p><p>本章节主要介绍Python中常用的正则表达式处理函数。</p><hr><h2 id="re-match函数"><a href="#re-match函数" class="headerlink" title="re.match函数"></a>re.match函数</h2><p>re.match 尝试从字符串的起始位置匹配一个模式，如果不是起始位置匹配成功的话，match()就返回none。</p><p><strong>函数语法</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">re.match(pattern, string, flags&#x3D;0)</span><br></pre></td></tr></table></figure><p>函数参数说明：</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">pattern</td><td align="left">匹配的正则表达式</td></tr><tr><td align="left">string</td><td align="left">要匹配的字符串。</td></tr><tr><td align="left">flags</td><td align="left">标志位，用于控制正则表达式的匹配方式，如：是否区分大小写，多行匹配等等。参见：<a href="https://www.runoob.com/python/python-reg-expressions.html#flags" target="_blank" rel="noopener">正则表达式修饰符 - 可选标志</a></td></tr></tbody></table><p>匹配成功re.match方法返回一个匹配的对象，否则返回None。</p><p>我们可以使用group(num) 或 groups() 匹配对象函数来获取匹配表达式。</p><table><thead><tr><th align="left">匹配对象方法</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">group(num=0)</td><td align="left">匹配的整个表达式的字符串，group() 可以一次输入多个组号，在这种情况下它将返回一个包含那些组所对应值的元组。</td></tr><tr><td align="left">groups()</td><td align="left">返回一个包含所有小组字符串的元组，从 1 到 所含的小组号。</td></tr></tbody></table><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>#!/usr/bin/python # -<em>- coding: UTF-8 -</em>-   import re print(re.match(‘www’, ‘<a href="http://www.runoob.com&#39;).span()" target="_blank" rel="noopener">www.runoob.com&#39;).span()</a>)  # 在起始位置匹配 print(re.match(‘com’, ‘<a href="http://www.runoob.com&#39;" target="_blank" rel="noopener">www.runoob.com&#39;</a>))         # 不在起始位置匹配</p><p>以上实例运行输出结果为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(0, 3)</span><br><span class="line">None</span><br></pre></td></tr></table></figure><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><p>#!/usr/bin/python import re  line = “Cats are smarter than dogs”  matchObj = re.match( r’(.<em>) are (.</em>?) .*’, line, re.M|re.I)  if matchObj:   print “matchObj.group() : “, matchObj.group()   print “matchObj.group(1) : “, matchObj.group(1)   print “matchObj.group(2) : “, matchObj.group(2) else:   print “No match!!”</p><p>以上实例执行结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">matchObj.group() :  Cats are smarter than dogs</span><br><span class="line">matchObj.group(1) :  Cats</span><br><span class="line">matchObj.group(2) :  smarter</span><br></pre></td></tr></table></figure><hr><h2 id="re-search方法"><a href="#re-search方法" class="headerlink" title="re.search方法"></a>re.search方法</h2><p>re.search 扫描整个字符串并返回第一个成功的匹配。</p><p>函数语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">re.search(pattern, string, flags&#x3D;0)</span><br></pre></td></tr></table></figure><p>函数参数说明：</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">pattern</td><td align="left">匹配的正则表达式</td></tr><tr><td align="left">string</td><td align="left">要匹配的字符串。</td></tr><tr><td align="left">flags</td><td align="left">标志位，用于控制正则表达式的匹配方式，如：是否区分大小写，多行匹配等等。</td></tr></tbody></table><p>匹配成功re.search方法返回一个匹配的对象，否则返回None。</p><p>我们可以使用group(num) 或 groups() 匹配对象函数来获取匹配表达式。</p><table><thead><tr><th align="left">匹配对象方法</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">group(num=0)</td><td align="left">匹配的整个表达式的字符串，group() 可以一次输入多个组号，在这种情况下它将返回一个包含那些组所对应值的元组。</td></tr><tr><td align="left">groups()</td><td align="left">返回一个包含所有小组字符串的元组，从 1 到 所含的小组号。</td></tr></tbody></table><h2 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h2><p>#!/usr/bin/python # -<em>- coding: UTF-8 -</em>-   import re print(re.search(‘www’, ‘<a href="http://www.runoob.com&#39;).span()" target="_blank" rel="noopener">www.runoob.com&#39;).span()</a>)  # 在起始位置匹配 print(re.search(‘com’, ‘<a href="http://www.runoob.com&#39;).span()" target="_blank" rel="noopener">www.runoob.com&#39;).span()</a>)         # 不在起始位置匹配</p><p>以上实例运行输出结果为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(0, 3)</span><br><span class="line">(11, 14)</span><br></pre></td></tr></table></figure><h2 id="实例-3"><a href="#实例-3" class="headerlink" title="实例"></a>实例</h2><p>#!/usr/bin/python import re  line = “Cats are smarter than dogs”;  searchObj = re.search( r’(.<em>) are (.</em>?) .*’, line, re.M|re.I)  if searchObj:   print “searchObj.group() : “, searchObj.group()   print “searchObj.group(1) : “, searchObj.group(1)   print “searchObj.group(2) : “, searchObj.group(2) else:   print “Nothing found!!”</p><p>以上实例执行结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">searchObj.group() :  Cats are smarter than dogs</span><br><span class="line">searchObj.group(1) :  Cats</span><br><span class="line">searchObj.group(2) :  smarter</span><br></pre></td></tr></table></figure><hr><h2 id="re-match与re-search的区别"><a href="#re-match与re-search的区别" class="headerlink" title="re.match与re.search的区别"></a>re.match与re.search的区别</h2><p>re.match只匹配字符串的开始，如果字符串开始不符合正则表达式，则匹配失败，函数返回None；而re.search匹配整个字符串，直到找到一个匹配。</p><h2 id="实例-4"><a href="#实例-4" class="headerlink" title="实例"></a>实例</h2><p>#!/usr/bin/python import re  line = “Cats are smarter than dogs”;  matchObj = re.match( r’dogs’, line, re.M|re.I) if matchObj:   print “match –&gt; matchObj.group() : “, matchObj.group() else:   print “No match!!”  matchObj = re.search( r’dogs’, line, re.M|re.I) if matchObj:   print “search –&gt; searchObj.group() : “, matchObj.group() else:   print “No match!!”</p><p>以上实例运行结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">No match!!</span><br><span class="line">search --&gt; searchObj.group() :  dogs</span><br></pre></td></tr></table></figure><hr><h2 id="检索和替换"><a href="#检索和替换" class="headerlink" title="检索和替换"></a>检索和替换</h2><p>Python 的 re 模块提供了re.sub用于替换字符串中的匹配项。</p><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">re.sub(pattern, repl, string, count&#x3D;0, flags&#x3D;0)</span><br></pre></td></tr></table></figure><p>参数：</p><ul><li>pattern : 正则中的模式字符串。</li><li>repl : 替换的字符串，也可为一个函数。</li><li>string : 要被查找替换的原始字符串。</li><li>count : 模式匹配后替换的最大次数，默认 0 表示替换所有的匹配。</li></ul><h2 id="实例-5"><a href="#实例-5" class="headerlink" title="实例"></a>实例</h2><p>#!/usr/bin/python # -<em>- coding: UTF-8 -</em>-  import re  phone = “2004-959-559 # 这是一个国外电话号码”  # 删除字符串中的 Python注释  num = re.sub(r’#.*$’, “”, phone) print “电话号码是: “, num  # 删除非数字(-)的字符串  num = re.sub(r’\D’, “”, phone) print “电话号码是 : “, num</p><p>以上实例执行结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">电话号码是:  2004-959-559 </span><br><span class="line">电话号码是 :  2004959559</span><br></pre></td></tr></table></figure><h3 id="repl-参数是一个函数"><a href="#repl-参数是一个函数" class="headerlink" title="repl 参数是一个函数"></a>repl 参数是一个函数</h3><p>以下实例中将字符串中的匹配的数字乘以 2：</p><h2 id="实例-6"><a href="#实例-6" class="headerlink" title="实例"></a>实例</h2><p>#!/usr/bin/python # -<em>- coding: UTF-8 -</em>-  import re  # 将匹配的数字乘以 2 def double(matched):    value = int(matched.group(‘value’))    return str(value * 2)  s = ‘A23G4HFD567’ print(re.sub(‘(?P<value>\d+)’, double, s))</p><p>执行输出结果为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A46G8HFD1134</span><br></pre></td></tr></table></figure><h3 id="re-compile-函数"><a href="#re-compile-函数" class="headerlink" title="re.compile 函数"></a>re.compile 函数</h3><p>compile 函数用于编译正则表达式，生成一个正则表达式（ Pattern ）对象，供 match() 和 search() 这两个函数使用。</p><p>语法格式为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">re.compile(pattern[, flags])</span><br></pre></td></tr></table></figure><p>参数：</p><ul><li><strong>pattern</strong> : 一个字符串形式的正则表达式</li><li><strong>flags</strong> : 可选，表示匹配模式，比如忽略大小写，多行模式等，具体参数为：<ol><li><strong>re.I</strong> 忽略大小写</li><li><strong>re.L</strong> 表示特殊字符集 \w, \W, \b, \B, \s, \S 依赖于当前环境</li><li><strong>re.M</strong> 多行模式</li><li><strong>re.S</strong> 即为 <strong>.</strong> 并且包括换行符在内的任意字符（<strong>.</strong> 不包括换行符）</li><li><strong>re.U</strong> 表示特殊字符集 \w, \W, \b, \B, \d, \D, \s, \S 依赖于 Unicode 字符属性数据库</li><li><strong>re.X</strong> 为了增加可读性，忽略空格和 <strong>#</strong> 后面的注释</li></ol></li></ul><h3 id="实例-7"><a href="#实例-7" class="headerlink" title="实例"></a>实例</h3><h2 id="实例-8"><a href="#实例-8" class="headerlink" title="实例"></a>实例</h2><p>&gt;&gt;&gt;import re &gt;&gt;&gt; pattern = re.compile(r’\d+’)                    # 用于匹配至少一个数字 &gt;&gt;&gt; m = pattern.match(‘one12twothree34four’)        # 查找头部，没有匹配 &gt;&gt;&gt; print m None &gt;&gt;&gt; m = pattern.match(‘one12twothree34four’, 2, 10) # 从’e’的位置开始匹配，没有匹配 &gt;&gt;&gt; print m None &gt;&gt;&gt; m = pattern.match(‘one12twothree34four’, 3, 10) # 从’1’的位置开始匹配，正好匹配 &gt;&gt;&gt; print m                                         # 返回一个 Match 对象 &lt;_sre.SRE_Match object at 0x10a42aac0&gt; &gt;&gt;&gt; m.group(0)   # 可省略 0 ‘12’ &gt;&gt;&gt; m.start(0)   # 可省略 0 3 &gt;&gt;&gt; m.end(0)     # 可省略 0 5 &gt;&gt;&gt; m.span(0)    # 可省略 0 (3, 5)</p><p>在上面，当匹配成功时返回一个 Match 对象，其中：</p><ul><li><code>group([group1, …])</code> 方法用于获得一个或多个分组匹配的字符串，当要获得整个匹配的子串时，可直接使用 <code>group()</code> 或 <code>group(0)</code>；</li><li><code>start([group])</code> 方法用于获取分组匹配的子串在整个字符串中的起始位置（子串第一个字符的索引），参数默认值为 0；</li><li><code>end([group])</code> 方法用于获取分组匹配的子串在整个字符串中的结束位置（子串最后一个字符的索引+1），参数默认值为 0；</li><li><code>span([group])</code> 方法返回 <code>(start(group), end(group))</code>。</li></ul><p>再看看一个例子：</p><h2 id="实例-9"><a href="#实例-9" class="headerlink" title="实例"></a>实例</h2><p>&gt;&gt;&gt;import re &gt;&gt;&gt; pattern = re.compile(r’([a-z]+) ([a-z]+)’, re.I)   # re.I 表示忽略大小写 &gt;&gt;&gt; m = pattern.match(‘Hello World Wide Web’) &gt;&gt;&gt; print m                               # 匹配成功，返回一个 Match 对象 &lt;_sre.SRE_Match object at 0x10bea83e8&gt; &gt;&gt;&gt; m.group(0)                            # 返回匹配成功的整个子串 ‘Hello World’ &gt;&gt;&gt; m.span(0)                             # 返回匹配成功的整个子串的索引 (0, 11) &gt;&gt;&gt; m.group(1)                            # 返回第一个分组匹配成功的子串 ‘Hello’ &gt;&gt;&gt; m.span(1)                             # 返回第一个分组匹配成功的子串的索引 (0, 5) &gt;&gt;&gt; m.group(2)                            # 返回第二个分组匹配成功的子串 ‘World’ &gt;&gt;&gt; m.span(2)                             # 返回第二个分组匹配成功的子串 (6, 11) &gt;&gt;&gt; m.groups()                            # 等价于 (m.group(1), m.group(2), …) (‘Hello’, ‘World’) &gt;&gt;&gt; m.group(3)                            # 不存在第三个分组 Traceback (most recent call last):  File “<stdin>“, line 1, in <module> IndexError: no such group</p><h3 id="findall"><a href="#findall" class="headerlink" title="findall"></a>findall</h3><p>在字符串中找到正则表达式所匹配的所有子串，并返回一个列表，如果没有找到匹配的，则返回空列表。</p><p><strong>注意：</strong> match 和 search 是匹配一次 findall 匹配所有。</p><p>语法格式为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">findall(string[, pos[, endpos]])</span><br></pre></td></tr></table></figure><p>参数：</p><ul><li><strong>string</strong> : 待匹配的字符串。</li><li><strong>pos</strong> : 可选参数，指定字符串的起始位置，默认为 0。</li><li><strong>endpos</strong> : 可选参数，指定字符串的结束位置，默认为字符串的长度。</li></ul><p>查找字符串中的所有数字：</p><h2 id="实例-10"><a href="#实例-10" class="headerlink" title="实例"></a>实例</h2><p># -<em>- coding:UTF8 -</em>-  import re  pattern = re.compile(r’\d+’)   # 查找数字 result1 = pattern.findall(‘runoob 123 google 456’) result2 = pattern.findall(‘run88oob123google456’, 0, 10)  print(result1) print(result2)</p><p>输出结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[&#39;123&#39;, &#39;456&#39;]</span><br><span class="line">[&#39;88&#39;, &#39;12&#39;]</span><br></pre></td></tr></table></figure><h3 id="re-finditer"><a href="#re-finditer" class="headerlink" title="re.finditer"></a>re.finditer</h3><p>和 findall 类似，在字符串中找到正则表达式所匹配的所有子串，并把它们作为一个迭代器返回。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">re.finditer(pattern, string, flags&#x3D;0)</span><br></pre></td></tr></table></figure><p>参数：</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">pattern</td><td align="left">匹配的正则表达式</td></tr><tr><td align="left">string</td><td align="left">要匹配的字符串。</td></tr><tr><td align="left">flags</td><td align="left">标志位，用于控制正则表达式的匹配方式，如：是否区分大小写，多行匹配等等。参见：<a href="https://www.runoob.com/python/python-reg-expressions.html#flags" target="_blank" rel="noopener">正则表达式修饰符 - 可选标志</a></td></tr></tbody></table><h2 id="实例-11"><a href="#实例-11" class="headerlink" title="实例"></a>实例</h2><p># -<em>- coding: UTF-8 -</em>-  import re  it = re.finditer(r”\d+”,”12a32bc43jf3”)  for match in it:     print (match.group() )</p><p>输出结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">12 </span><br><span class="line">32 </span><br><span class="line">43 </span><br><span class="line">3</span><br></pre></td></tr></table></figure><h3 id="re-split"><a href="#re-split" class="headerlink" title="re.split"></a>re.split</h3><p>split 方法按照能够匹配的子串将字符串分割后返回列表，它的使用形式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">re.split(pattern, string[, maxsplit&#x3D;0, flags&#x3D;0])</span><br></pre></td></tr></table></figure><p>参数：</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">pattern</td><td align="left">匹配的正则表达式</td></tr><tr><td align="left">string</td><td align="left">要匹配的字符串。</td></tr><tr><td align="left">maxsplit</td><td align="left">分隔次数，maxsplit=1 分隔一次，默认为 0，不限制次数。</td></tr><tr><td align="left">flags</td><td align="left">标志位，用于控制正则表达式的匹配方式，如：是否区分大小写，多行匹配等等。参见：<a href="https://www.runoob.com/python/python-reg-expressions.html#flags" target="_blank" rel="noopener">正则表达式修饰符 - 可选标志</a></td></tr></tbody></table><h2 id="实例-12"><a href="#实例-12" class="headerlink" title="实例"></a>实例</h2><p>&gt;&gt;&gt;import re &gt;&gt;&gt; re.split(‘\W+’, ‘runoob, runoob, runoob.’) [‘runoob’, ‘runoob’, ‘runoob’, ‘’] &gt;&gt;&gt; re.split(‘(\W+)’, ‘ runoob, runoob, runoob.’)  [‘’, ‘ ‘, ‘runoob’, ‘, ‘, ‘runoob’, ‘, ‘, ‘runoob’, ‘.’, ‘’] &gt;&gt;&gt; re.split(‘\W+’, ‘ runoob, runoob, runoob.’, 1)  [‘’, ‘runoob, runoob, runoob.’]  &gt;&gt;&gt; re.split(‘a*’, ‘hello world’)   # 对于一个找不到匹配的字符串而言，split 不会对其作出分割 [‘hello world’]</p><hr><h2 id="正则表达式对象"><a href="#正则表达式对象" class="headerlink" title="正则表达式对象"></a>正则表达式对象</h2><h3 id="re-RegexObject"><a href="#re-RegexObject" class="headerlink" title="re.RegexObject"></a>re.RegexObject</h3><p>re.compile() 返回 RegexObject 对象。</p><h3 id="re-MatchObject"><a href="#re-MatchObject" class="headerlink" title="re.MatchObject"></a>re.MatchObject</h3><p>group() 返回被 RE 匹配的字符串。</p><ul><li><strong>start()</strong> 返回匹配开始的位置</li><li><strong>end()</strong> 返回匹配结束的位置</li><li><strong>span()</strong> 返回一个元组包含匹配 (开始,结束) 的位置</li></ul><hr><h2 id="正则表达式修饰符-可选标志"><a href="#正则表达式修饰符-可选标志" class="headerlink" title="正则表达式修饰符 - 可选标志"></a>正则表达式修饰符 - 可选标志</h2><p>正则表达式可以包含一些可选标志修饰符来控制匹配的模式。修饰符被指定为一个可选的标志。多个标志可以通过按位 OR(|) 它们来指定。如 re.I | re.M 被设置成 I 和 M 标志：</p><table><thead><tr><th align="left">修饰符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">re.I</td><td align="left">使匹配对大小写不敏感</td></tr><tr><td align="left">re.L</td><td align="left">做本地化识别（locale-aware）匹配</td></tr><tr><td align="left">re.M</td><td align="left">多行匹配，影响 ^ 和 $</td></tr><tr><td align="left">re.S</td><td align="left">使 . 匹配包括换行在内的所有字符</td></tr><tr><td align="left">re.U</td><td align="left">根据Unicode字符集解析字符。这个标志影响 \w, \W, \b, \B.</td></tr><tr><td align="left">re.X</td><td align="left">该标志通过给予你更灵活的格式以便你将正则表达式写得更易于理解。</td></tr></tbody></table><hr><h2 id="正则表达式模式"><a href="#正则表达式模式" class="headerlink" title="正则表达式模式"></a>正则表达式模式</h2><p>模式字符串使用特殊的语法来表示一个正则表达式：</p><p>字母和数字表示他们自身。一个正则表达式模式中的字母和数字匹配同样的字符串。</p><p>多数字母和数字前加一个反斜杠时会拥有不同的含义。</p><p>标点符号只有被转义时才匹配自身，否则它们表示特殊的含义。</p><p>反斜杠本身需要使用反斜杠转义。</p><p>由于正则表达式通常都包含反斜杠，所以你最好使用原始字符串来表示它们。模式元素(如 r’\t’，等价于 ‘\t’)匹配相应的特殊字符。</p><p>下表列出了正则表达式模式语法中的特殊元素。如果你使用模式的同时提供了可选的标志参数，某些模式元素的含义会改变。</p><table><thead><tr><th align="left">模式</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">^</td><td align="left">匹配字符串的开头</td></tr><tr><td align="left">$</td><td align="left">匹配字符串的末尾。</td></tr><tr><td align="left">.</td><td align="left">匹配任意字符，除了换行符，当re.DOTALL标记被指定时，则可以匹配包括换行符的任意字符。</td></tr><tr><td align="left">[…]</td><td align="left">用来表示一组字符,单独列出：[amk] 匹配 ‘a’，’m’或’k’</td></tr><tr><td align="left">[^…]</td><td align="left">不在[]中的字符：[^abc] 匹配除了a,b,c之外的字符。</td></tr><tr><td align="left">re*</td><td align="left">匹配0个或多个的表达式。</td></tr><tr><td align="left">re+</td><td align="left">匹配1个或多个的表达式。</td></tr><tr><td align="left">re?</td><td align="left">匹配0个或1个由前面的正则表达式定义的片段，非贪婪方式</td></tr><tr><td align="left">re{ n}</td><td align="left">精确匹配 n 个前面表达式。例如， <strong>o{2}</strong> 不能匹配 “Bob” 中的 “o”，但是能匹配 “food” 中的两个 o。</td></tr><tr><td align="left">re{ n,}</td><td align="left">匹配 n 个前面表达式。例如， o{2,} 不能匹配”Bob”中的”o”，但能匹配 “foooood”中的所有 o。”o{1,}” 等价于 “o+”。”o{0,}” 则等价于 “o*”。</td></tr><tr><td align="left">re{ n, m}</td><td align="left">匹配 n 到 m 次由前面的正则表达式定义的片段，贪婪方式</td></tr><tr><td align="left">a| b</td><td align="left">匹配a或b</td></tr><tr><td align="left">(re)</td><td align="left">对正则表达式分组并记住匹配的文本</td></tr><tr><td align="left">(?imx)</td><td align="left">正则表达式包含三种可选标志：i, m, 或 x 。只影响括号中的区域。</td></tr><tr><td align="left">(?-imx)</td><td align="left">正则表达式关闭 i, m, 或 x 可选标志。只影响括号中的区域。</td></tr><tr><td align="left">(?: re)</td><td align="left">类似 (…), 但是不表示一个组</td></tr><tr><td align="left">(?imx: re)</td><td align="left">在括号中使用i, m, 或 x 可选标志</td></tr><tr><td align="left">(?-imx: re)</td><td align="left">在括号中不使用i, m, 或 x 可选标志</td></tr><tr><td align="left">(?#…)</td><td align="left">注释.</td></tr><tr><td align="left">(?= re)</td><td align="left">前向肯定界定符。如果所含正则表达式，以 … 表示，在当前位置成功匹配时成功，否则失败。但一旦所含表达式已经尝试，匹配引擎根本没有提高；模式的剩余部分还要尝试界定符的右边。</td></tr><tr><td align="left">(?! re)</td><td align="left">前向否定界定符。与肯定界定符相反；当所含表达式不能在字符串当前位置匹配时成功</td></tr><tr><td align="left">(?&gt; re)</td><td align="left">匹配的独立模式，省去回溯。</td></tr><tr><td align="left">\w</td><td align="left">匹配字母数字及下划线</td></tr><tr><td align="left">\W</td><td align="left">匹配非字母数字及下划线</td></tr><tr><td align="left">\s</td><td align="left">匹配任意空白字符，等价于 [\t\n\r\f].</td></tr><tr><td align="left">\S</td><td align="left">匹配任意非空字符</td></tr><tr><td align="left">\d</td><td align="left">匹配任意数字，等价于 [0-9].</td></tr><tr><td align="left">\D</td><td align="left">匹配任意非数字</td></tr><tr><td align="left">\A</td><td align="left">匹配字符串开始</td></tr><tr><td align="left">\Z</td><td align="left">匹配字符串结束，如果是存在换行，只匹配到换行前的结束字符串。</td></tr><tr><td align="left">\z</td><td align="left">匹配字符串结束</td></tr><tr><td align="left">\G</td><td align="left">匹配最后匹配完成的位置。</td></tr><tr><td align="left">\b</td><td align="left">匹配一个单词边界，也就是指单词和空格间的位置。例如， ‘er\b’ 可以匹配”never” 中的 ‘er’，但不能匹配 “verb” 中的 ‘er’。</td></tr><tr><td align="left">\B</td><td align="left">匹配非单词边界。’er\B’ 能匹配 “verb” 中的 ‘er’，但不能匹配 “never” 中的 ‘er’。</td></tr><tr><td align="left">\n, \t, 等.</td><td align="left">匹配一个换行符。匹配一个制表符。等</td></tr><tr><td align="left">\1…\9</td><td align="left">匹配第n个分组的内容。</td></tr><tr><td align="left">\10</td><td align="left">匹配第n个分组的内容，如果它经匹配。否则指的是八进制字符码的表达式。</td></tr></tbody></table><hr><h2 id="正则表达式实例"><a href="#正则表达式实例" class="headerlink" title="正则表达式实例"></a>正则表达式实例</h2><h4 id="字符匹配"><a href="#字符匹配" class="headerlink" title="字符匹配"></a>字符匹配</h4><table><thead><tr><th align="left">实例</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">python</td><td align="left">匹配 “python”.</td></tr></tbody></table><h4 id="字符类"><a href="#字符类" class="headerlink" title="字符类"></a>字符类</h4><table><thead><tr><th align="left">实例</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">[Pp]ython</td><td align="left">匹配 “Python” 或 “python”</td></tr><tr><td align="left">rub[ye]</td><td align="left">匹配 “ruby” 或 “rube”</td></tr><tr><td align="left">[aeiou]</td><td align="left">匹配中括号内的任意一个字母</td></tr><tr><td align="left">[0-9]</td><td align="left">匹配任何数字。类似于 [0123456789]</td></tr><tr><td align="left">[a-z]</td><td align="left">匹配任何小写字母</td></tr><tr><td align="left">[A-Z]</td><td align="left">匹配任何大写字母</td></tr><tr><td align="left">[a-zA-Z0-9]</td><td align="left">匹配任何字母及数字</td></tr><tr><td align="left">[^aeiou]</td><td align="left">除了aeiou字母以外的所有字符</td></tr><tr><td align="left">[^0-9]</td><td align="left">匹配除了数字外的字符</td></tr></tbody></table><h4 id="特殊字符类"><a href="#特殊字符类" class="headerlink" title="特殊字符类"></a>特殊字符类</h4><table><thead><tr><th align="left">实例</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">.</td><td align="left">匹配除 “\n” 之外的任何单个字符。要匹配包括 ‘\n’ 在内的任何字符，请使用象 ‘[.\n]’ 的模式。</td></tr><tr><td align="left">\d</td><td align="left">匹配一个数字字符。等价于 [0-9]。</td></tr><tr><td align="left">\D</td><td align="left">匹配一个非数字字符。等价于 [^0-9]。</td></tr><tr><td align="left">\s</td><td align="left">匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \f\n\r\t\v]。</td></tr><tr><td align="left">\S</td><td align="left">匹配任何非空白字符。等价于 [^ \f\n\r\t\v]。</td></tr><tr><td align="left">\w</td><td align="left">匹配包括下划线的任何单词字符。等价于’[A-Za-z0-9_]’。</td></tr><tr><td align="left">\W</td><td align="left">匹配任何非单词字符。等价于 ‘[^A-Za-z0-9_]’。</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
</feed>
